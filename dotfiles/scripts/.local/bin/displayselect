#!/bin/sh

case "$RUNNING_WM" in
i3)
	dir="$(dirname "$(readlink -f $0)")"/i3_scripts/rofi_theme
	theme="style"

	alias dmenu='rofi -no-lazy-grab -dmenu -theme "$dir/$theme"'
	;;
dwm) ;;
esac

postrun() { # Stuff to run to clean up.
	setbg      # Fix background if screen size/arangement has changed.
	killall dunst >/dev/null 2>&1
	setsid -f dunst >/dev/null 2>&1
	# dwm uses the Xinerama extension to manage multi-monitor setups, 
  # which is independent of the monitor layout set by xrandr.
	# When you use the script to configure the monitor layout, it changes
  # the layout as seen by the X server, but dwm is not aware of this change
  # and continues to use the old layout.
	# You can use the following command to synchronize dwm with the new layout:
	kill -HUP $(pgrep -u $USER "\bdwm$")
}

# Get a list of connected monitors
monitors=$(xrandr | grep " connected" | awk '{print $1}')

# Get all connected screens.
screens=$(echo "$monitors" | awk '/ connected/ {print $1}')

# Show a dmenu prompt with the options
chosen=$(echo -e "List Monitors\nMirroring\nMulti-Monitor" | dmenu -i -p "Select an option:")

if [ "$chosen" = "List Monitors" ]; then
	# Show a dmenu prompt with the list of monitors
	monitor=$(echo "$monitors" | dmenu -i -p "Select monitor:")
	for m in $monitors; do
		if [ "$m" = "$monitor" ]; then
			xrandr --output "$m" --primary --auto
		else
			xrandr --output "$m" --off
		fi
	done
	notify-send "ðŸ’» Single monitor" "$chosen is on."

elif [ "$chosen" = "Mirroring" ]; then
	# Enable mirroring on all monitors
	primary=$(echo "$monitors" | head -n1)
	others=$(echo "$monitors" | tail -n+2)
	for monitor in $others; do
		xrandr --output "$monitor" --auto --same-as "$primary"
	done
	notify-send "ðŸ’» Mirroring monitors" "$primary is the primary monitor in mirroring mode."

elif [ "$chosen" = "Multi-Monitor" ]; then
	# Set the primary monitor
	primary=$(echo "$monitors" | dmenu -i -p "Select primary monitor:")
	xrandr --output "$primary" --primary --auto

	# Set the position for each remaining monitor
	for monitor in $monitors; do
		if [ "$monitor" != "$primary" ]; then
			position=$(echo -e "left-of\nright-of\nabove\nbelow" | dmenu -i -p "Select position for $monitor:")
			xrandr --output "$monitor" --$position "$primary" --auto
		fi
	done
	notify-send "ðŸ’» Multi monitors" "$primary is the primary monitor in multi-monitor mode."

else
	echo "Invalid option selected"
fi

postrun
