!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Init	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    class Init$/;"	c	line:530	class:std::ios_base	access:public
_ALGOBASE_H	/home/damian/.vim/tags/cpp_src/stl_algobase.h	63;"	d	line:63
_ALGO_H	/home/damian/.vim/tags/cpp_src/stl_algo.h	63;"	d	line:63
_ALLOCATOR_H	/home/damian/.vim/tags/cpp_src/allocator.h	50;"	d	line:50
_Alloc_hider	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_Alloc_hider(_CharT* __dat, const _Alloc& __a)$/;"	f	line:261	struct:std::basic_string::_Alloc_hider	access:public	signature:(_CharT* __dat, const _Alloc& __a)
_Alloc_hider	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Alloc_hider : _Alloc$/;"	s	line:259	class:std::basic_string	inherits:_Alloc	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::value_type        _Alloc_value_type;$/;"	t	line:632	class:std::deque	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	line:410	class:std::list	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:104	class:std::map	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:103	class:std::multimap	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:93	class:std::multiset	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:96	class:std::set	access:private
_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	line:162	class:std::vector	access:private
_Arg	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Dom _Arg;$/;"	t	line:493	struct:std::_UnClos	access:public
_Arg	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef valarray<_Tp> _Arg;$/;"	t	line:504	struct:std::_UnClos	access:public
_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(_Tp* const __restrict__ __p)$/;"	f	line:518	class:std::_Array	signature:(_Tp* const __restrict__ __p)
_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const _Tp* __restrict__ __b, size_t __s)$/;"	f	line:528	class:std::_Array	signature:(const _Tp* __restrict__ __b, size_t __s)
_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const valarray<_Tp>& __v)$/;"	f	line:523	class:std::_Array	signature:(const valarray<_Tp>& __v)
_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(size_t __n)$/;"	f	line:512	class:std::_Array	signature:(size_t __n)
_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array$/;"	s	line:415	namespace:std
_Array_copier	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copier$/;"	s	line:255	namespace:std
_Array_copier	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copier<_Tp, true>$/;"	s	line:266	namespace:std
_Array_copy_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copy_ctor$/;"	s	line:144	namespace:std
_Array_copy_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copy_ctor<_Tp, true>$/;"	s	line:158	namespace:std
_Array_default_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_default_ctor$/;"	s	line:76	namespace:std
_Array_default_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_default_ctor<_Tp, true>$/;"	s	line:89	namespace:std
_Array_init_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_init_ctor$/;"	s	line:108	namespace:std
_Array_init_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_init_ctor<_Tp, true>$/;"	s	line:121	namespace:std
_AssignableConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _AssignableConcept$/;"	s	line:175
_AssignableConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	line:184	struct:_AssignableConcept	access:public
_AssignableConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	line:181	struct:_AssignableConcept	access:public	signature:(const _Tp& __b)
_AssignableConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:177	struct:_AssignableConcept	access:public	signature:()
_AssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _AssociativeContainerConcept$/;"	s	line:788
_AssociativeContainerConcept::_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::const_iterator _Const_iterator;$/;"	t	line:808	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::iterator _Iterator;$/;"	t	line:807	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _AssociativeContainer __c;$/;"	m	line:810	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__ci	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __ci;$/;"	m	line:813	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _AssociativeContainer& __c) {$/;"	f	line:802	struct:_AssociativeContainerConcept	access:public	signature:(const _AssociativeContainer& __c)
_AssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:790	struct:_AssociativeContainerConcept	access:public	signature:()
_AssociativeContainerConcept::__cr	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	line:814	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	line:811	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__k	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::key_type __k;$/;"	m	line:815	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::size_type __n;$/;"	m	line:816	struct:_AssociativeContainerConcept	access:public
_AssociativeContainerConcept::__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	line:812	struct:_AssociativeContainerConcept	access:public
_Aux_require_same	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^struct _Aux_require_same { };$/;"	s	line:108
_Aux_require_same	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };$/;"	s	line:111
_Aux_require_same::_Type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };$/;"	t	line:111	struct:_Aux_require_same	access:public
_BASIC_IOS_H	/home/damian/.vim/tags/cpp_src/basic_ios.h	37;"	d	line:37
_BASIC_STRING_H	/home/damian/.vim/tags/cpp_src/basic_string.h	42;"	d	line:42
_BOOST_CONCEPT_CHECK_H	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	45;"	d	line:45
_BVECTOR_H	/home/damian/.vim/tags/cpp_src/stl_bvector.h	63;"	d	line:63
_BackInsertionSequenceConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _BackInsertionSequenceConcept$/;"	s	line:768
_BackInsertionSequenceConcept::_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::const_reference _Const_reference;$/;"	t	line:771	struct:_BackInsertionSequenceConcept	access:public
_BackInsertionSequenceConcept::_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::reference _Reference;$/;"	t	line:770	struct:_BackInsertionSequenceConcept	access:public
_BackInsertionSequenceConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _BackInsertionSequence __c;$/;"	m	line:783	struct:_BackInsertionSequenceConcept	access:public
_BackInsertionSequenceConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _BackInsertionSequence& __c) {$/;"	f	line:780	struct:_BackInsertionSequenceConcept	access:public	signature:(const _BackInsertionSequence& __c)
_BackInsertionSequenceConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:773	struct:_BackInsertionSequenceConcept	access:public	signature:()
_BackInsertionSequenceConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _BackInsertionSequence::value_type __t;$/;"	m	line:784	struct:_BackInsertionSequenceConcept	access:public
_Base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bvector_base<_Alloc>			 _Base;$/;"	t	line:458	class:std::vector	access:private
_Base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_base<_Tp, _Alloc>           _Base;$/;"	t	line:636	class:std::deque	access:private
_Base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_base<_Tp, _Alloc>                    _Base;$/;"	t	line:414	class:std::list	access:private
_Base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Vector_base<_Tp, _Alloc>			 _Base;$/;"	t	line:166	class:std::vector	access:private
_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _GBase<_Array<_Tp> > _Base;$/;"	t	line:107	struct:std::_GClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _GBase<_Dom> _Base;$/;"	t	line:96	struct:std::_GClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _IBase<_Dom> _Base;$/;"	t	line:143	struct:std::_IClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _IBase<valarray<_Tp> > _Base;$/;"	t	line:154	struct:std::_IClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef  _SBase<_Array<_Tp> > _Base;$/;"	t	line:727	struct:std::_SClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, _Dom> _Base;$/;"	t	line:638	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, valarray<_Tp> > _Base;$/;"	t	line:658	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,_Dom> _Base;$/;"	t	line:627	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,valarray<_Tp> > _Base;$/;"	t	line:648	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, _Dom1, _Dom2> _Base;$/;"	t	line:581	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, _Dom> _Base;$/;"	t	line:615	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, valarray<_Tp> > _Base;$/;"	t	line:591	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;$/;"	t	line:603	struct:std::_BinClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;$/;"	t	line:448	struct:std::_RefFunClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, typename _Dom::value_type> _Base;$/;"	t	line:428	struct:std::_ValFunClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, _Tp> _Base;$/;"	t	line:438	struct:std::_ValFunClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;$/;"	t	line:460	struct:std::_RefFunClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _SBase<_Dom> _Base;$/;"	t	line:717	struct:std::_SClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, _Dom> _Base;$/;"	t	line:494	struct:std::_UnClos	access:public
_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, valarray<_Tp> > _Base;$/;"	t	line:505	struct:std::_UnClos	access:public
_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	line:335	class:std::_Rb_tree	access:protected
_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;$/;"	t	line:162	struct:std::_Rb_tree_iterator	access:public
_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;$/;"	t	line:234	struct:std::_Rb_tree_const_iterator	access:public
_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	line:95	struct:std::_Rb_tree_node_base	access:public
_BidirectionalIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _BidirectionalIteratorConcept$/;"	s	line:500
_BidirectionalIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:502	struct:_BidirectionalIteratorConcept	access:public	signature:()
_BidirectionalIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:510	struct:_BidirectionalIteratorConcept	access:public
_BinBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase(const _FirstArg& __e1, const _SecondArg& __e2)$/;"	f	line:523	class:std::_BinBase	access:public	signature:(const _FirstArg& __e1, const _SecondArg& __e2)
_BinBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase$/;"	c	line:517	namespace:std
_BinBase1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase1(const _Vt& __t, const _Clos& __e)$/;"	f	line:564	class:std::_BinBase1	access:public	signature:(const _Vt& __t, const _Clos& __e)
_BinBase1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase1$/;"	c	line:558	namespace:std
_BinBase2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase2(const _Clos& __e, const _Vt& __t)$/;"	f	line:544	class:std::_BinBase2	access:public	signature:(const _Clos& __e, const _Vt& __t)
_BinBase2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase2$/;"	c	line:538	namespace:std
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const _Tp& __e2) : _Base(__e1, __e2) {}$/;"	f	line:630	struct:std::_BinClos	access:public	signature:(const _Dom& __e1, const _Tp& __e2)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const valarray<_Tp>& __e2)$/;"	f	line:606	struct:std::_BinClos	access:public	signature:(const _Dom& __e1, const valarray<_Tp>& __e2)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom1& __e1, const _Dom2& __e2) : _Base(__e1, __e2) {}$/;"	f	line:584	struct:std::_BinClos	access:public	signature:(const _Dom1& __e1, const _Dom2& __e2)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __e1, const _Dom& __e2) : _Base(__e1, __e2) {}$/;"	f	line:641	struct:std::_BinClos	access:public	signature:(const _Tp& __e1, const _Dom& __e2)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __t, const valarray<_Tp>& __v) : _Base(__t, __v) {}$/;"	f	line:661	struct:std::_BinClos	access:public	signature:(const _Tp& __t, const valarray<_Tp>& __v)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __e1, const _Dom& __e2)$/;"	f	line:618	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __e1, const _Dom& __e2)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const _Tp& __t) : _Base(__v, __t) {}$/;"	f	line:651	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __v, const _Tp& __t)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const valarray<_Tp>& __w)$/;"	f	line:594	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __v, const valarray<_Tp>& __w)
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _Expr, typename _Dom::value_type, _Dom>$/;"	s	line:634	namespace:std	inherits:_BinBase1
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _ValArray, _Tp, _Tp>$/;"	s	line:655	namespace:std	inherits:_BinBase1
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Constant, _Dom, typename _Dom::value_type>$/;"	s	line:623	namespace:std	inherits:_BinBase2
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Expr, _Dom1, _Dom2>$/;"	s	line:578	namespace:std	inherits:_BinBase
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _ValArray, _Dom, typename _Dom::value_type>$/;"	s	line:599	namespace:std	inherits:_BinBase
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Constant, _Tp, _Tp>$/;"	s	line:645	namespace:std	inherits:_BinBase2
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Expr, typename _Dom::value_type, _Dom>$/;"	s	line:611	namespace:std	inherits:_BinBase
_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper,_ValArray, _ValArray, _Tp, _Tp>$/;"	s	line:588	namespace:std	inherits:_BinBase
_BinaryFunctionConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _BinaryFunctionConcept$/;"	s	line:356
_BinaryFunctionConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _BinaryFunctionConcept<_Func, void, _First, _Second>$/;"	s	line:368
_BinaryFunctionConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:358	struct:_BinaryFunctionConcept	access:public	signature:()
_BinaryFunctionConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:370	struct:_BinaryFunctionConcept	access:public	signature:()
_BinaryFunctionConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:361	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:373	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __first;$/;"	m	line:362	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __first;$/;"	m	line:374	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	line:364	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__second	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __second;$/;"	m	line:363	struct:_BinaryFunctionConcept	access:public
_BinaryFunctionConcept::__second	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __second;$/;"	m	line:375	struct:_BinaryFunctionConcept	access:public
_BinaryPredicateConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _BinaryPredicateConcept$/;"	s	line:389
_BinaryPredicateConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	line:395	struct:_BinaryPredicateConcept	access:public
_BinaryPredicateConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	line:396	struct:_BinaryPredicateConcept	access:public
_BinaryPredicateConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:391	struct:_BinaryPredicateConcept	access:public	signature:()
_BinaryPredicateConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:394	struct:_BinaryPredicateConcept	access:public
_Bit_alloc_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^        _Bit_alloc_type;$/;"	t	line:380	struct:std::_Bvector_base	access:public
_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	line:277	struct:std::_Bit_const_iterator	access:public	signature:()
_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	line:279	struct:std::_Bit_const_iterator	access:public	signature:(_Bit_type * __x, unsigned int __y)
_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator(const _Bit_iterator& __x)$/;"	f	line:282	struct:std::_Bit_const_iterator	access:public	signature:(const _Bit_iterator& __x)
_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_const_iterator : public _Bit_iterator_base$/;"	s	line:270	namespace:std	inherits:_Bit_iterator_base
_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	line:194	struct:std::_Bit_iterator	access:public	signature:()
_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	line:196	struct:std::_Bit_iterator	access:public	signature:(_Bit_type * __x, unsigned int __y)
_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_iterator : public _Bit_iterator_base$/;"	s	line:188	namespace:std	inherits:_Bit_iterator_base
_Bit_iterator_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)$/;"	f	line:116	struct:std::_Bit_iterator_base	access:public	signature:(_Bit_type * __x, unsigned int __y)
_Bit_iterator_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_iterator_base$/;"	s	line:110	namespace:std	inherits:std::iterator
_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_reference() : _M_p(0), _M_mask(0) { }$/;"	f	line:78	struct:std::_Bit_reference	access:public	signature:()
_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_reference(_Bit_type * __x, _Bit_type __y)$/;"	f	line:75	struct:std::_Bit_reference	access:public	signature:(_Bit_type * __x, _Bit_type __y)
_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_reference$/;"	s	line:70	namespace:std
_Bit_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  typedef unsigned long _Bit_type;$/;"	t	line:67	namespace:std
_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _Bvector_base(const allocator_type& __a) : _M_impl(__a) { }$/;"	f	line:408	struct:std::_Bvector_base	access:public	signature:(const allocator_type& __a)
_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    struct _Bvector_base$/;"	s	line:377	namespace:std
_Bvector_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bvector_impl(const _Bit_alloc_type& __a)$/;"	f	line:388	struct:std::_Bvector_base::_Bvector_impl	access:public	signature:(const _Bit_alloc_type& __a)
_Bvector_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      struct _Bvector_impl$/;"	s	line:382	struct:std::_Bvector_base	inherits:_Bit_alloc_type	access:public
_CHAR_TRAITS_H	/home/damian/.vim/tags/cpp_src/char_traits.h	41;"	d	line:41
_CODECVT_H	/home/damian/.vim/tags/cpp_src/codecvt.h	43;"	d	line:43
_CONCEPT_CHECK_H	/home/damian/.vim/tags/cpp_src/concept_check.h	36;"	d	line:36
_CPP_TYPE_TRAITS_H	/home/damian/.vim/tags/cpp_src/cpp_type_traits.h	39;"	d	line:39
_Callback_list	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Callback_list(ios_base::event_callback __fn, int __index,$/;"	f	line:474	struct:std::ios_base::_Callback_list	access:public	signature:(ios_base::event_callback __fn, int __index, _Callback_list* __cb)
_Callback_list	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    struct _Callback_list$/;"	s	line:466	class:std::ios_base	access:protected
_CharT_alloc_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;$/;"	t	line:113	class:std::basic_string	access:private
_Char_types	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    struct _Char_types$/;"	s	line:62
_Char_types::int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef unsigned long   int_type;$/;"	t	line:64	struct:_Char_types	access:public
_Char_types::off_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::streamoff  off_type;$/;"	t	line:66	struct:_Char_types	access:public
_Char_types::pos_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::streampos  pos_type;$/;"	t	line:65	struct:_Char_types	access:public
_Char_types::state_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::mbstate_t  state_type;$/;"	t	line:67	struct:_Char_types	access:public
_ComparableConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ComparableConcept$/;"	s	line:264
_ComparableConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:272	struct:_ComparableConcept	access:public
_ComparableConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:272	struct:_ComparableConcept	access:public
_ComparableConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:266	struct:_ComparableConcept	access:public	signature:()
_Const_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	line:336	class:std::_Rb_tree	access:protected
_Const_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	line:96	struct:std::_Rb_tree_node_base	access:public
_Const_BinaryPredicateConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Const_BinaryPredicateConcept {$/;"	s	line:401
_Const_BinaryPredicateConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	line:411	struct:_Const_BinaryPredicateConcept	access:public
_Const_BinaryPredicateConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	line:412	struct:_Const_BinaryPredicateConcept	access:public
_Const_BinaryPredicateConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Func& __fun) {$/;"	f	line:405	struct:_Const_BinaryPredicateConcept	access:public	signature:(const _Func& __fun)
_Const_BinaryPredicateConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:402	struct:_Const_BinaryPredicateConcept	access:public	signature:()
_Const_BinaryPredicateConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:410	struct:_Const_BinaryPredicateConcept	access:public
_Const_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node* _Const_Link_type;$/;"	t	line:347	class:std::_Rb_tree	access:public
_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_iterator;$/;"	t	line:916	struct:_SortedAssociativeContainerConcept	access:public
_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::const_iterator _Const_iterator;$/;"	t	line:808	struct:_AssociativeContainerConcept	access:public
_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_iterator _Const_iterator;$/;"	t	line:573	struct:_ContainerConcept	access:public
_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_iterator _Const_iterator;$/;"	t	line:676	struct:_RandomAccessContainerConcept	access:public
_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::const_iterator _Const_iterator;$/;"	t	line:635	struct:_ReversibleContainerConcept	access:public
_Const_pointer	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_pointer _Const_pointer;$/;"	t	line:572	struct:_ContainerConcept	access:public
_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::const_reference _Const_reference;$/;"	t	line:771	struct:_BackInsertionSequenceConcept	access:public
_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_reference _Const_reference;$/;"	t	line:571	struct:_ContainerConcept	access:public
_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_reference _Const_reference;$/;"	t	line:675	struct:_RandomAccessContainerConcept	access:public
_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::const_reference _Const_reference;$/;"	t	line:721	struct:_SequenceConcept	access:public
_Const_reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	line:637	struct:_ReversibleContainerConcept	access:public
_Const_reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	line:678	struct:_RandomAccessContainerConcept	access:public
_Construct	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Construct(_T1* __p)$/;"	f	line:92	namespace:std	signature:(_T1* __p)
_Construct	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Construct(_T1* __p, const _T2& __value)$/;"	f	line:77	namespace:std	signature:(_T1* __p, const _T2& __value)
_ContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ContainerConcept$/;"	s	line:566
_ContainerConcept::_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_iterator _Const_iterator;$/;"	t	line:573	struct:_ContainerConcept	access:public
_ContainerConcept::_Const_pointer	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_pointer _Const_pointer;$/;"	t	line:572	struct:_ContainerConcept	access:public
_ContainerConcept::_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::const_reference _Const_reference;$/;"	t	line:571	struct:_ContainerConcept	access:public
_ContainerConcept::_Difference_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::difference_type _Difference_type;$/;"	t	line:569	struct:_ContainerConcept	access:public
_ContainerConcept::_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::size_type _Size_type;$/;"	t	line:570	struct:_ContainerConcept	access:public
_ContainerConcept::_Value_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	line:568	struct:_ContainerConcept	access:public
_ContainerConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    bool __b;$/;"	m	line:585	struct:_ContainerConcept	access:public
_ContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:575	struct:_ContainerConcept	access:public	signature:()
_ContainerConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __i;$/;"	m	line:586	struct:_ContainerConcept	access:public
_ContainerConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	line:587	struct:_ContainerConcept	access:public
_ConvertibleConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ConvertibleConcept$/;"	s	line:221
_ConvertibleConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:223	struct:_ConvertibleConcept	access:public	signature:()
_ConvertibleConcept::__x	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _From __x;$/;"	m	line:226	struct:_ConvertibleConcept	access:public
_CopyConstructibleConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _CopyConstructibleConcept$/;"	s	line:190
_CopyConstructibleConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __b;$/;"	m	line:201	struct:_CopyConstructibleConcept	access:public
_CopyConstructibleConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __a) {$/;"	f	line:197	struct:_CopyConstructibleConcept	access:public	signature:(const _Tp& __a)
_CopyConstructibleConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:192	struct:_CopyConstructibleConcept	access:public	signature:()
_DEFINE_ARRAY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_array.h	537;"	d	line:537
_DEFINE_ARRAY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_array.h	696;"	d	line:696
_DEFINE_EXPR_BINARY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_after.h	463;"	d	line:463
_DEFINE_EXPR_BINARY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_after.h	550;"	d	line:550
_DEFINE_EXPR_BINARY_OPERATOR	/home/damian/.vim/tags/cpp_src/valarray_after.h	341;"	d	line:341
_DEFINE_EXPR_BINARY_OPERATOR	/home/damian/.vim/tags/cpp_src/valarray_after.h	425;"	d	line:425
_DEFINE_EXPR_UNARY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_after.h	427;"	d	line:427
_DEFINE_EXPR_UNARY_FUNCTION	/home/damian/.vim/tags/cpp_src/valarray_after.h	461;"	d	line:461
_DEFINE_EXPR_UNARY_OPERATOR	/home/damian/.vim/tags/cpp_src/valarray_after.h	326;"	d	line:326
_DEFINE_EXPR_UNARY_OPERATOR	/home/damian/.vim/tags/cpp_src/valarray_after.h	339;"	d	line:339
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/gslice_array.h	180;"	d	line:180
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/gslice_array.h	181;"	d	line:181
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/gslice_array.h	210;"	d	line:210
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/indirect_array.h	176;"	d	line:176
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/indirect_array.h	177;"	d	line:177
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/indirect_array.h	204;"	d	line:204
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/mask_array.h	171;"	d	line:171
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/mask_array.h	172;"	d	line:172
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/mask_array.h	200;"	d	line:200
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/slice_array.h	236;"	d	line:236
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/slice_array.h	237;"	d	line:237
_DEFINE_VALARRAY_OPERATOR	/home/damian/.vim/tags/cpp_src/slice_array.h	265;"	d	line:265
_DEQUE_H	/home/damian/.vim/tags/cpp_src/stl_deque.h	63;"	d	line:63
_DefaultConstructibleConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _DefaultConstructibleConcept$/;"	s	line:167
_DefaultConstructibleConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:169	struct:_DefaultConstructibleConcept	access:public	signature:()
_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a)$/;"	f	line:387	class:std::_Deque_base	access:public	signature:(const allocator_type& __a)
_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a, size_t __num_elements)$/;"	f	line:383	class:std::_Deque_base	access:public	signature:(const allocator_type& __a, size_t __num_elements)
_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    class _Deque_base$/;"	c	line:371	namespace:std
_Deque_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	_Deque_impl(const _Tp_alloc_type& __a)$/;"	f	line:409	struct:std::_Deque_base::_Deque_impl	access:public	signature:(const _Tp_alloc_type& __a)
_Deque_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      struct _Deque_impl$/;"	s	line:401	class:std::_Deque_base	inherits:_Tp_alloc_type	access:protected
_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator() : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) {}$/;"	f	line:128	struct:std::_Deque_iterator	access:public	signature:()
_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator(_Tp* __x, _Map_pointer __y)$/;"	f	line:124	struct:std::_Deque_iterator	access:public	signature:(_Tp* __x, _Map_pointer __y)
_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator(const iterator& __x)$/;"	f	line:130	struct:std::_Deque_iterator	access:public	signature:(const iterator& __x)
_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    struct _Deque_iterator$/;"	s	line:102	namespace:std
_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:148	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Allocator __alloc)
_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:179	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp>)
_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_Tp* __pointer)$/;"	f	line:106	namespace:std	signature:(_Tp* __pointer)
_Difference_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::difference_type _Difference_type;$/;"	t	line:569	struct:_ContainerConcept	access:public
_EXCEPTION_DEFINES_H	/home/damian/.vim/tags/cpp_src/exception_defines.h	39;"	d	line:39
_EqualityComparableConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _EqualityComparableConcept$/;"	s	line:245
_EqualityComparableConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:250	struct:_EqualityComparableConcept	access:public
_EqualityComparableConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:250	struct:_EqualityComparableConcept	access:public
_EqualityComparableConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:247	struct:_EqualityComparableConcept	access:public	signature:()
_Expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::_Expr(const _Clos& __c) : _M_closure(__c) {}$/;"	f	line:210	class:std::_Expr	signature:(const _Clos& __c)
_Expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _Expr$/;"	c	line:165	namespace:std
_FUNCTEXCEPT_H	/home/damian/.vim/tags/cpp_src/functexcept.h	39;"	d	line:39
_FUNCTION_H	/home/damian/.vim/tags/cpp_src/stl_function.h	62;"	d	line:62
_ForwardContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ForwardContainerConcept$/;"	s	line:612
_ForwardContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:614	struct:_ForwardContainerConcept	access:public	signature:()
_ForwardIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ForwardIteratorConcept$/;"	s	line:475
_ForwardIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:477	struct:_ForwardIteratorConcept	access:public	signature:()
_ForwardIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:486	struct:_ForwardIteratorConcept	access:public
_FrontInsertionSequenceConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _FrontInsertionSequenceConcept$/;"	s	line:755
_FrontInsertionSequenceConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _FrontInsertionSequence __c;$/;"	m	line:763	struct:_FrontInsertionSequenceConcept	access:public
_FrontInsertionSequenceConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:757	struct:_FrontInsertionSequenceConcept	access:public	signature:()
_FrontInsertionSequenceConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _FrontInsertionSequence::value_type __t;$/;"	m	line:764	struct:_FrontInsertionSequenceConcept	access:public
_FunBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _FunBase(const _Dom& __e, value_type __f(_Arg))$/;"	f	line:412	class:std::_FunBase	access:public	signature:(const _Dom& __e, value_type __f(_Arg))
_FunBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _FunBase$/;"	c	line:407	namespace:std
_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GBase (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	line:76	class:std::_GBase	access:public	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:54	class:std::_GBase	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _GBase$/;"	c	line:49	namespace:std
_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _GBase<_Array<_Tp> >$/;"	c	line:71	namespace:std
_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GClos (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	line:110	struct:std::_GClos	access:public	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:99	struct:std::_GClos	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _GClos<_Expr, _Dom>$/;"	s	line:93	namespace:std	inherits:_GBase
_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _GClos<_ValArray, _Tp>$/;"	s	line:104	namespace:std	inherits:_GBase
_GLIBCXX_CLASS_REQUIRES	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	74;"	d	line:74
_GLIBCXX_CLASS_REQUIRES2	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	82;"	d	line:82
_GLIBCXX_CLASS_REQUIRES3	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	90;"	d	line:90
_GLIBCXX_CLASS_REQUIRES4	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	98;"	d	line:98
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	286;"	d	line:286
_GLIBCXX_DEFINE_BINARY_OPERATOR_CONSTRAINT	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	311;"	d	line:311
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	275;"	d	line:275
_GLIBCXX_DEFINE_BINARY_PREDICATE_OP_CONSTRAINT	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	310;"	d	line:310
_GLIBCXX_NUM_FACETS	/home/damian/.vim/tags/cpp_src/locale_facets.h	57;"	d	line:57
_GLIBCXX_POSTYPES_H	/home/damian/.vim/tags/cpp_src/postypes.h	42;"	d	line:42
_GSLICE_ARRAY_H	/home/damian/.vim/tags/cpp_src/gslice_array.h	39;"	d	line:39
_GSLICE_H	/home/damian/.vim/tags/cpp_src/gslice.h	39;"	d	line:39
_GeneratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _GeneratorConcept$/;"	s	line:317
_GeneratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _GeneratorConcept<_Func,void>$/;"	s	line:327
_GeneratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:319	struct:_GeneratorConcept	access:public	signature:()
_GeneratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:329	struct:_GeneratorConcept	access:public	signature:()
_GeneratorConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:322	struct:_GeneratorConcept	access:public
_GeneratorConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:332	struct:_GeneratorConcept	access:public
_IBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:123	class:std::_IBase	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
_IBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _IBase$/;"	c	line:118	namespace:std
_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:146	struct:std::_IClos	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IClos (const valarray<_Tp>& __a, const valarray<size_t>& __i)$/;"	f	line:157	struct:std::_IClos	access:public	signature:(const valarray<_Tp>& __a, const valarray<size_t>& __i)
_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _IClos<_Expr, _Dom>$/;"	s	line:140	namespace:std	inherits:_IBase
_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _IClos<_ValArray, _Tp>$/;"	s	line:151	namespace:std	inherits:_IBase
_INDIRECT_ARRAY_H	/home/damian/.vim/tags/cpp_src/indirect_array.h	39;"	d	line:39
_IOS_BASE_H	/home/damian/.vim/tags/cpp_src/ios_base.h	41;"	d	line:41
_ITERATOR_BASE_FUNCS_H	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	66;"	d	line:66
_ITERATOR_BASE_TYPES_H	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	65;"	d	line:65
_ITERATOR_H	/home/damian/.vim/tags/cpp_src/stl_iterator.h	67;"	d	line:67
_Identity	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Identity : public unary_function<_Tp,_Tp>$/;"	s	line:530	namespace:std	inherits:unary_function
_Impl	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::_Impl$/;"	c	line:472	class:std::locale
_Indexer	/home/damian/.vim/tags/cpp_src/gslice.h	/^    struct _Indexer$/;"	s	line:104	class:std::gslice	access:private
_InputIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _InputIteratorConcept$/;"	s	line:442
_InputIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:444	struct:_InputIteratorConcept	access:public	signature:()
_InputIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:458	struct:_InputIteratorConcept	access:public
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _IntegerConcept {$/;"	s	line:122
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<int> { void __constraints() {} };$/;"	s	line:129
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long long> { void __constraints() {} };$/;"	s	line:133
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long> { void __constraints() {} };$/;"	s	line:131
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<short> { void __constraints() {} };$/;"	s	line:127
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned int> { void __constraints() {} };$/;"	s	line:130
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long long>$/;"	s	line:134
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long> { void __constraints() {} };$/;"	s	line:132
_IntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned short> { void __constraints(){} };$/;"	s	line:128
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^                                                { void __constraints() {} };$/;"	f	line:135	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:123	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<int> { void __constraints() {} };$/;"	f	line:129	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long long> { void __constraints() {} };$/;"	f	line:133	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long> { void __constraints() {} };$/;"	f	line:131	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<short> { void __constraints() {} };$/;"	f	line:127	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned int> { void __constraints() {} };$/;"	f	line:130	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long> { void __constraints() {} };$/;"	f	line:132	struct:_IntegerConcept	access:public	signature:()
_IntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned short> { void __constraints(){} };$/;"	f	line:128	struct:_IntegerConcept	access:public	signature:()
_Ios_Fmtflags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Fmtflags $/;"	g	line:55	namespace:std
_Ios_Iostate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Iostate$/;"	g	line:147	namespace:std
_Ios_Openmode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Openmode $/;"	g	line:107	namespace:std
_Ios_Seekdir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Seekdir $/;"	g	line:184	namespace:std
_IsUnused	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	55;"	d	line:55
_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _AssociativeContainer::iterator _Iterator;$/;"	t	line:807	struct:_AssociativeContainerConcept	access:public
_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::iterator _Iterator;$/;"	t	line:595	struct:_Mutable_ContainerConcept	access:public
_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::iterator _Iterator;$/;"	t	line:698	struct:_Mutable_RandomAccessContainerConcept	access:public
_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::iterator _Iterator;$/;"	t	line:654	struct:_Mutable_ReversibleContainerConcept	access:public
_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _SortedAssociativeContainer::iterator _Iterator;$/;"	t	line:914	struct:_SortedAssociativeContainerConcept	access:public
_Key_alloc_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	line:109	class:std::multiset	access:private
_Key_alloc_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	line:114	class:std::set	access:private
_LIST_H	/home/damian/.vim/tags/cpp_src/stl_list.h	63;"	d	line:63
_LOCALE_CLASSES_H	/home/damian/.vim/tags/cpp_src/locale_classes.h	41;"	d	line:41
_LOCALE_FACETS_H	/home/damian/.vim/tags/cpp_src/locale_facets.h	41;"	d	line:41
_LOCALE_FWD_H	/home/damian/.vim/tags/cpp_src/localefwd.h	41;"	d	line:41
_LessThanComparableConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _LessThanComparableConcept$/;"	s	line:254
_LessThanComparableConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:259	struct:_LessThanComparableConcept	access:public
_LessThanComparableConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:259	struct:_LessThanComparableConcept	access:public
_LessThanComparableConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:256	struct:_LessThanComparableConcept	access:public	signature:()
_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node* _Link_type;$/;"	t	line:346	class:std::_Rb_tree	access:public
_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	line:163	struct:std::_Rb_tree_iterator	access:public
_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val>* _Link_type;$/;"	t	line:135	struct:std::_Rb_tree_node	access:public
_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	line:235	struct:std::_Rb_tree_const_iterator	access:public
_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_base(const allocator_type& __a)$/;"	f	line:342	class:std::_List_base	access:public	signature:(const allocator_type& __a)
_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    class _List_base$/;"	c	line:282	namespace:std
_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator()$/;"	f	line:201	struct:std::_List_const_iterator	access:public	signature:()
_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator(const _List_node_base* __x)$/;"	f	line:205	struct:std::_List_const_iterator	access:public	signature:(const _List_node_base* __x)
_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator(const iterator& __x)$/;"	f	line:208	struct:std::_List_const_iterator	access:public	signature:(const iterator& __x)
_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_const_iterator$/;"	s	line:189	namespace:std
_List_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^	_List_impl(const _Node_alloc_type& __a)$/;"	f	line:308	struct:std::_List_base::_List_impl	access:public	signature:(const _Node_alloc_type& __a)
_List_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      struct _List_impl $/;"	s	line:303	class:std::_List_base	inherits:_Node_alloc_type	access:protected
_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_iterator()$/;"	f	line:123	struct:std::_List_iterator	access:public	signature:()
_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_iterator(_List_node_base* __x)$/;"	f	line:127	struct:std::_List_iterator	access:public	signature:(_List_node_base* __x)
_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_iterator$/;"	s	line:112	namespace:std
_List_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_node : public _List_node_base$/;"	s	line:99	namespace:std	inherits:_List_node_base
_List_node_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^  struct _List_node_base$/;"	s	line:75	namespace:std
_MAP_H	/home/damian/.vim/tags/cpp_src/stl_map.h	63;"	d	line:63
_MASK_ARRAY_H	/home/damian/.vim/tags/cpp_src/mask_array.h	39;"	d	line:39
_MULTIMAP_H	/home/damian/.vim/tags/cpp_src/stl_multimap.h	62;"	d	line:62
_MULTISET_H	/home/damian/.vim/tags/cpp_src/stl_multiset.h	62;"	d	line:62
_M_aday1	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday1;$/;"	m	line:2777	struct:std::__timepunct_cache	access:public
_M_aday2	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday2;$/;"	m	line:2778	struct:std::__timepunct_cache	access:public
_M_aday3	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday3;$/;"	m	line:2779	struct:std::__timepunct_cache	access:public
_M_aday4	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday4;$/;"	m	line:2780	struct:std::__timepunct_cache	access:public
_M_aday5	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday5;$/;"	m	line:2781	struct:std::__timepunct_cache	access:public
_M_aday6	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday6;$/;"	m	line:2782	struct:std::__timepunct_cache	access:public
_M_aday7	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday7;$/;"	m	line:2783	struct:std::__timepunct_cache	access:public
_M_add_reference	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }$/;"	f	line:479	struct:std::ios_base::_Callback_list	access:public	signature:()
_M_add_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_add_reference() const throw()$/;"	f	line:401	class:std::locale::facet	access:private	signature:() const
_M_add_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_add_reference() throw()$/;"	f	line:506	class:std::locale::_Impl	access:private	signature:()
_M_allocate	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_allocate(size_t __n)$/;"	f	line:417	struct:std::_Bvector_base	access:protected	signature:(size_t __n)
_M_allocate	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_allocate(size_t __n)$/;"	f	line:127	struct:std::_Vector_base	access:public	signature:(size_t __n)
_M_allocate_and_copy	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_allocate_and_copy(size_type __n,$/;"	f	line:760	class:std::vector	access:protected	signature:(size_type __n, _ForwardIterator __first, _ForwardIterator __last)
_M_allocate_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_allocate_map(size_t __n)$/;"	f	line:440	class:std::_Deque_base	access:protected	signature:(size_t __n)
_M_allocate_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_allocate_node()$/;"	f	line:428	class:std::_Deque_base	access:protected	signature:()
_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:1615	struct:std::__numpunct_cache	access:public
_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:2813	struct:std::__timepunct_cache	access:public
_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:3570	struct:std::__moneypunct_cache	access:public
_M_am	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_am;$/;"	m	line:2763	struct:std::__timepunct_cache	access:public
_M_am_pm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_am_pm(const _CharT** __ampm) const$/;"	f	line:2941	class:std::__timepunct	access:public	signature:(const _CharT** __ampm) const
_M_am_pm_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_am_pm_format(const _CharT* __ampm) const$/;"	f	line:2937	class:std::__timepunct	access:public	signature:(const _CharT* __ampm) const
_M_am_pm_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_am_pm_format;$/;"	m	line:2765	struct:std::__timepunct_cache	access:public
_M_amonth01	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth01;$/;"	m	line:2800	struct:std::__timepunct_cache	access:public
_M_amonth02	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth02;$/;"	m	line:2801	struct:std::__timepunct_cache	access:public
_M_amonth03	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth03;$/;"	m	line:2802	struct:std::__timepunct_cache	access:public
_M_amonth04	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth04;$/;"	m	line:2803	struct:std::__timepunct_cache	access:public
_M_amonth05	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth05;$/;"	m	line:2804	struct:std::__timepunct_cache	access:public
_M_amonth06	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth06;$/;"	m	line:2805	struct:std::__timepunct_cache	access:public
_M_amonth07	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth07;$/;"	m	line:2806	struct:std::__timepunct_cache	access:public
_M_amonth08	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth08;$/;"	m	line:2807	struct:std::__timepunct_cache	access:public
_M_amonth09	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth09;$/;"	m	line:2808	struct:std::__timepunct_cache	access:public
_M_amonth10	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth10;$/;"	m	line:2809	struct:std::__timepunct_cache	access:public
_M_amonth11	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth11;$/;"	m	line:2810	struct:std::__timepunct_cache	access:public
_M_amonth12	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth12;$/;"	m	line:2811	struct:std::__timepunct_cache	access:public
_M_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      _Array<_Tp>    _M_array;$/;"	m	line:123	class:std::gslice_array	access:private
_M_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const _Array<_Tp>	 _M_array;$/;"	m	line:134	class:std::indirect_array	access:private
_M_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const _Array<_Tp>  _M_array;$/;"	m	line:131	class:std::mask_array	access:private
_M_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const _Array<_Tp> _M_array;$/;"	m	line:191	class:std::slice_array	access:private
_M_array	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Array<_Tp>       _M_array;$/;"	m	line:88	class:std::_GBase	access:private
_M_array	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Array<_Tp> _M_array;$/;"	m	line:708	class:std::_SBase	access:private
_M_assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_assign(_CharT* __d, size_type __n, _CharT __c)$/;"	f	line:359	class:std::basic_string	access:private	signature:(_CharT* __d, size_type __n, _CharT __c)
_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:872	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:858	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1316	class:std::deque	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:835	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:830	class:std::vector	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1299	class:std::deque	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:1290	class:std::deque	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:1134	class:std::list	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:844	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:835	class:std::vector	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
_M_at_eof	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_at_eof() const$/;"	f	line:186	class:std::istreambuf_iterator	access:private	signature:() const
_M_atoms	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms[money_base::_S_end];$/;"	m	line:3568	struct:std::__moneypunct_cache	access:public
_M_atoms_in	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms_in[__num_base::_S_iend];$/;"	m	line:1613	struct:std::__numpunct_cache	access:public
_M_atoms_out	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms_out[__num_base::_S_oend];$/;"	m	line:1607	struct:std::__numpunct_cache	access:public
_M_begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_begin() const$/;"	f	line:478	class:std::_Rb_tree	access:protected	signature:() const
_M_begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_begin()$/;"	f	line:474	class:std::_Rb_tree	access:protected	signature:()
_M_bit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mask                      _M_bit[16];$/;"	m	line:1231	class:std::ctype	access:protected
_M_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      pointer    _M_buffer;$/;"	m	line:91	class:std::_Temporary_buffer	access:protected
_M_bump_down	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_bump_down()$/;"	f	line:130	struct:std::_Bit_iterator_base	access:public	signature:()
_M_bump_up	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_bump_up()$/;"	f	line:120	struct:std::_Bit_iterator_base	access:public	signature:()
_M_c	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      mutable int_type		_M_c;$/;"	m	line:91	class:std::istreambuf_iterator	access:private
_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:284	class:std::codecvt	access:protected
_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:345	class:std::codecvt	access:protected
_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:403	class:std::codecvt	access:protected
_M_c_locale_collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_collate;$/;"	m	line:2550	class:std::collate	access:protected
_M_c_locale_ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	line:1223	class:std::ctype	access:protected
_M_c_locale_ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	line:685	class:std::ctype	access:protected
_M_c_locale_messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_messages;$/;"	m	line:4377	class:std::messages	access:protected
_M_c_locale_timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_timepunct;$/;"	m	line:2880	class:std::__timepunct	access:protected
_M_caches	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    const facet**			_M_caches;$/;"	m	line:495	class:std::locale::_Impl	access:private
_M_callbacks	/home/damian/.vim/tags/cpp_src/ios_base.h	/^     _Callback_list*	_M_callbacks;$/;"	m	line:487	class:std::ios_base	access:protected
_M_capacity	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	size_type		_M_capacity;$/;"	m	line:150	struct:std::basic_string::_Rep_base	access:public
_M_check	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_check(size_type __pos, const char* __s) const$/;"	f	line:308	class:std::basic_string	access:private	signature:(size_type __pos, const char* __s) const
_M_check_equal_allocators	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_check_equal_allocators(list& __x)$/;"	f	line:1177	class:std::list	access:protected	signature:(list& __x)
_M_check_length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_check_length(size_type __n1, size_type __n2, const char* __s) const$/;"	f	line:316	class:std::basic_string	access:private	signature:(size_type __n1, size_type __n2, const char* __s) const
_M_check_same_name	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_check_same_name()$/;"	f	line:533	class:std::locale::_Impl	access:private	signature:()
_M_clone_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_clone_node(_Const_Link_type __x)$/;"	f	line:388	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
_M_closure	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Clos _M_closure;$/;"	m	line:205	class:std::_Expr	access:private
_M_color	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Rb_tree_color	_M_color;$/;"	m	line:98	struct:std::_Rb_tree_node_base	access:public
_M_convert_from_char	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_convert_from_char(char*) const$/;"	f	line:4525	class:std::messages	access:protected	signature:(char*) const
_M_convert_to_char	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_convert_to_char(const string_type& __msg) const$/;"	f	line:4517	class:std::messages	access:protected	signature:(const string_type& __msg) const
_M_copy	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_copy(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	line:341	class:std::basic_string	access:private	signature:(_CharT* __d, const _CharT* __s, size_type __n)
_M_copy	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_copy(_Const_Link_type __x, _Link_type __p)$/;"	f	line:1282	class:std::_Rb_tree	signature:(_Const_Link_type __x, _Link_type __p)
_M_copy_aligned	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_copy_aligned(const_iterator __first, const_iterator __last,$/;"	f	line:773	class:std::vector	access:protected	signature:(const_iterator __first, const_iterator __last, iterator __result)
_M_count	/home/damian/.vim/tags/cpp_src/gslice.h	/^      size_t _M_count;$/;"	m	line:106	struct:std::gslice::_Indexer	access:public
_M_create_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_create_node(const value_type& __x)$/;"	f	line:450	class:std::list	access:protected	signature:(const value_type& __x)
_M_create_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_create_node(const value_type& __x)$/;"	f	line:374	class:std::_Rb_tree	access:protected	signature:(const value_type& __x)
_M_create_nodes	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_create_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	line:520	class:std::_Deque_base	signature:(_Tp** __nstart, _Tp** __nfinish)
_M_ctype	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __ctype_type*                            _M_ctype;$/;"	m	line:93	class:std::basic_ios	access:protected
_M_cur	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_cur;$/;"	m	line:119	struct:std::_Deque_iterator	access:public
_M_curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_curr_symbol;$/;"	m	line:3555	struct:std::__moneypunct_cache	access:public
_M_curr_symbol_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_curr_symbol_size;$/;"	m	line:3556	struct:std::__moneypunct_cache	access:public
_M_current	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Iterator _M_current;$/;"	m	line:639	class:__normal_iterator	access:protected
_M_data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_data() const$/;"	f	line:279	class:std::basic_string	access:private	signature:() const
_M_data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_data(_CharT* __p)$/;"	f	line:283	class:std::basic_string	access:private	signature:(_CharT* __p)
_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:1674	class:std::numpunct	access:protected
_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:2879	class:std::__timepunct	access:protected
_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:3627	class:std::moneypunct	access:private
_M_data	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _Tp _M_data;                \/\/\/< User's data.$/;"	m	line:101	struct:std::_List_node	access:public
_M_data	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _Tp* const __restrict__ _M_data;$/;"	m	line:424	struct:std::_Array	access:public
_M_dataplus	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      mutable _Alloc_hider	_M_dataplus;$/;"	m	line:276	class:std::basic_string	access:private
_M_date_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_era_format;$/;"	m	line:2758	struct:std::__timepunct_cache	access:public
_M_date_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_format;$/;"	m	line:2757	struct:std::__timepunct_cache	access:public
_M_date_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_date_formats(const _CharT** __date) const$/;"	f	line:2913	class:std::__timepunct	access:public	signature:(const _CharT** __date) const
_M_date_time_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_era_format;$/;"	m	line:2762	struct:std::__timepunct_cache	access:public
_M_date_time_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_format;$/;"	m	line:2761	struct:std::__timepunct_cache	access:public
_M_date_time_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_date_time_formats(const _CharT** __dt) const$/;"	f	line:2929	class:std::__timepunct	access:public	signature:(const _CharT** __dt) const
_M_day1	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day1;$/;"	m	line:2768	struct:std::__timepunct_cache	access:public
_M_day2	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day2;$/;"	m	line:2769	struct:std::__timepunct_cache	access:public
_M_day3	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day3;$/;"	m	line:2770	struct:std::__timepunct_cache	access:public
_M_day4	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day4;$/;"	m	line:2771	struct:std::__timepunct_cache	access:public
_M_day5	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day5;$/;"	m	line:2772	struct:std::__timepunct_cache	access:public
_M_day6	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day6;$/;"	m	line:2773	struct:std::__timepunct_cache	access:public
_M_day7	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day7;$/;"	m	line:2774	struct:std::__timepunct_cache	access:public
_M_days	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_days(const _CharT** __days) const$/;"	f	line:2948	class:std::__timepunct	access:public	signature:(const _CharT** __days) const
_M_days_abbreviated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_days_abbreviated(const _CharT** __days) const$/;"	f	line:2960	class:std::__timepunct	access:public	signature:(const _CharT** __days) const
_M_deallocate	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_deallocate()$/;"	f	line:422	struct:std::_Bvector_base	access:protected	signature:()
_M_deallocate	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_deallocate(_Tp* __p, size_t __n)$/;"	f	line:131	struct:std::_Vector_base	access:public	signature:(_Tp* __p, size_t __n)
_M_deallocate_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_deallocate_map(_Tp** __p, size_t __n)$/;"	f	line:444	class:std::_Deque_base	access:protected	signature:(_Tp** __p, size_t __n)
_M_deallocate_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_deallocate_node(_Tp* __p)$/;"	f	line:434	class:std::_Deque_base	access:protected	signature:(_Tp* __p)
_M_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	line:1600	struct:std::__numpunct_cache	access:public
_M_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	line:3553	struct:std::__moneypunct_cache	access:public
_M_decrement_use	/home/damian/.vim/tags/cpp_src/gslice.h	/^      _M_decrement_use()$/;"	f	line:118	struct:std::gslice::_Indexer	access:public	signature:()
_M_del	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool			_M_del;$/;"	m	line:686	class:std::ctype	access:protected
_M_destroy_data	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_destroy_data(iterator __first, iterator __last, const _Alloc1&)$/;"	f	line:1438	class:std::deque	access:protected	signature:(iterator __first, iterator __last, const _Alloc1&)
_M_destroy_data	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data(iterator __first, iterator __last,$/;"	f	line:1442	class:std::deque	access:protected	signature:(iterator __first, iterator __last, const std::allocator<_Tp>&)
_M_destroy_data_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator __first, iterator __last, __false_type)$/;"	f	line:1431	class:std::deque	access:protected	signature:(iterator __first, iterator __last, __false_type)
_M_destroy_data_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator, iterator, __true_type) { }$/;"	f	line:1428	class:std::deque	access:protected	signature:(iterator, iterator, __true_type)
_M_destroy_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_destroy_node(_Link_type __p)$/;"	f	line:398	class:std::_Rb_tree	access:protected	signature:(_Link_type __p)
_M_destroy_nodes	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	line:538	class:std::_Deque_base	signature:(_Tp** __nstart, _Tp** __nfinish)
_M_disjunct	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_disjunct(const _CharT* __s) const$/;"	f	line:332	class:std::basic_string	access:private	signature:(const _CharT* __s) const
_M_dispose	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_dispose(const _Alloc& __a)$/;"	f	line:231	struct:std::basic_string::_Rep	access:public	signature:(const _Alloc& __a)
_M_end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_end() const$/;"	f	line:489	class:std::_Rb_tree	access:protected	signature:() const
_M_end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_end()$/;"	f	line:485	class:std::_Rb_tree	access:protected	signature:()
_M_end_of_storage	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_type* 	_M_end_of_storage;$/;"	m	line:387	struct:std::_Bvector_base::_Bvector_impl	access:public
_M_end_of_storage	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_end_of_storage;$/;"	m	line:86	struct:std::_Vector_base::_Vector_impl	access:public
_M_equal	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _M_equal(const istream_iterator& __x) const$/;"	f	line:109	class:std::istream_iterator	access:public	signature:(const istream_iterator& __x) const
_M_erase	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_erase(iterator __position)$/;"	f	line:1167	class:std::list	access:protected	signature:(iterator __position)
_M_erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_erase(_Link_type __x)$/;"	f	line:1318	class:std::_Rb_tree	signature:(_Link_type __x)
_M_erase_at_begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_erase_at_begin(iterator __pos)$/;"	f	line:1452	class:std::deque	access:protected	signature:(iterator __pos)
_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_erase_at_end(iterator __pos)$/;"	f	line:1005	class:std::vector	access:protected	signature:(iterator __pos)
_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_erase_at_end(iterator __pos)$/;"	f	line:1462	class:std::deque	access:protected	signature:(iterator __pos)
_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_erase_at_end(pointer __pos)$/;"	f	line:919	class:std::vector	access:protected	signature:(pointer __pos)
_M_exception	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iostate		_M_exception;$/;"	m	line:460	class:std::ios_base	access:protected
_M_expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	line:135	class:std::_IBase	access:private
_M_expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	line:66	class:std::_GBase	access:private
_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Arg& _M_expr;$/;"	m	line:486	class:std::_UnBase	access:private
_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	line:421	class:std::_FunBase	access:private
_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	line:685	class:std::_SBase	access:private
_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Clos& _M_expr1;$/;"	m	line:553	class:std::_BinBase2	access:private
_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _FirstArg& _M_expr1;$/;"	m	line:532	class:std::_BinBase	access:private
_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Vt& _M_expr1;$/;"	m	line:573	class:std::_BinBase1	access:private
_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Clos& _M_expr2;$/;"	m	line:574	class:std::_BinBase1	access:private
_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _SecondArg& _M_expr2;$/;"	m	line:533	class:std::_BinBase	access:private
_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Vt& _M_expr2;$/;"	m	line:554	class:std::_BinBase2	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	line:610	class:std::const_mem_fun_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	line:642	class:std::const_mem_fun_ref_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	line:594	class:std::mem_fun_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	line:626	class:std::mem_fun_ref_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	line:674	class:std::const_mem_fun1_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	line:706	class:std::const_mem_fun1_ref_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	line:658	class:std::mem_fun1_t	access:private
_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	line:690	class:std::mem_fun1_ref_t	access:private
_M_facets	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    const facet**			_M_facets;$/;"	m	line:493	class:std::locale::_Impl	access:private
_M_facets_size	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    size_t				_M_facets_size;$/;"	m	line:494	class:std::locale::_Impl	access:private
_M_failed	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      bool		_M_failed;$/;"	m	line:228	class:std::ostreambuf_iterator	access:private
_M_falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_falsename;$/;"	m	line:1598	struct:std::__numpunct_cache	access:public
_M_falsename_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_falsename_size;$/;"	m	line:1599	struct:std::__numpunct_cache	access:public
_M_fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      mutable char_type                              _M_fill;$/;"	m	line:88	class:std::basic_ios	access:protected
_M_fill_assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_fill_assign(size_t __n, bool __x)$/;"	f	line:840	class:std::vector	access:protected	signature:(size_t __n, bool __x)
_M_fill_assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_fill_assign(size_type __n, const value_type& __val)$/;"	f	line:1334	class:std::deque	access:protected	signature:(size_type __n, const value_type& __val)
_M_fill_init	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      mutable bool                                   _M_fill_init;$/;"	m	line:89	class:std::basic_ios	access:protected
_M_fill_initialize	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_fill_initialize(size_type __n, const value_type& __x)$/;"	f	line:1122	class:std::list	access:protected	signature:(size_type __n, const value_type& __x)
_M_fill_insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_fill_insert(iterator __position, size_type __n, bool __x)$/;"	f	line:903	class:std::vector	access:protected	signature:(iterator __position, size_type __n, bool __x)
_M_find	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _M_find(const _CharT2* __zero, size_t __len, _CharT2 __c) const$/;"	f	line:2158	class:std::num_get	access:protected	signature:(const _CharT2* __zero, size_t __len, _CharT2 __c) const
_M_find	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _M_find(const _CharT2*, size_t __len, _CharT2 __c) const$/;"	f	line:2135	class:std::num_get	access:protected	signature:(const _CharT2*, size_t __len, _CharT2 __c) const
_M_finish	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_finish;$/;"	m	line:386	struct:std::_Bvector_base::_Bvector_impl	access:public
_M_finish	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	iterator _M_finish;$/;"	m	line:407	struct:std::_Deque_base::_Deque_impl	access:public
_M_finish	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_finish;$/;"	m	line:85	struct:std::_Vector_base::_Vector_impl	access:public
_M_first	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_first;$/;"	m	line:120	struct:std::_Deque_iterator	access:public
_M_flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    fmtflags		_M_flags;$/;"	m	line:459	class:std::ios_base	access:protected
_M_fn	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      ios_base::event_callback	_M_fn;$/;"	m	line:470	struct:std::ios_base::_Callback_list	access:public
_M_frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      int				_M_frac_digits;$/;"	m	line:3561	struct:std::__moneypunct_cache	access:public
_M_func	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type (*_M_func)(_Arg);$/;"	m	line:422	class:std::_FunBase	access:private
_M_get	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_get() const$/;"	f	line:168	class:std::istreambuf_iterator	access:private	signature:() const
_M_get_Bit_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator() const$/;"	f	line:401	struct:std::_Bvector_base	access:public	signature:() const
_M_get_Bit_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator()$/;"	f	line:397	struct:std::_Bvector_base	access:public	signature:()
_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Node_allocator() const$/;"	f	line:331	class:std::_List_base	access:public	signature:() const
_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Node_allocator()$/;"	f	line:327	class:std::_List_base	access:public	signature:()
_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_Node_allocator() const$/;"	f	line:357	class:std::_Rb_tree	access:public	signature:() const
_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_Node_allocator()$/;"	f	line:353	class:std::_Rb_tree	access:public	signature:()
_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_Tp_allocator() const$/;"	f	line:420	class:std::_Deque_base	access:protected	signature:() const
_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_Tp_allocator()$/;"	f	line:416	class:std::_Deque_base	access:protected	signature:()
_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Tp_allocator() const$/;"	f	line:335	class:std::_List_base	access:public	signature:() const
_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_get_Tp_allocator() const$/;"	f	line:100	struct:std::_Vector_base	access:public	signature:() const
_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_get_Tp_allocator()$/;"	f	line:96	struct:std::_Vector_base	access:public	signature:()
_M_get_map_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_map_allocator() const$/;"	f	line:424	class:std::_Deque_base	access:protected	signature:() const
_M_get_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_node()$/;"	f	line:316	class:std::_List_base	access:protected	signature:()
_M_get_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_node()$/;"	f	line:366	class:std::_Rb_tree	access:protected	signature:()
_M_getloc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _M_getloc() const { return _M_ios_locale; }$/;"	f	line:700	class:std::ios_base	access:public	signature:() const
_M_grab	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)$/;"	f	line:220	struct:std::basic_string::_Rep	access:public	signature:(const _Alloc& __alloc1, const _Alloc& __alloc2)
_M_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	line:1593	struct:std::__numpunct_cache	access:public
_M_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	line:3550	struct:std::__moneypunct_cache	access:public
_M_grouping_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	line:1594	struct:std::__numpunct_cache	access:public
_M_grouping_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	line:3551	struct:std::__moneypunct_cache	access:public
_M_header	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_node_base 	_M_header;$/;"	m	line:410	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_header	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_node_base 	_M_header;$/;"	m	line:431	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_ibegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_ibegin() const$/;"	f	line:293	class:std::basic_string	access:private	signature:() const
_M_iend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_iend() const$/;"	f	line:297	class:std::basic_string	access:private	signature:() const
_M_impl	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _Impl*		_M_impl;$/;"	m	line:285	class:std::locale	access:private
_M_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _Bvector_impl _M_impl;$/;"	m	line:414	struct:std::_Bvector_base	access:protected
_M_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_impl _M_impl;$/;"	m	line:453	class:std::_Deque_base	access:protected
_M_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_impl _M_impl;$/;"	m	line:313	class:std::_List_base	access:protected
_M_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_impl<_Compare> _M_impl;$/;"	m	line:446	class:std::_Rb_tree	access:protected
_M_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_impl _M_impl;$/;"	m	line:124	struct:std::_Vector_base	access:public
_M_incr	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_incr(ptrdiff_t __i)$/;"	f	line:140	struct:std::_Bit_iterator_base	access:public	signature:(ptrdiff_t __i)
_M_increment_use	/home/damian/.vim/tags/cpp_src/gslice.h	/^      _M_increment_use()$/;"	f	line:114	struct:std::gslice::_Indexer	access:public	signature:()
_M_index	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_index; \/\/ Linear array of referenced indices$/;"	m	line:110	struct:std::gslice::_Indexer	access:public
_M_index	/home/damian/.vim/tags/cpp_src/gslice.h	/^    _Indexer* _M_index;$/;"	m	line:122	class:std::gslice	access:private
_M_index	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:124	class:std::gslice_array	access:private
_M_index	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const _Array<size_t> _M_index;$/;"	m	line:133	class:std::indirect_array	access:private
_M_index	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      int			_M_index;$/;"	m	line:471	struct:std::ios_base::_Callback_list	access:public
_M_index	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    mutable size_t		_M_index;$/;"	m	line:450	class:std::locale::id	access:private
_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:136	class:std::_IBase	access:private
_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:67	class:std::_GBase	access:private
_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:89	class:std::_GBase	access:private
_M_init	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_init()$/;"	f	line:354	class:std::_List_base	access:public	signature:()
_M_init_facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^      _M_init_facet(_Facet* __facet)$/;"	f	line:557	class:std::locale::_Impl	access:private	signature:(_Facet* __facet)
_M_initialize	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_initialize(size_type __n)$/;"	f	line:782	class:std::vector	access:protected	signature:(size_type __n)
_M_initialize_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp& __val, __false_type)$/;"	f	line:97	class:std::_Temporary_buffer	access:protected	signature:(const _Tp& __val, __false_type)
_M_initialize_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp&, __true_type) { }$/;"	f	line:94	class:std::_Temporary_buffer	access:protected	signature:(const _Tp&, __true_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:804	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:795	class:std::vector	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1235	class:std::deque	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:1226	class:std::deque	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1112	class:std::list	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:1103	class:std::list	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:795	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)$/;"	f	line:783	class:std::vector	access:protected	signature:(_Integer __n, _Integer __value, __true_type)
_M_initialize_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_initialize_map(size_t __num_elements)$/;"	f	line:481	class:std::_Deque_base	signature:(size_t __num_elements)
_M_initialize_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:820	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
_M_initialize_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_range(_InputIterator __first, _InputIterator __last,$/;"	f	line:811	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
_M_insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_insert(iterator __position, const value_type& __x)$/;"	f	line:1159	class:std::list	access:protected	signature:(iterator __position, const value_type& __x)
_M_insert	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	line:832	class:std::_Rb_tree	signature:(_Base_ptr __x, _Base_ptr __p, const _Val& __v)
_M_insert	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)$/;"	f	line:868	class:std::_Rb_tree	signature:(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)
_M_insert_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_insert_aux(iterator __position, bool __x)$/;"	f	line:978	class:std::vector	access:protected	signature:(iterator __position, bool __x)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,$/;"	f	line:890	class:std::vector	access:protected	signature:(iterator __pos, _Integer __n, _Integer __x, __true_type)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos,$/;"	f	line:896	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_insert_dispatch(iterator __pos,$/;"	f	line:1369	class:std::deque	access:protected	signature:(iterator __pos, _Integer __n, _Integer __x, __true_type)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_insert_dispatch(iterator __pos,$/;"	f	line:1379	class:std::deque	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _InputIterator __first,$/;"	f	line:885	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,$/;"	f	line:875	class:std::vector	access:protected	signature:(iterator __pos, _Integer __n, _Integer __val, __true_type)
_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_insert_equal(_II __first, _II __last)$/;"	f	line:1221	class:std::_Rb_tree	signature:(_II __first, _II __last)
_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(const _Val& __v)$/;"	f	line:887	class:std::_Rb_tree	signature:(const _Val& __v)
_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(const_iterator __position, const _Val& __v)$/;"	f	line:1166	class:std::_Rb_tree	signature:(const_iterator __position, const _Val& __v)
_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(iterator __position, const _Val& __v)$/;"	f	line:1112	class:std::_Rb_tree	signature:(iterator __position, const _Val& __v)
_M_insert_equal_lower	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal_lower(const _Val& __v)$/;"	f	line:904	class:std::_Rb_tree	signature:(const _Val& __v)
_M_insert_lower	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_lower(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	line:850	class:std::_Rb_tree	signature:(_Base_ptr __x, _Base_ptr __p, const _Val& __v)
_M_insert_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __pos, _InputIterator __first, $/;"	f	line:933	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag)
_M_insert_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __position, _ForwardIterator __first, $/;"	f	line:945	class:std::vector	access:protected	signature:(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_insert_unique(_II __first, _II __last)$/;"	f	line:1232	class:std::_Rb_tree	signature:(_II __first, _II __last)
_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(const _Val& __v)$/;"	f	line:972	class:std::_Rb_tree	signature:(const _Val& __v)
_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(const_iterator __position, const _Val& __v)$/;"	f	line:1055	class:std::_Rb_tree	signature:(const_iterator __position, const _Val& __v)
_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(iterator __position, const _Val& __v)$/;"	f	line:998	class:std::_Rb_tree	signature:(iterator __position, const _Val& __v)
_M_ios_locale	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    locale		_M_ios_locale;$/;"	m	line:519	class:std::ios_base	access:protected
_M_is_leaked	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_is_leaked() const$/;"	f	line:190	struct:std::basic_string::_Rep	access:public	signature:() const
_M_is_shared	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_is_shared() const$/;"	f	line:194	struct:std::basic_string::_Rep	access:public	signature:() const
_M_iter	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      _ForwardIterator _M_iter;$/;"	m	line:75	class:std::raw_storage_iterator	access:protected
_M_iword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      long	_M_iword;$/;"	m	line:499	struct:std::ios_base::_Words	access:public
_M_key_compare	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Key_compare		_M_key_compare;$/;"	m	line:409	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_key_compare	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Key_compare 		_M_key_compare;$/;"	m	line:430	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_last	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_last;$/;"	m	line:121	struct:std::_Deque_iterator	access:public
_M_leak	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_leak()    \/\/ for use in begin() & non-const op[]$/;"	f	line:301	class:std::basic_string	access:private	signature:()
_M_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_left;$/;"	m	line:100	struct:std::_Rb_tree_node_base	access:public
_M_leftmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_leftmost() const$/;"	f	line:462	class:std::_Rb_tree	access:protected	signature:() const
_M_leftmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_leftmost()$/;"	f	line:458	class:std::_Rb_tree	access:protected	signature:()
_M_len	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size_type  _M_len;$/;"	m	line:90	class:std::_Temporary_buffer	access:protected
_M_length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	size_type		_M_length;$/;"	m	line:149	struct:std::basic_string::_Rep_base	access:public
_M_limit	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_limit(size_type __pos, size_type __off) const$/;"	f	line:324	class:std::basic_string	access:private	signature:(size_type __pos, size_type __off) const
_M_local_word	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words		_M_local_word[_S_local_word_size];$/;"	m	line:509	class:std::ios_base	access:protected
_M_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	_Tp** _M_map;$/;"	m	line:404	struct:std::_Deque_base::_Deque_impl	access:public
_M_map_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	size_t _M_map_size;$/;"	m	line:405	struct:std::_Deque_base::_Deque_impl	access:public
_M_mask	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const _Array<bool> _M_mask;$/;"	m	line:130	class:std::mask_array	access:private
_M_mask	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type _M_mask;$/;"	m	line:73	struct:std::_Bit_reference	access:public
_M_month01	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month01;$/;"	m	line:2786	struct:std::__timepunct_cache	access:public
_M_month02	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month02;$/;"	m	line:2787	struct:std::__timepunct_cache	access:public
_M_month03	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month03;$/;"	m	line:2788	struct:std::__timepunct_cache	access:public
_M_month04	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month04;$/;"	m	line:2789	struct:std::__timepunct_cache	access:public
_M_month05	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month05;$/;"	m	line:2790	struct:std::__timepunct_cache	access:public
_M_month06	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month06;$/;"	m	line:2791	struct:std::__timepunct_cache	access:public
_M_month07	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month07;$/;"	m	line:2792	struct:std::__timepunct_cache	access:public
_M_month08	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month08;$/;"	m	line:2793	struct:std::__timepunct_cache	access:public
_M_month09	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month09;$/;"	m	line:2794	struct:std::__timepunct_cache	access:public
_M_month10	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month10;$/;"	m	line:2795	struct:std::__timepunct_cache	access:public
_M_month11	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month11;$/;"	m	line:2796	struct:std::__timepunct_cache	access:public
_M_month12	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month12;$/;"	m	line:2797	struct:std::__timepunct_cache	access:public
_M_months	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_months(const _CharT** __months) const$/;"	f	line:2972	class:std::__timepunct	access:public	signature:(const _CharT** __months) const
_M_months_abbreviated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_months_abbreviated(const _CharT** __months) const$/;"	f	line:2989	class:std::__timepunct	access:public	signature:(const _CharT** __months) const
_M_move	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_move(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	line:350	class:std::basic_string	access:private	signature:(_CharT* __d, const _CharT* __s, size_type __n)
_M_msg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      string _M_msg;$/;"	m	line:224	class:std::ios_base::failure	access:private
_M_name_messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_name_messages;$/;"	m	line:4378	class:std::messages	access:protected
_M_name_timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_name_timepunct;$/;"	m	line:2881	class:std::__timepunct	access:protected
_M_names	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    char**				_M_names;$/;"	m	line:496	class:std::locale::_Impl	access:private
_M_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      char                      _M_narrow[128];$/;"	m	line:1227	class:std::ctype	access:protected
_M_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];$/;"	m	line:692	class:std::ctype	access:protected
_M_narrow_init	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      void _M_narrow_init() const$/;"	f	line:1175	class:std::ctype	access:private	signature:() const
_M_narrow_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool                      _M_narrow_ok;$/;"	m	line:1226	class:std::ctype	access:protected
_M_narrow_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_narrow_ok;	\/\/ 0 uninitialized, 1 init,$/;"	m	line:693	class:std::ctype	access:protected
_M_neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_base::pattern	        _M_neg_format;$/;"	m	line:3563	struct:std::__moneypunct_cache	access:public
_M_negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_negative_sign;$/;"	m	line:3559	struct:std::__moneypunct_cache	access:public
_M_negative_sign_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_negative_sign_size;$/;"	m	line:3560	struct:std::__moneypunct_cache	access:public
_M_next	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Callback_list*		_M_next;$/;"	m	line:469	struct:std::ios_base::_Callback_list	access:public
_M_next	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    _List_node_base* _M_next;   \/\/\/< Self-explanatory$/;"	m	line:77	struct:std::_List_node_base	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Map_pointer _M_node;$/;"	m	line:122	struct:std::_Deque_iterator	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^	_List_node_base _M_node;$/;"	m	line:306	struct:std::_List_base::_List_impl	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_node_base* _M_node;$/;"	m	line:178	struct:std::_List_iterator	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      const _List_node_base* _M_node;$/;"	m	line:260	struct:std::_List_const_iterator	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	line:218	struct:std::_Rb_tree_iterator	access:public
_M_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	line:293	struct:std::_Rb_tree_const_iterator	access:public
_M_node_count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  size_type 		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	line:411	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_node_count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  size_type 		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	line:432	struct:std::_Rb_tree::_Rb_tree_impl	access:public
_M_num_get	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __num_get_type*                          _M_num_get;$/;"	m	line:97	class:std::basic_ios	access:protected
_M_num_put	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __num_put_type*                          _M_num_put;$/;"	m	line:95	class:std::basic_ios	access:protected
_M_off	/home/damian/.vim/tags/cpp_src/postypes.h	/^      streamoff	                _M_off;$/;"	m	line:98	class:std::fpos	access:private
_M_off	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_off;                      \/\/ offset$/;"	m	line:81	class:std::slice	access:private
_M_offset	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    unsigned int _M_offset;$/;"	m	line:114	struct:std::_Bit_iterator_base	access:public
_M_ok	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      bool		_M_ok;$/;"	m	line:58	class:std::istream_iterator	access:private
_M_original_len	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size_type  _M_original_len;$/;"	m	line:89	class:std::_Temporary_buffer	access:protected
_M_p	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_CharT* _M_p; \/\/ The actual data.$/;"	m	line:264	struct:std::basic_string::_Alloc_hider	access:public
_M_p	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	line:113	struct:std::_Bit_iterator_base	access:public
_M_p	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	line:72	struct:std::_Bit_reference	access:public
_M_parent	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_parent;$/;"	m	line:99	struct:std::_Rb_tree_node_base	access:public
_M_pm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_pm;$/;"	m	line:2764	struct:std::__timepunct_cache	access:public
_M_pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_base::pattern		_M_pos_format;$/;"	m	line:3562	struct:std::__moneypunct_cache	access:public
_M_positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_positive_sign;$/;"	m	line:3557	struct:std::__moneypunct_cache	access:public
_M_positive_sign_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_positive_sign_size;$/;"	m	line:3558	struct:std::__moneypunct_cache	access:public
_M_precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    streamsize		_M_precision;$/;"	m	line:457	class:std::ios_base	access:protected
_M_pred	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	line:316	class:std::unary_negate	access:protected
_M_pred	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	line:340	class:std::binary_negate	access:protected
_M_prev	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    _List_node_base* _M_prev;   \/\/\/< Self-explanatory$/;"	m	line:78	struct:std::_List_node_base	access:public
_M_ptr	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg);$/;"	m	line:484	class:std::pointer_to_unary_function	access:protected
_M_ptr	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg1, _Arg2);$/;"	m	line:509	class:std::pointer_to_binary_function	access:protected
_M_put	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_put(const _CharT* __ws, streamsize __len)$/;"	f	line:270	class:std::ostreambuf_iterator	access:public	signature:(const _CharT* __ws, streamsize __len)
_M_put_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_put_node(_List_node<_Tp>* __p)$/;"	f	line:320	class:std::_List_base	access:protected	signature:(_List_node<_Tp>* __p)
_M_put_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_put_node(_Rb_tree_node* __p)$/;"	f	line:370	class:std::_Rb_tree	access:protected	signature:(_Rb_tree_node* __p)
_M_pword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      void*	_M_pword;$/;"	m	line:498	struct:std::ios_base::_Words	access:public
_M_range_check	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_range_check(size_type __n) const$/;"	f	line:615	class:std::vector	access:protected	signature:(size_type __n) const
_M_range_check	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_range_check(size_type __n) const$/;"	f	line:938	class:std::deque	access:protected	signature:(size_type __n) const
_M_range_check	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_range_check(size_type __n) const$/;"	f	line:495	class:std::vector	access:protected	signature:(size_type __n) const
_M_range_initialize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_range_initialize(_ForwardIterator __first,$/;"	f	line:816	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
_M_range_initialize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_range_initialize(_InputIterator __first,$/;"	f	line:806	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
_M_read	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _M_read()$/;"	f	line:114	class:std::istream_iterator	access:private	signature:()
_M_refcopy	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_refcopy() throw()$/;"	f	line:245	struct:std::basic_string::_Rep	access:public	signature:()
_M_refcount	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_Atomic_word		_M_refcount;$/;"	m	line:151	struct:std::basic_string::_Rep_base	access:public
_M_refcount	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Atomic_word		_M_refcount;  \/\/ 0 means one reference.$/;"	m	line:472	struct:std::ios_base::_Callback_list	access:public
_M_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _Atomic_word			_M_refcount;$/;"	m	line:492	class:std::locale::_Impl	access:private
_M_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    mutable _Atomic_word		_M_refcount;$/;"	m	line:348	class:std::locale::facet	access:private
_M_refdata	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_refdata() throw()$/;"	f	line:216	struct:std::basic_string::_Rep	access:public	signature:()
_M_remove_reference	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _M_remove_reference() $/;"	f	line:483	struct:std::ios_base::_Callback_list	access:public	signature:()
_M_remove_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_remove_reference() const throw()$/;"	f	line:405	class:std::locale::facet	access:private	signature:() const
_M_remove_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_remove_reference() throw()$/;"	f	line:510	class:std::locale::_Impl	access:private	signature:()
_M_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_rep() const$/;"	f	line:287	class:std::basic_string	access:private	signature:() const
_M_replace_dispatch	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,$/;"	f	line:1429	class:std::basic_string	access:private	signature:(iterator __i1, iterator __i2, _Integer __n, _Integer __val, __true_type)
_M_reserve_elements_at_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_elements_at_back(size_type __n)$/;"	f	line:1488	class:std::deque	access:protected	signature:(size_type __n)
_M_reserve_elements_at_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_elements_at_front(size_type __n)$/;"	f	line:1478	class:std::deque	access:protected	signature:(size_type __n)
_M_reserve_map_at_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_map_at_back(size_type __nodes_to_add = 1)$/;"	f	line:1516	class:std::deque	access:protected	signature:(size_type __nodes_to_add = 1)
_M_reserve_map_at_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_map_at_front(size_type __nodes_to_add = 1)$/;"	f	line:1524	class:std::deque	access:protected	signature:(size_type __nodes_to_add = 1)
_M_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_right;$/;"	m	line:101	struct:std::_Rb_tree_node_base	access:public
_M_rightmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_rightmost() const$/;"	f	line:470	class:std::_Rb_tree	access:protected	signature:() const
_M_rightmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_rightmost()$/;"	f	line:466	class:std::_Rb_tree	access:protected	signature:()
_M_root	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_root() const$/;"	f	line:454	class:std::_Rb_tree	access:protected	signature:() const
_M_root	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_root()$/;"	f	line:450	class:std::_Rb_tree	access:protected	signature:()
_M_sbuf	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      mutable streambuf_type*	_M_sbuf;$/;"	m	line:90	class:std::istreambuf_iterator	access:private
_M_sbuf	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      streambuf_type*	_M_sbuf;$/;"	m	line:227	class:std::ostreambuf_iterator	access:private
_M_set_leaked	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_leaked()$/;"	f	line:198	struct:std::basic_string::_Rep	access:public	signature:()
_M_set_length_and_sharable	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_length_and_sharable(size_type __n)$/;"	f	line:206	struct:std::basic_string::_Rep	access:public	signature:(size_type __n)
_M_set_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_set_node(_Map_pointer __new_node)$/;"	f	line:230	struct:std::_Deque_iterator	access:public	signature:(_Map_pointer __new_node)
_M_set_sharable	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_sharable()$/;"	f	line:202	struct:std::basic_string::_Rep	access:public	signature:()
_M_setstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      _M_setstate(iostate __state)$/;"	f	line:150	class:std::basic_ios	access:public	signature:(iostate __state)
_M_size	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_size;$/;"	m	line:108	struct:std::gslice::_Indexer	access:public
_M_size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const size_t _M_size;$/;"	m	line:709	class:std::_SBase	access:private
_M_slice	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const slice& _M_slice;$/;"	m	line:686	class:std::_SBase	access:private
_M_st	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_st;			\/\/ stride unit$/;"	m	line:83	class:std::slice	access:private
_M_start	/home/damian/.vim/tags/cpp_src/gslice.h	/^      size_t _M_start;$/;"	m	line:107	struct:std::gslice::_Indexer	access:public
_M_start	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_start;$/;"	m	line:385	struct:std::_Bvector_base::_Bvector_impl	access:public
_M_start	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	iterator _M_start;$/;"	m	line:406	struct:std::_Deque_base::_Deque_impl	access:public
_M_start	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_start;$/;"	m	line:84	struct:std::_Vector_base::_Vector_impl	access:public
_M_state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      _StateT			_M_state;$/;"	m	line:99	class:std::fpos	access:private
_M_stream	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_type*	_M_stream;$/;"	m	line:56	class:std::istream_iterator	access:private
_M_stream	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_type*	_M_stream;$/;"	m	line:164	class:std::ostream_iterator	access:private
_M_streambuf	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_streambuf<_CharT, _Traits>*              _M_streambuf;$/;"	m	line:90	class:std::basic_ios	access:protected
_M_streambuf_state	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iostate		_M_streambuf_state;$/;"	m	line:461	class:std::ios_base	access:protected
_M_stride	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_stride;$/;"	m	line:109	struct:std::gslice::_Indexer	access:public
_M_stride	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const size_t      _M_stride;$/;"	m	line:190	class:std::slice_array	access:private
_M_stride	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const size_t _M_stride;$/;"	m	line:710	class:std::_SBase	access:private
_M_string	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      const _CharT*	_M_string;$/;"	m	line:165	class:std::ostream_iterator	access:private
_M_sz	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const size_t	 _M_sz;$/;"	m	line:132	class:std::indirect_array	access:private
_M_sz	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const size_t       _M_sz;$/;"	m	line:129	class:std::mask_array	access:private
_M_sz	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const size_t      _M_sz;$/;"	m	line:189	class:std::slice_array	access:private
_M_sz	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_sz;			\/\/ size$/;"	m	line:82	class:std::slice	access:private
_M_t	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      _Rep_type _M_t;$/;"	m	line:135	class:std::map	access:private
_M_t	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      _Rep_type _M_t;$/;"	m	line:133	class:std::multimap	access:private
_M_t	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      _Rep_type _M_t;$/;"	m	line:114	class:std::multiset	access:private
_M_t	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      _Rep_type _M_t;  \/\/ red-black tree representing set$/;"	m	line:118	class:std::set	access:private
_M_table	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const mask*		_M_table;$/;"	m	line:689	class:std::ctype	access:protected
_M_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	line:1601	struct:std::__numpunct_cache	access:public
_M_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	line:3554	struct:std::__moneypunct_cache	access:public
_M_tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ostream<_CharT, _Traits>*                _M_tie;$/;"	m	line:87	class:std::basic_ios	access:protected
_M_time_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_time_era_format;$/;"	m	line:2760	struct:std::__timepunct_cache	access:public
_M_time_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_time_format;$/;"	m	line:2759	struct:std::__timepunct_cache	access:public
_M_time_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_time_formats(const _CharT** __time) const$/;"	f	line:2921	class:std::__timepunct	access:public	signature:(const _CharT** __time) const
_M_tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __to_type			_M_tolower;$/;"	m	line:688	class:std::ctype	access:protected
_M_toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __to_type			_M_toupper;$/;"	m	line:687	class:std::ctype	access:protected
_M_transfer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_transfer(iterator __position, iterator __first, iterator __last)$/;"	f	line:1154	class:std::list	access:protected	signature:(iterator __position, iterator __first, iterator __last)
_M_truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_truename;$/;"	m	line:1596	struct:std::__numpunct_cache	access:public
_M_truename_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_truename_size;$/;"	m	line:1597	struct:std::__numpunct_cache	access:public
_M_use_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	line:1595	struct:std::__numpunct_cache	access:public
_M_use_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	line:3552	struct:std::__moneypunct_cache	access:public
_M_value	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _Tp		_M_value;$/;"	m	line:57	class:std::istream_iterator	access:private
_M_value_field	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Val _M_value_field;$/;"	m	line:136	struct:std::_Rb_tree_node	access:public
_M_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	line:691	class:std::ctype	access:protected
_M_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      wint_t                    _M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	line:1228	class:std::ctype	access:protected
_M_widen_init	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      void _M_widen_init() const$/;"	f	line:1159	class:std::ctype	access:private	signature:() const
_M_widen_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_widen_ok;$/;"	m	line:690	class:std::ctype	access:protected
_M_width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    streamsize		_M_width;$/;"	m	line:458	class:std::ios_base	access:protected
_M_wmask	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __wmask_type              _M_wmask[16];$/;"	m	line:1232	class:std::ctype	access:protected
_M_word	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words*		_M_word;$/;"	m	line:513	class:std::ios_base	access:protected
_M_word_size	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    int			_M_word_size;$/;"	m	line:512	class:std::ios_base	access:protected
_M_word_zero	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words		_M_word_zero;$/;"	m	line:504	class:std::ios_base	access:protected
_Map_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp*>::other _Map_alloc_type;$/;"	t	line:397	class:std::_Deque_base	access:protected
_Map_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp**                           _Map_pointer;$/;"	t	line:116	struct:std::_Deque_iterator	access:public
_Map_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef pointer*                           _Map_pointer;$/;"	t	line:654	class:std::deque	access:protected
_MultipleAssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _MultipleAssociativeContainerConcept$/;"	s	line:837
_MultipleAssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:839	struct:_MultipleAssociativeContainerConcept	access:public	signature:()
_MultipleAssociativeContainerConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	line:851	struct:_MultipleAssociativeContainerConcept	access:public
_MultipleAssociativeContainerConcept::__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	line:851	struct:_MultipleAssociativeContainerConcept	access:public
_MultipleAssociativeContainerConcept::__pos	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::iterator __pos;$/;"	m	line:849	struct:_MultipleAssociativeContainerConcept	access:public
_MultipleAssociativeContainerConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type __t;$/;"	m	line:850	struct:_MultipleAssociativeContainerConcept	access:public
_Mutable_BidirectionalIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_BidirectionalIteratorConcept$/;"	s	line:514
_Mutable_BidirectionalIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:516	struct:_Mutable_BidirectionalIteratorConcept	access:public	signature:()
_Mutable_BidirectionalIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:521	struct:_Mutable_BidirectionalIteratorConcept	access:public
_Mutable_ContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_ContainerConcept$/;"	s	line:591
_Mutable_ContainerConcept::_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::iterator _Iterator;$/;"	t	line:595	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::_Pointer	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::pointer _Pointer;$/;"	t	line:596	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::reference _Reference;$/;"	t	line:594	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::_Value_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	line:593	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	line:608	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::__c2	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	line:608	struct:_Mutable_ContainerConcept	access:public
_Mutable_ContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:598	struct:_Mutable_ContainerConcept	access:public	signature:()
_Mutable_ContainerConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	line:607	struct:_Mutable_ContainerConcept	access:public
_Mutable_ForwardContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_ForwardContainerConcept$/;"	s	line:622
_Mutable_ForwardContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:624	struct:_Mutable_ForwardContainerConcept	access:public	signature:()
_Mutable_ForwardIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_ForwardIteratorConcept$/;"	s	line:490
_Mutable_ForwardIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:492	struct:_Mutable_ForwardIteratorConcept	access:public	signature:()
_Mutable_ForwardIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:496	struct:_Mutable_ForwardIteratorConcept	access:public
_Mutable_RandomAccessContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_RandomAccessContainerConcept$/;"	s	line:694
_Mutable_RandomAccessContainerConcept::_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::iterator _Iterator;$/;"	t	line:698	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessContainerConcept::_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reference _Reference;$/;"	t	line:697	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessContainerConcept::_Reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reverse_iterator _Reverse_iterator;$/;"	t	line:699	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessContainerConcept::_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	line:696	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessContainerConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _RandomAccessContainer __c;$/;"	m	line:713	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:701	struct:_Mutable_RandomAccessContainerConcept	access:public	signature:()
_Mutable_RandomAccessContainerConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __i;$/;"	m	line:712	struct:_Mutable_RandomAccessContainerConcept	access:public
_Mutable_RandomAccessIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_RandomAccessIteratorConcept$/;"	s	line:551
_Mutable_RandomAccessIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:553	struct:_Mutable_RandomAccessIteratorConcept	access:public	signature:()
_Mutable_RandomAccessIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:558	struct:_Mutable_RandomAccessIteratorConcept	access:public
_Mutable_RandomAccessIteratorConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	line:559	struct:_Mutable_RandomAccessIteratorConcept	access:public
_Mutable_ReversibleContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_ReversibleContainerConcept$/;"	s	line:652
_Mutable_ReversibleContainerConcept::_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::iterator _Iterator;$/;"	t	line:654	struct:_Mutable_ReversibleContainerConcept	access:public
_Mutable_ReversibleContainerConcept::_Reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::reverse_iterator _Reverse_iterator;$/;"	t	line:655	struct:_Mutable_ReversibleContainerConcept	access:public
_Mutable_ReversibleContainerConcept::__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _ReversibleContainer __c;$/;"	m	line:668	struct:_Mutable_ReversibleContainerConcept	access:public
_Mutable_ReversibleContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:657	struct:_Mutable_ReversibleContainerConcept	access:public	signature:()
_Mutable_TrivialIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _Mutable_TrivialIteratorConcept$/;"	s	line:432
_Mutable_TrivialIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:434	struct:_Mutable_TrivialIteratorConcept	access:public	signature:()
_Mutable_TrivialIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:438	struct:_Mutable_TrivialIteratorConcept	access:public
_Mutable_TrivialIteratorConcept::__j	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:438	struct:_Mutable_TrivialIteratorConcept	access:public
_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_node<_Tp>				 _Node;$/;"	t	line:434	class:std::list	access:protected
_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_node<_Tp>                    _Node;$/;"	t	line:115	struct:std::_List_iterator	access:public
_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _List_node<_Tp>              _Node;$/;"	t	line:192	struct:std::_List_const_iterator	access:public
_Node_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _Node_alloc_type;$/;"	t	line:299	class:std::_List_base	access:protected
_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^              _Node_allocator;$/;"	t	line:332	class:std::_Rb_tree	access:private
_OSTREAM_INSERT_H	/home/damian/.vim/tags/cpp_src/ostream_insert.h	36;"	d	line:36
_OutputIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _OutputIteratorConcept$/;"	s	line:462
_OutputIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:464	struct:_OutputIteratorConcept	access:public	signature:()
_OutputIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:470	struct:_OutputIteratorConcept	access:public
_OutputIteratorConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _ValueT __t;$/;"	m	line:471	struct:_OutputIteratorConcept	access:public
_PAIR_H	/home/damian/.vim/tags/cpp_src/stl_pair.h	62;"	d	line:62
_PairAssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _PairAssociativeContainerConcept$/;"	s	line:868
_PairAssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:870	struct:_PairAssociativeContainerConcept	access:public	signature:()
_Pair_alloc_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        _Pair_alloc_type;$/;"	t	line:129	class:std::map	access:private
_Pair_alloc_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        _Pair_alloc_type;$/;"	t	line:128	class:std::multimap	access:private
_Pointer	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::pointer _Pointer;$/;"	t	line:596	struct:_Mutable_ContainerConcept	access:public
_QUEUE_H	/home/damian/.vim/tags/cpp_src/stl_queue.h	63;"	d	line:63
_RandomAccessContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _RandomAccessContainerConcept$/;"	s	line:672
_RandomAccessContainerConcept::_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_iterator _Const_iterator;$/;"	t	line:676	struct:_RandomAccessContainerConcept	access:public
_RandomAccessContainerConcept::_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::const_reference _Const_reference;$/;"	t	line:675	struct:_RandomAccessContainerConcept	access:public
_RandomAccessContainerConcept::_Const_reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	line:678	struct:_RandomAccessContainerConcept	access:public
_RandomAccessContainerConcept::_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	line:674	struct:_RandomAccessContainerConcept	access:public
_RandomAccessContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:680	struct:_RandomAccessContainerConcept	access:public	signature:()
_RandomAccessContainerConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	line:690	struct:_RandomAccessContainerConcept	access:public
_RandomAccessIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _RandomAccessIteratorConcept$/;"	s	line:526
_RandomAccessIteratorConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:545	struct:_RandomAccessIteratorConcept	access:public
_RandomAccessIteratorConcept::__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:545	struct:_RandomAccessIteratorConcept	access:public
_RandomAccessIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:528	struct:_RandomAccessIteratorConcept	access:public	signature:()
_RandomAccessIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:546	struct:_RandomAccessIteratorConcept	access:public
_RandomAccessIteratorConcept::__j	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:546	struct:_RandomAccessIteratorConcept	access:public
_RandomAccessIteratorConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	line:547	struct:_RandomAccessIteratorConcept	access:public
_Raw_bytes_alloc	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;$/;"	t	line:157	struct:std::basic_string::_Rep	access:public
_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree()$/;"	f	line:568	class:std::_Rb_tree	access:public	signature:()
_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp)$/;"	f	line:571	class:std::_Rb_tree	access:public	signature:(const _Compare& __comp)
_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp, const allocator_type& __a)$/;"	f	line:575	class:std::_Rb_tree	access:public	signature:(const _Compare& __comp, const allocator_type& __a)
_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	line:579	class:std::_Rb_tree	access:public	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    class _Rb_tree$/;"	c	line:329	namespace:std
_Rb_tree_color	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	g	line:91	namespace:std
_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator()$/;"	f	line:237	struct:std::_Rb_tree_const_iterator	access:public	signature:()
_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(_Link_type __x)$/;"	f	line:241	struct:std::_Rb_tree_const_iterator	access:public	signature:(_Link_type __x)
_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(const iterator& __it)$/;"	f	line:244	struct:std::_Rb_tree_const_iterator	access:public	signature:(const iterator& __it)
_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_const_iterator$/;"	s	line:222	namespace:std
_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),$/;"	f	line:413	struct:std::_Rb_tree::_Rb_tree_impl	access:public	signature:(const _Node_allocator& __a = _Node_allocator(), const _Key_compare& __comp = _Key_compare())
_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),$/;"	f	line:434	struct:std::_Rb_tree::_Rb_tree_impl	access:public	signature:(const _Node_allocator& __a = _Node_allocator(), const _Key_compare& __comp = _Key_compare())
_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^        struct _Rb_tree_impl : public _Node_allocator$/;"	s	line:407	class:std::_Rb_tree	inherits:_Node_allocator	access:protected
_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^        struct _Rb_tree_impl<_Key_compare, true> : public _Node_allocator $/;"	s	line:428	class:std::_Rb_tree	inherits:_Node_allocator	access:protected
_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_iterator()$/;"	f	line:165	struct:std::_Rb_tree_iterator	access:public	signature:()
_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_iterator(_Link_type __x)$/;"	f	line:169	struct:std::_Rb_tree_iterator	access:public	signature:(_Link_type __x)
_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_iterator$/;"	s	line:152	namespace:std
_Rb_tree_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val> _Rb_tree_node;$/;"	t	line:337	class:std::_Rb_tree	access:protected
_Rb_tree_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_node : public _Rb_tree_node_base$/;"	s	line:133	namespace:std	inherits:_Rb_tree_node_base
_Rb_tree_node_base	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  struct _Rb_tree_node_base$/;"	s	line:93	namespace:std
_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _RefFunClos(const _Dom& __e, _Tp __f(const _Tp&))$/;"	f	line:452	struct:std::_RefFunClos	access:public	signature:(const _Dom& __e, _Tp __f(const _Tp&))
_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _RefFunClos(const valarray<_Tp>& __v, _Tp __f(const _Tp&))$/;"	f	line:463	struct:std::_RefFunClos	access:public	signature:(const valarray<_Tp>& __v, _Tp __f(const _Tp&))
_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _RefFunClos<_Expr, _Dom>$/;"	s	line:445	namespace:std	inherits:_FunBase
_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _RefFunClos<_ValArray, _Tp>$/;"	s	line:457	namespace:std	inherits:_FunBase
_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _BackInsertionSequence::reference _Reference;$/;"	t	line:770	struct:_BackInsertionSequenceConcept	access:public
_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::reference _Reference;$/;"	t	line:594	struct:_Mutable_ContainerConcept	access:public
_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reference _Reference;$/;"	t	line:697	struct:_Mutable_RandomAccessContainerConcept	access:public
_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::reference _Reference;$/;"	t	line:720	struct:_SequenceConcept	access:public
_Rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Rep : _Rep_base$/;"	s	line:154	class:std::basic_string	inherits:_Rep_base	access:private
_Rep_base	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Rep_base$/;"	s	line:147	class:std::basic_string	access:private
_Rep_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	line:132	class:std::map	access:private
_Rep_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	line:131	class:std::multimap	access:private
_Rep_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	line:112	class:std::multiset	access:private
_Rep_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	line:117	class:std::set	access:private
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	line:699	class:std::const_mem_fun1_ref_t	access:public	signature:(_Tp::*__pf) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	line:667	class:std::const_mem_fun1_t	access:public	signature:(_Tp::*__pf) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)$/;"	f	line:635	class:std::const_mem_fun_ref_t	access:public	signature:(_Tp::*__pf) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun_t(_Ret (_Tp::*__pf)() const)$/;"	f	line:603	class:std::const_mem_fun_t	access:public	signature:(_Tp::*__pf) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	line:683	class:std::mem_fun1_ref_t	access:public	signature:(_Tp::*__pf)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	line:651	class:std::mem_fun1_t	access:public	signature:(_Tp::*__pf)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun_ref_t(_Ret (_Tp::*__pf)())$/;"	f	line:619	class:std::mem_fun_ref_t	access:public	signature:(_Tp::*__pf)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun_t(_Ret (_Tp::*__pf)())$/;"	f	line:587	class:std::mem_fun_t	access:public	signature:(_Tp::*__pf)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)() const)$/;"	f	line:718	namespace:std	signature:(_Tp::*__f) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)())$/;"	f	line:713	namespace:std	signature:(_Tp::*__f)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	line:738	namespace:std	signature:(_Tp::*__f) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg))$/;"	f	line:733	namespace:std	signature:(_Tp::*__f)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)() const)$/;"	f	line:728	namespace:std	signature:(_Tp::*__f) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)())$/;"	f	line:723	namespace:std	signature:(_Tp::*__f)
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	line:748	namespace:std	signature:(_Tp::*__f) const
_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))$/;"	f	line:743	namespace:std	signature:(_Tp::*__f)
_Reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::reverse_iterator _Reverse_iterator;$/;"	t	line:699	struct:_Mutable_RandomAccessContainerConcept	access:public
_Reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::reverse_iterator _Reverse_iterator;$/;"	t	line:655	struct:_Mutable_ReversibleContainerConcept	access:public
_ReversibleContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _ReversibleContainerConcept$/;"	s	line:633
_ReversibleContainerConcept::_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _ReversibleContainer::const_iterator _Const_iterator;$/;"	t	line:635	struct:_ReversibleContainerConcept	access:public
_ReversibleContainerConcept::_Const_reverse_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_reverse_iterator;$/;"	t	line:637	struct:_ReversibleContainerConcept	access:public
_ReversibleContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:639	struct:_ReversibleContainerConcept	access:public	signature:()
_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SBase (_Array<_Tp> __a, const slice& __s)$/;"	f	line:695	class:std::_SBase	access:public	signature:(_Array<_Tp> __a, const slice& __s)
_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SBase (const _Dom& __e, const slice& __s)$/;"	f	line:673	class:std::_SBase	access:public	signature:(const _Dom& __e, const slice& __s)
_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _SBase$/;"	c	line:668	namespace:std
_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _SBase<_Array<_Tp> >$/;"	c	line:690	namespace:std
_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SClos (_Array<_Tp> __a, const slice& __s) : _Base (__a, __s) {}$/;"	f	line:730	struct:std::_SClos	access:public	signature:(_Array<_Tp> __a, const slice& __s)
_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SClos (const _Dom& __e, const slice& __s) : _Base (__e, __s) {}$/;"	f	line:720	struct:std::_SClos	access:public	signature:(const _Dom& __e, const slice& __s)
_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _SClos<_Expr, _Dom>$/;"	s	line:714	namespace:std	inherits:_SBase
_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _SClos<_ValArray, _Tp>$/;"	s	line:724	namespace:std	inherits:_SBase
_SET_H	/home/damian/.vim/tags/cpp_src/stl_set.h	62;"	d	line:62
_SGIAssignableConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SGIAssignableConcept$/;"	s	line:206
_SGIAssignableConcept::__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	line:217	struct:_SGIAssignableConcept	access:public
_SGIAssignableConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	line:213	struct:_SGIAssignableConcept	access:public	signature:(const _Tp& __b)
_SGIAssignableConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:208	struct:_SGIAssignableConcept	access:public	signature:()
_SLICE_ARRAY_H	/home/damian/.vim/tags/cpp_src/slice_array.h	39;"	d	line:39
_STACK_H	/home/damian/.vim/tags/cpp_src/stl_stack.h	63;"	d	line:63
_STL_CONSTRUCT_H	/home/damian/.vim/tags/cpp_src/stl_construct.h	62;"	d	line:62
_STL_HEAP_H	/home/damian/.vim/tags/cpp_src/stl_heap.h	61;"	d	line:61
_STL_NUMERIC_H	/home/damian/.vim/tags/cpp_src/stl_numeric.h	62;"	d	line:62
_STL_RAW_STORAGE_ITERATOR_H	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	62;"	d	line:62
_STL_RELOPS_H	/home/damian/.vim/tags/cpp_src/stl_relops.h	72;"	d	line:72
_STL_UNINITIALIZED_H	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	63;"	d	line:63
_STREAMBUF_ITERATOR_H	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	37;"	d	line:37
_STREAM_ITERATOR_H	/home/damian/.vim/tags/cpp_src/stream_iterator.h	36;"	d	line:36
_STRINGFWD_H	/home/damian/.vim/tags/cpp_src/stringfwd.h	40;"	d	line:40
_S_adjustfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_adjustfield 	= _S_left | _S_right | _S_internal,$/;"	e	line:72	enum:std::_Ios_Fmtflags
_S_app	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_app 		= 1L << 0,$/;"	e	line:109	enum:std::_Ios_Openmode
_S_ate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ate 		= 1L << 1,$/;"	e	line:110	enum:std::_Ios_Openmode
_S_atoms	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms;$/;"	m	line:3539	class:std::money_base	access:public
_S_atoms_in	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms_in;$/;"	m	line:1570	class:std::__num_base	access:public
_S_atoms_out	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms_out;$/;"	m	line:1566	class:std::__num_base	access:public
_S_badbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_badbit 		= 1L << 0,$/;"	e	line:150	enum:std::_Ios_Iostate
_S_basefield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_basefield 	= _S_dec | _S_oct | _S_hex,$/;"	e	line:73	enum:std::_Ios_Fmtflags
_S_beg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_beg = 0,$/;"	e	line:186	enum:std::_Ios_Seekdir
_S_bin	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_bin 		= 1L << 2,$/;"	e	line:111	enum:std::_Ios_Openmode
_S_black	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	line:91	enum:std::_Rb_tree_color
_S_boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_boolalpha 	= 1L << 0,$/;"	e	line:57	enum:std::_Ios_Fmtflags
_S_buffer_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	line:107	struct:std::_Deque_iterator	access:public	signature:()
_S_buffer_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	line:656	class:std::deque	access:protected	signature:()
_S_c_locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __c_locale                   _S_c_locale;$/;"	m	line:351	class:std::locale::facet	access:private
_S_c_name	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const char			_S_c_name[2];$/;"	m	line:354	class:std::locale::facet	access:private
_S_categories	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const char* const* const _S_categories;$/;"	m	line:297	class:std::locale	access:private
_S_categories_size	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };$/;"	e	line:309	enum:std::locale::__anon2
_S_chunk_size	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^  enum { _S_chunk_size = 7 };$/;"	e	line:3379	enum:std::__anon8
_S_classic	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Impl*       _S_classic;$/;"	m	line:288	class:std::locale	access:private
_S_construct	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)$/;"	f	line:1466	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a)
_S_construct_aux	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	line:1450	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a, __false_type)
_S_construct_aux	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	line:1459	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a, __true_type)
_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)$/;"	f	line:371	class:std::basic_string	access:private	signature:(_CharT* __p, _Iterator __k1, _Iterator __k2)
_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)$/;"	f	line:386	class:std::basic_string	access:private	signature:(_CharT* __p, _CharT* __k1, _CharT* __k2)
_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)$/;"	f	line:390	class:std::basic_string	access:private	signature:(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)$/;"	f	line:382	class:std::basic_string	access:private	signature:(_CharT* __p, const_iterator __k1, const_iterator __k2)
_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)$/;"	f	line:378	class:std::basic_string	access:private	signature:(_CharT* __p, iterator __k1, iterator __k2)
_S_cur	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_cur = SEEK_CUR,$/;"	e	line:187	enum:std::_Ios_Seekdir
_S_dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_dec 		= 1L << 1,$/;"	e	line:58	enum:std::_Ios_Fmtflags
_S_default_pattern	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const pattern _S_default_pattern;$/;"	m	line:3528	class:std::money_base	access:public
_S_do_it	/home/damian/.vim/tags/cpp_src/allocator.h	/^      _S_do_it(_Alloc& __one, _Alloc& __two)$/;"	f	line:153	struct:std::__alloc_swap	access:public	signature:(_Alloc& __one, _Alloc& __two)
_S_do_it	/home/damian/.vim/tags/cpp_src/allocator.h	/^    { static void _S_do_it(_Alloc&, _Alloc&) { } };$/;"	f	line:147	struct:std::__alloc_swap	access:public	signature:(_Alloc&, _Alloc&)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:81	struct:std::_Array_default_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:93	struct:std::_Array_default_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e,  const _Tp __t)$/;"	f	line:124	struct:std::_Array_init_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)$/;"	f	line:113	struct:std::_Array_init_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)$/;"	f	line:258	struct:std::_Array_copier	access:public	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)$/;"	f	line:269	struct:std::_Array_copier	access:public	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,$/;"	f	line:149	struct:std::_Array_copy_ctor	access:public	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,$/;"	f	line:161	struct:std::_Array_copy_ctor	access:public	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
_S_empty_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_empty_rep()$/;"	f	line:180	struct:std::basic_string::_Rep	access:public	signature:()
_S_empty_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_empty_rep()$/;"	f	line:400	class:std::basic_string	access:private	signature:()
_S_empty_rep_storage	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        static size_type _S_empty_rep_storage[];$/;"	m	line:177	struct:std::basic_string::_Rep	access:public
_S_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_end = SEEK_END,$/;"	e	line:188	enum:std::_Ios_Seekdir
_S_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_end = 11$/;"	e	line:3534	enum:std::money_base::__anon5
_S_eofbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_eofbit 		= 1L << 1,$/;"	e	line:151	enum:std::_Ios_Iostate
_S_facet_categories	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const* const _S_facet_categories[];$/;"	m	line:503	class:std::locale::_Impl::locale	access:private
_S_failbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_failbit		= 1L << 2,$/;"	e	line:152	enum:std::_Ios_Iostate
_S_fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_fixed 		= 1L << 2,$/;"	e	line:59	enum:std::_Ios_Fmtflags
_S_floatfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_floatfield 	= _S_scientific | _S_fixed,$/;"	e	line:74	enum:std::_Ios_Fmtflags
_S_global	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Impl*	_S_global;$/;"	m	line:291	class:std::locale	access:private
_S_goodbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_goodbit 		= 0,$/;"	e	line:149	enum:std::_Ios_Iostate
_S_hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_hex 		= 1L << 3,$/;"	e	line:60	enum:std::_Ios_Fmtflags
_S_iE	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iE = _S_izero + 20,$/;"	e	line:1580	enum:std::__num_base::__anon4
_S_iX	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iX,$/;"	e	line:1577	enum:std::__num_base::__anon4
_S_id_collate	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_collate[];$/;"	m	line:499	class:std::locale::_Impl::locale	access:private
_S_id_ctype	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_ctype[];$/;"	m	line:497	class:std::locale::_Impl::locale	access:private
_S_id_messages	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_messages[];$/;"	m	line:502	class:std::locale::_Impl::locale	access:private
_S_id_monetary	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_monetary[];$/;"	m	line:501	class:std::locale::_Impl::locale	access:private
_S_id_numeric	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_numeric[];$/;"	m	line:498	class:std::locale::_Impl::locale	access:private
_S_id_time	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_time[];$/;"	m	line:500	class:std::locale::_Impl::locale	access:private
_S_ie	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_ie = _S_izero + 14,$/;"	e	line:1579	enum:std::__num_base::__anon4
_S_iend	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iend = 26$/;"	e	line:1581	enum:std::__num_base::__anon4
_S_iminus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iminus,$/;"	e	line:1574	enum:std::__num_base::__anon4
_S_in	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_in 		= 1L << 3,$/;"	e	line:112	enum:std::_Ios_Openmode
_S_initial_map_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      enum { _S_initial_map_size = 8 };$/;"	e	line:451	enum:std::_Deque_base::__anon1
_S_internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_internal 	= 1L << 4,$/;"	e	line:61	enum:std::_Ios_Fmtflags
_S_ios_fmtflags_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_fmtflags_end = 1L << 16 $/;"	e	line:75	enum:std::_Ios_Fmtflags
_S_ios_iostate_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_iostate_end = 1L << 16 $/;"	e	line:153	enum:std::_Ios_Iostate
_S_ios_openmode_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_openmode_end = 1L << 16 $/;"	e	line:115	enum:std::_Ios_Openmode
_S_ios_seekdir_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_seekdir_end = 1L << 16 $/;"	e	line:189	enum:std::_Ios_Seekdir
_S_iplus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iplus,$/;"	e	line:1575	enum:std::__num_base::__anon4
_S_ix	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_ix,$/;"	e	line:1576	enum:std::__num_base::__anon4
_S_izero	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_izero,$/;"	e	line:1578	enum:std::__num_base::__anon4
_S_key	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_key(_Const_Base_ptr __x)$/;"	f	line:521	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_key	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_key(_Const_Link_type __x)$/;"	f	line:497	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
_S_left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_left 		= 1L << 5,$/;"	e	line:62	enum:std::_Ios_Fmtflags
_S_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_left(_Base_ptr __x)$/;"	f	line:501	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
_S_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_left(_Const_Base_ptr __x)$/;"	f	line:505	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_local_word_size	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    enum { _S_local_word_size = 8 };$/;"	e	line:508	enum:std::ios_base::__anon6
_S_max_size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	static const size_type	_S_max_size;$/;"	m	line:172	struct:std::basic_string::_Rep	access:public
_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_maximum(_Base_ptr __x)$/;"	f	line:533	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_maximum(_Const_Base_ptr __x)$/;"	f	line:537	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_maximum(_Base_ptr __x)$/;"	f	line:118	struct:std::_Rb_tree_node_base	access:public	signature:(_Base_ptr __x)
_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_maximum(_Const_Base_ptr __x)$/;"	f	line:125	struct:std::_Rb_tree_node_base	access:public	signature:(_Const_Base_ptr __x)
_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_minimum(_Base_ptr __x)$/;"	f	line:525	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_minimum(_Const_Base_ptr __x)$/;"	f	line:529	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_minimum(_Base_ptr __x)$/;"	f	line:104	struct:std::_Rb_tree_node_base	access:public	signature:(_Base_ptr __x)
_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_minimum(_Const_Base_ptr __x)$/;"	f	line:111	struct:std::_Rb_tree_node_base	access:public	signature:(_Const_Base_ptr __x)
_S_minus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_minus,$/;"	e	line:3532	enum:std::money_base::__anon5
_S_oE	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oE = _S_oudigits + 14, \/\/ For scientific notation, 'E'$/;"	e	line:1557	enum:std::__num_base::__anon3
_S_oX	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oX,$/;"	e	line:1551	enum:std::__num_base::__anon3
_S_oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_oct 		= 1L << 6,$/;"	e	line:63	enum:std::_Ios_Fmtflags
_S_odigits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_odigits,$/;"	e	line:1552	enum:std::__num_base::__anon3
_S_odigits_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_odigits_end = _S_odigits + 16,$/;"	e	line:1553	enum:std::__num_base::__anon3
_S_oe	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oe = _S_odigits + 14,  \/\/ For scientific notation, 'e'$/;"	e	line:1556	enum:std::__num_base::__anon3
_S_oend	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^	_S_oend = _S_oudigits_end$/;"	e	line:1558	enum:std::__num_base::__anon3
_S_ominus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_ominus,$/;"	e	line:1548	enum:std::__num_base::__anon3
_S_once	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __gthread_once_t		_S_once;$/;"	m	line:357	class:std::locale::facet	access:private
_S_once	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __gthread_once_t _S_once;$/;"	m	line:312	class:std::locale	access:private
_S_oplus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oplus,$/;"	e	line:1549	enum:std::__num_base::__anon3
_S_oudigits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oudigits = _S_odigits_end,$/;"	e	line:1554	enum:std::__num_base::__anon3
_S_oudigits_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oudigits_end = _S_oudigits + 16,$/;"	e	line:1555	enum:std::__num_base::__anon3
_S_out	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_out 		= 1L << 4,$/;"	e	line:113	enum:std::_Ios_Openmode
_S_ox	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_ox,$/;"	e	line:1550	enum:std::__num_base::__anon3
_S_red	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	line:91	enum:std::_Rb_tree_color
_S_refcount	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      static _Atomic_word	_S_refcount;$/;"	m	line:538	class:std::ios_base::Init	access:private
_S_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Atomic_word		_S_refcount;$/;"	m	line:453	class:std::locale::id	access:private
_S_right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_right 		= 1L << 7,$/;"	e	line:64	enum:std::_Ios_Fmtflags
_S_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_right(_Base_ptr __x)$/;"	f	line:509	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
_S_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_right(_Const_Base_ptr __x)$/;"	f	line:513	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_scientific 	= 1L << 8,$/;"	e	line:65	enum:std::_Ios_Fmtflags
_S_showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showbase 	= 1L << 9,$/;"	e	line:66	enum:std::_Ios_Fmtflags
_S_showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showpoint 	= 1L << 10,$/;"	e	line:67	enum:std::_Ios_Fmtflags
_S_showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showpos 	= 1L << 11,$/;"	e	line:68	enum:std::_Ios_Fmtflags
_S_skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_skipws 	= 1L << 12,$/;"	e	line:69	enum:std::_Ios_Fmtflags
_S_synced_with_stdio	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      static bool		_S_synced_with_stdio;$/;"	m	line:539	class:std::ios_base::Init	access:private
_S_terminal	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	static const _CharT	_S_terminal;$/;"	m	line:173	struct:std::basic_string::_Rep	access:public
_S_threshold	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^  enum { _S_threshold = 16 };$/;"	e	line:2296	enum:std::__anon7
_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const _CharT*		_S_timezones[14];$/;"	m	line:2755	struct:std::__timepunct_cache	access:public
_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<char>::_S_timezones[14];$/;"	m	line:2857	class:std::__timepunct_cache
_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<wchar_t>::_S_timezones[14];$/;"	m	line:2862	class:std::__timepunct_cache
_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];$/;"	m	line:2867	class:std::__timepunct_cache
_S_trunc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_trunc 		= 1L << 5,$/;"	e	line:114	enum:std::_Ios_Openmode
_S_unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_unitbuf 	= 1L << 13,$/;"	e	line:70	enum:std::_Ios_Fmtflags
_S_uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_uppercase 	= 1L << 14,$/;"	e	line:71	enum:std::_Ios_Fmtflags
_S_value	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_value(_Const_Base_ptr __x)$/;"	f	line:517	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
_S_value	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_value(_Const_Link_type __x)$/;"	f	line:493	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
_S_word_bit	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  enum { _S_word_bit = int(CHAR_BIT * sizeof(_Bit_type)) };$/;"	e	line:68	enum:std::__anon9
_S_zero	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_zero,$/;"	e	line:3533	enum:std::money_base::__anon5
_SameTypeConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SameTypeConcept$/;"	s	line:114
_SameTypeConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:116	struct:_SameTypeConcept	access:public	signature:()
_Select1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Select1st : public unary_function<_Pair,$/;"	s	line:542	namespace:std	inherits:unary_function
_Select2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Select2nd : public unary_function<_Pair,$/;"	s	line:555	namespace:std	inherits:unary_function
_Self	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator                 _Self;$/;"	t	line:117	struct:std::_Deque_iterator	access:public
_Self	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>          _Self;$/;"	t	line:191	struct:std::_List_const_iterator	access:public
_Self	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                _Self;$/;"	t	line:114	struct:std::_List_iterator	access:public
_Self	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<_Tp>        _Self;$/;"	t	line:233	struct:std::_Rb_tree_const_iterator	access:public
_Self	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp>        _Self;$/;"	t	line:161	struct:std::_Rb_tree_iterator	access:public
_SequenceConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SequenceConcept$/;"	s	line:718
_SequenceConcept::_Const_reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::const_reference _Const_reference;$/;"	t	line:721	struct:_SequenceConcept	access:public
_SequenceConcept::_Reference	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Sequence::reference _Reference;$/;"	t	line:720	struct:_SequenceConcept	access:public
_SequenceConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Sequence& __c) {$/;"	f	line:745	struct:_SequenceConcept	access:public	signature:(const _Sequence& __c)
_SequenceConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:723	struct:_SequenceConcept	access:public	signature:()
_SequenceConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	line:750	struct:_SequenceConcept	access:public
_SequenceConcept::__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	line:750	struct:_SequenceConcept	access:public
_SequenceConcept::__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::size_type __n;$/;"	m	line:749	struct:_SequenceConcept	access:public
_SequenceConcept::__p	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	line:751	struct:_SequenceConcept	access:public
_SequenceConcept::__q	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	line:751	struct:_SequenceConcept	access:public
_SequenceConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type __t;$/;"	m	line:748	struct:_SequenceConcept	access:public
_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:325	class:std::priority_queue	access:private
_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:98	class:std::queue	access:private
_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:101	class:std::stack	access:private
_SignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SignedIntegerConcept {$/;"	s	line:138
_SignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<int> { void __constraints() {} };$/;"	s	line:144
_SignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long long> { void __constraints(){}};$/;"	s	line:146
_SignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long> { void __constraints() {} };$/;"	s	line:145
_SignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<short> { void __constraints() {} };$/;"	s	line:143
_SignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:139	struct:_SignedIntegerConcept	access:public	signature:()
_SignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<int> { void __constraints() {} };$/;"	f	line:144	struct:_SignedIntegerConcept	access:public	signature:()
_SignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long long> { void __constraints(){}};$/;"	f	line:146	struct:_SignedIntegerConcept	access:public	signature:()
_SignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long> { void __constraints() {} };$/;"	f	line:145	struct:_SignedIntegerConcept	access:public	signature:()
_SignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<short> { void __constraints() {} };$/;"	f	line:143	struct:_SignedIntegerConcept	access:public	signature:()
_SimpleAssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SimpleAssociativeContainerConcept$/;"	s	line:855
_SimpleAssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:857	struct:_SimpleAssociativeContainerConcept	access:public	signature:()
_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::size_type _Size_type;$/;"	t	line:570	struct:_ContainerConcept	access:public
_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	line:674	struct:_RandomAccessContainerConcept	access:public
_Size_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _RandomAccessContainer::size_type _Size_type;$/;"	t	line:696	struct:_Mutable_RandomAccessContainerConcept	access:public
_SortedAssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _SortedAssociativeContainerConcept$/;"	s	line:883
_SortedAssociativeContainerConcept::_Const_iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^      _Const_iterator;$/;"	t	line:916	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::_Iterator	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _SortedAssociativeContainer::iterator _Iterator;$/;"	t	line:914	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _SortedAssociativeContainer& __c) {$/;"	f	line:902	struct:_SortedAssociativeContainerConcept	access:public	signature:(const _SortedAssociativeContainer& __c)
_SortedAssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:885	struct:_SortedAssociativeContainerConcept	access:public	signature:()
_SortedAssociativeContainerConcept::__cp	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __cp;$/;"	m	line:919	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__cr	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	line:921	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	line:922	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__k	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_type __k;$/;"	m	line:913	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__kc	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_compare __kc;$/;"	m	line:910	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	line:922	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__p	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __p;$/;"	m	line:918	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	line:920	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type __t;$/;"	m	line:912	struct:_SortedAssociativeContainerConcept	access:public
_SortedAssociativeContainerConcept::__vc	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_compare __vc;$/;"	m	line:911	struct:_SortedAssociativeContainerConcept	access:public
_TEMPBUF_H	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	63;"	d	line:63
_TREE_H	/home/damian/.vim/tags/cpp_src/stl_tree.h	65;"	d	line:65
_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:144	class:std::_Temporary_buffer	signature:(_ForwardIterator __first, _ForwardIterator __last)
_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^    class _Temporary_buffer$/;"	c	line:77	namespace:std
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:602	struct:std::_BinClos	access:public
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:614	struct:std::_BinClos	access:public
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:626	struct:std::_BinClos	access:public
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:637	struct:std::_BinClos	access:public
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	line:430	struct:std::_ValFunClos	access:public
_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	line:450	struct:std::_RefFunClos	access:public
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp>::other  _Tp_alloc_type;$/;"	t	line:399	class:std::_Deque_base	access:protected
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::_Tp_alloc_type	 _Tp_alloc_type;$/;"	t	line:637	class:std::deque	access:private
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	line:301	class:std::_List_base	access:protected
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	line:415	class:std::list	access:private
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	line:79	struct:std::_Vector_base	access:public
_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	line:168	class:std::vector	access:private
_TrivialIteratorConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _TrivialIteratorConcept$/;"	s	line:419
_TrivialIteratorConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:421	struct:_TrivialIteratorConcept	access:public	signature:()
_TrivialIteratorConcept::__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:428	struct:_TrivialIteratorConcept	access:public
_Type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^struct _Aux_require_same<_Tp,_Tp> { typedef _Tp _Type; };$/;"	t	line:111	struct:_Aux_require_same	access:public
_UnBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnBase(const _Arg& __e) : _M_expr(__e) {}$/;"	f	line:478	class:std::_UnBase	access:public	signature:(const _Arg& __e)
_UnBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _UnBase$/;"	c	line:472	namespace:std
_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnClos(const _Arg& __e) : _Base(__e) {}$/;"	f	line:497	struct:std::_UnClos	access:public	signature:(const _Arg& __e)
_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnClos(const _Arg& __e) : _Base(__e) {}$/;"	f	line:508	struct:std::_UnClos	access:public	signature:(const _Arg& __e)
_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _Expr, _Dom>$/;"	s	line:490	namespace:std	inherits:_UnBase
_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _ValArray, _Tp>$/;"	s	line:501	namespace:std	inherits:_UnBase
_UnaryFunctionConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _UnaryFunctionConcept$/;"	s	line:336
_UnaryFunctionConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _UnaryFunctionConcept<_Func, void, _Arg> {$/;"	s	line:347
_UnaryFunctionConcept::__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:342	struct:_UnaryFunctionConcept	access:public
_UnaryFunctionConcept::__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:352	struct:_UnaryFunctionConcept	access:public
_UnaryFunctionConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:338	struct:_UnaryFunctionConcept	access:public	signature:()
_UnaryFunctionConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:348	struct:_UnaryFunctionConcept	access:public	signature:()
_UnaryFunctionConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:341	struct:_UnaryFunctionConcept	access:public
_UnaryFunctionConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:351	struct:_UnaryFunctionConcept	access:public
_UnaryFunctionConcept::__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	line:343	struct:_UnaryFunctionConcept	access:public
_UnaryPredicateConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _UnaryPredicateConcept$/;"	s	line:379
_UnaryPredicateConcept::__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:385	struct:_UnaryPredicateConcept	access:public
_UnaryPredicateConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:381	struct:_UnaryPredicateConcept	access:public	signature:()
_UnaryPredicateConcept::__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:384	struct:_UnaryPredicateConcept	access:public
_UniqueAssociativeContainerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _UniqueAssociativeContainerConcept$/;"	s	line:820
_UniqueAssociativeContainerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:822	struct:_UniqueAssociativeContainerConcept	access:public	signature:()
_UniqueAssociativeContainerConcept::__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	line:833	struct:_UniqueAssociativeContainerConcept	access:public
_UniqueAssociativeContainerConcept::__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	line:833	struct:_UniqueAssociativeContainerConcept	access:public
_UniqueAssociativeContainerConcept::__pos_flag	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<typename _UniqueAssociativeContainer::iterator, bool> __pos_flag;$/;"	m	line:831	struct:_UniqueAssociativeContainerConcept	access:public
_UniqueAssociativeContainerConcept::__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type __t;$/;"	m	line:832	struct:_UniqueAssociativeContainerConcept	access:public
_UnsignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  struct _UnsignedIntegerConcept {$/;"	s	line:149
_UnsignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned int>$/;"	s	line:156
_UnsignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned long long>$/;"	s	line:160
_UnsignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned long>$/;"	s	line:158
_UnsignedIntegerConcept	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _UnsignedIntegerConcept<unsigned short>$/;"	s	line:154
_UnsignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:150	struct:_UnsignedIntegerConcept	access:public	signature:()
_UnsignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:155	struct:_UnsignedIntegerConcept	access:public	signature:()
_UnsignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:157	struct:_UnsignedIntegerConcept	access:public	signature:()
_UnsignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:159	struct:_UnsignedIntegerConcept	access:public	signature:()
_UnsignedIntegerConcept::__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:161	struct:_UnsignedIntegerConcept	access:public	signature:()
_VALARRAY_AFTER_H	/home/damian/.vim/tags/cpp_src/valarray_after.h	39;"	d	line:39
_VALARRAY_ARRAY_H	/home/damian/.vim/tags/cpp_src/valarray_array.h	39;"	d	line:39
_VALARRAY_BEFORE_H	/home/damian/.vim/tags/cpp_src/valarray_before.h	39;"	d	line:39
_VECTOR_H	/home/damian/.vim/tags/cpp_src/stl_vector.h	63;"	d	line:63
_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _ValFunClos(const _Dom& __e, _Tp __f(_Tp)) : _Base(__e, __f) {}$/;"	f	line:432	struct:std::_ValFunClos	access:public	signature:(const _Dom& __e, _Tp __f(_Tp))
_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _ValFunClos(const valarray<_Tp>& __v, _Tp __f(_Tp)) : _Base(__v, __f) {}$/;"	f	line:441	struct:std::_ValFunClos	access:public	signature:(const valarray<_Tp>& __v, _Tp __f(_Tp))
_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _ValFunClos<_Expr,_Dom> : _FunBase<_Dom, typename _Dom::value_type>$/;"	s	line:426	namespace:std	inherits:_FunBase
_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _ValFunClos<_ValArray,_Tp> : _FunBase<valarray<_Tp>, _Tp>$/;"	s	line:436	namespace:std	inherits:_FunBase
_Value_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	line:568	struct:_ContainerConcept	access:public
_Value_type	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typedef typename _Container::value_type _Value_type;$/;"	t	line:593	struct:_Mutable_ContainerConcept	access:public
_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_base(const allocator_type& __a)$/;"	f	line:107	struct:std::_Vector_base	access:public	signature:(const allocator_type& __a)
_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_base(size_t __n, const allocator_type& __a)$/;"	f	line:111	struct:std::_Vector_base	access:public	signature:(size_t __n, const allocator_type& __a)
_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    struct _Vector_base$/;"	s	line:77	namespace:std
_Vector_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Vector_impl(_Tp_alloc_type const& __a)$/;"	f	line:87	struct:std::_Vector_base::_Vector_impl	access:public	signature:(_Tp_alloc_type const& __a)
_Vector_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      struct _Vector_impl $/;"	s	line:81	struct:std::_Vector_base	inherits:_Tp_alloc_type	access:public
_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Arg::value_type _Vt;$/;"	t	line:475	class:std::_UnBase	access:public
_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	line:541	class:std::_BinBase2	access:public
_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	line:561	class:std::_BinBase1	access:public
_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _FirstArg::value_type _Vt;$/;"	t	line:520	class:std::_BinBase	access:public
_Words	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Words() : _M_pword(0), _M_iword(0) { }$/;"	f	line:500	struct:std::ios_base::_Words	access:public	signature:()
_Words	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    struct _Words$/;"	s	line:496	class:std::ios_base	access:protected
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	line:395	struct:_BinaryPredicateConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __a;$/;"	m	line:411	struct:_Const_BinaryPredicateConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:250	struct:_EqualityComparableConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:259	struct:_LessThanComparableConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:272	struct:_ComparableConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:545	struct:_RandomAccessIteratorConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	line:184	struct:_AssignableConcept	access:public
__a	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a;$/;"	m	line:217	struct:_SGIAssignableConcept	access:public
__abs	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __abs$/;"	s	line:67	namespace:std
__acos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __acos$/;"	s	line:81	namespace:std
__adjust_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:209	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __len, _Tp __value)
__adjust_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:272	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __len, _Tp __value, _Compare __comp)
__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_BidirectionalIterator& __i, _Distance __n,$/;"	f	line:134	namespace:std	signature:(_BidirectionalIterator& __i, _Distance __n, bidirectional_iterator_tag)
__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)$/;"	f	line:124	namespace:std	signature:(_InputIterator& __i, _Distance __n, input_iterator_tag)
__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_RandomAccessIterator& __i, _Distance __n,$/;"	f	line:150	namespace:std	signature:(_RandomAccessIterator& __i, _Distance __n, random_access_iterator_tag)
__alloc_swap	/home/damian/.vim/tags/cpp_src/allocator.h	/^    struct __alloc_swap$/;"	s	line:146	namespace:std
__alloc_swap	/home/damian/.vim/tags/cpp_src/allocator.h	/^    struct __alloc_swap<_Alloc, false>$/;"	s	line:150	namespace:std
__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:342	struct:_UnaryFunctionConcept	access:public
__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:352	struct:_UnaryFunctionConcept	access:public
__arg	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Arg __arg;$/;"	m	line:385	struct:_UnaryPredicateConcept	access:public
__asin	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __asin$/;"	s	line:102	namespace:std
__atan	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __atan$/;"	s	line:123	namespace:std
__atan2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __atan2$/;"	s	line:323	namespace:std
__aux_require_boolean_expr	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  void __aux_require_boolean_expr(const _Tp& __t) {$/;"	f	line:239	signature:(const _Tp& __t)
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	line:396	struct:_BinaryPredicateConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __b;$/;"	m	line:412	struct:_Const_BinaryPredicateConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:250	struct:_EqualityComparableConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:259	struct:_LessThanComparableConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:272	struct:_ComparableConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __a, __b;$/;"	m	line:545	struct:_RandomAccessIteratorConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __b;$/;"	m	line:201	struct:_CopyConstructibleConcept	access:public
__b	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    bool __b;$/;"	m	line:585	struct:_ContainerConcept	access:public
__bitwise_and	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_and$/;"	s	line:232	namespace:std
__bitwise_not	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_not$/;"	s	line:183	namespace:std
__bitwise_or	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_or$/;"	s	line:239	namespace:std
__bitwise_xor	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_xor$/;"	s	line:225	namespace:std
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _AssociativeContainer __c;$/;"	m	line:810	struct:_AssociativeContainerConcept	access:public
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _BackInsertionSequence __c;$/;"	m	line:783	struct:_BackInsertionSequenceConcept	access:public
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	line:608	struct:_Mutable_ContainerConcept	access:public
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _FrontInsertionSequence __c;$/;"	m	line:763	struct:_FrontInsertionSequenceConcept	access:public
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _RandomAccessContainer __c;$/;"	m	line:713	struct:_Mutable_RandomAccessContainerConcept	access:public
__c	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _ReversibleContainer __c;$/;"	m	line:668	struct:_Mutable_ReversibleContainerConcept	access:public
__c2	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Container __c, __c2;$/;"	m	line:608	struct:_Mutable_ContainerConcept	access:public
__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;$/;"	t	line:3624	class:std::moneypunct	access:public
__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __numpunct_cache<_CharT>  __cache_type;$/;"	t	line:1671	class:std::numpunct	access:public
__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __timepunct_cache<_CharT>	__cache_type;$/;"	t	line:2876	class:std::__timepunct	access:public
__char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			__char_type;$/;"	t	line:2874	class:std::__timepunct	access:public
__check_facet	/home/damian/.vim/tags/cpp_src/localefwd.h	/^    __check_facet(const _Facet* __f)$/;"	f	line:188	namespace:std	signature:(const _Facet* __f)
__chunk_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:3383	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Distance __chunk_size)
__chunk_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:3397	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Distance __chunk_size, _Compare __comp)
__ci	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __ci;$/;"	m	line:813	struct:_AssociativeContainerConcept	access:public
__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }$/;"	f	line:228	class:std::__codecvt_abstract_base	access:protected	signature:(size_t __refs = 0)
__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class __codecvt_abstract_base$/;"	c	line:72	namespace:std	inherits:locale::facet,codecvt_base
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _AssociativeContainer& __c) {$/;"	f	line:802	struct:_AssociativeContainerConcept	access:public	signature:(const _AssociativeContainer& __c)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _BackInsertionSequence& __c) {$/;"	f	line:780	struct:_BackInsertionSequenceConcept	access:public	signature:(const _BackInsertionSequence& __c)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Func& __fun) {$/;"	f	line:405	struct:_Const_BinaryPredicateConcept	access:public	signature:(const _Func& __fun)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Sequence& __c) {$/;"	f	line:745	struct:_SequenceConcept	access:public	signature:(const _Sequence& __c)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _SortedAssociativeContainer& __c) {$/;"	f	line:902	struct:_SortedAssociativeContainerConcept	access:public	signature:(const _SortedAssociativeContainer& __c)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __a) {$/;"	f	line:197	struct:_CopyConstructibleConcept	access:public	signature:(const _Tp& __a)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	line:181	struct:_AssignableConcept	access:public	signature:(const _Tp& __b)
__const_constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __const_constraints(const _Tp& __b) {$/;"	f	line:213	struct:_SGIAssignableConcept	access:public	signature:(const _Tp& __b)
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^                                                { void __constraints() {} };$/;"	f	line:135	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:116	struct:_SameTypeConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:123	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:139	struct:_SignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:150	struct:_UnsignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:169	struct:_DefaultConstructibleConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:177	struct:_AssignableConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:192	struct:_CopyConstructibleConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:208	struct:_SGIAssignableConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:223	struct:_ConvertibleConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:247	struct:_EqualityComparableConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:256	struct:_LessThanComparableConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:266	struct:_ComparableConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:319	struct:_GeneratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:329	struct:_GeneratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:338	struct:_UnaryFunctionConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:348	struct:_UnaryFunctionConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:358	struct:_BinaryFunctionConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:370	struct:_BinaryFunctionConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:381	struct:_UnaryPredicateConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:391	struct:_BinaryPredicateConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:402	struct:_Const_BinaryPredicateConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:421	struct:_TrivialIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:434	struct:_Mutable_TrivialIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:444	struct:_InputIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:464	struct:_OutputIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:477	struct:_ForwardIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:492	struct:_Mutable_ForwardIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:502	struct:_BidirectionalIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:516	struct:_Mutable_BidirectionalIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:528	struct:_RandomAccessIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:553	struct:_Mutable_RandomAccessIteratorConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:575	struct:_ContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:598	struct:_Mutable_ContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:614	struct:_ForwardContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:624	struct:_Mutable_ForwardContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:639	struct:_ReversibleContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:657	struct:_Mutable_ReversibleContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:680	struct:_RandomAccessContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:701	struct:_Mutable_RandomAccessContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:723	struct:_SequenceConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:757	struct:_FrontInsertionSequenceConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:773	struct:_BackInsertionSequenceConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:790	struct:_AssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:822	struct:_UniqueAssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:839	struct:_MultipleAssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:857	struct:_SimpleAssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:870	struct:_PairAssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    void __constraints() {$/;"	f	line:885	struct:_SortedAssociativeContainerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:155	struct:_UnsignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:157	struct:_UnsignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:159	struct:_UnsignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    { void __constraints() {} };$/;"	f	line:161	struct:_UnsignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<int> { void __constraints() {} };$/;"	f	line:129	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long long> { void __constraints() {} };$/;"	f	line:133	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<long> { void __constraints() {} };$/;"	f	line:131	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<short> { void __constraints() {} };$/;"	f	line:127	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned int> { void __constraints() {} };$/;"	f	line:130	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned long> { void __constraints() {} };$/;"	f	line:132	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _IntegerConcept<unsigned short> { void __constraints(){} };$/;"	f	line:128	struct:_IntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<int> { void __constraints() {} };$/;"	f	line:144	struct:_SignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long long> { void __constraints(){}};$/;"	f	line:146	struct:_SignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<long> { void __constraints() {} };$/;"	f	line:145	struct:_SignedIntegerConcept	access:public	signature:()
__constraints	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^  template <> struct _SignedIntegerConcept<short> { void __constraints() {} };$/;"	f	line:143	struct:_SignedIntegerConcept	access:public	signature:()
__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy$/;"	s	line:261	namespace:std
__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy<_BoolType, random_access_iterator_tag>$/;"	s	line:274	namespace:std
__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy<true, random_access_iterator_tag>$/;"	s	line:292	namespace:std
__copy_aux	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    __copy_aux(_II __first, _II __last, _OI __result)$/;"	f	line:305	namespace:std	signature:(_II __first, _II __last, _OI __result)
__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(_CharT* __first, _CharT* __last,$/;"	f	line:301	namespace:std	signature:(_CharT* __first, _CharT* __last, ostreambuf_iterator<_CharT> __result)
__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(const _CharT* __first, const _CharT* __last,$/;"	f	line:313	namespace:std	signature:(const _CharT* __first, const _CharT* __last, ostreambuf_iterator<_CharT> __result)
__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(istreambuf_iterator<_CharT> __first,$/;"	f	line:325	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT* __result)
__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:416	struct:std::__copy_backward	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:429	struct:std::__copy_backward	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	line:443	struct:std::__copy_backward	access:public	signature:(const _Tp* __first, const _Tp* __last, _Tp* __result)
__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:473	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:482	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:492	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:502	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward$/;"	s	line:412	namespace:std
__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward<_BoolType, random_access_iterator_tag>$/;"	s	line:425	namespace:std
__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward<true, random_access_iterator_tag>$/;"	s	line:439	namespace:std
__copy_backward_aux	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    __copy_backward_aux(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:453	namespace:std	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal$/;"	s	line:469	namespace:std
__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<false, true>$/;"	s	line:488	namespace:std
__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, false>$/;"	s	line:478	namespace:std
__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, true>$/;"	s	line:498	namespace:std
__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:339	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:348	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:357	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:366	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal$/;"	s	line:335	namespace:std
__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<false, true>$/;"	s	line:353	namespace:std
__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<true, false>$/;"	s	line:344	namespace:std
__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<true, true>$/;"	s	line:362	namespace:std
__cos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __cos$/;"	s	line:74	namespace:std
__cosh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __cosh$/;"	s	line:88	namespace:std
__cp	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __cp;$/;"	m	line:919	struct:_SortedAssociativeContainerConcept	access:public
__cr	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	line:814	struct:_AssociativeContainerConcept	access:public
__cr	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Const_iterator,_Const_iterator> __cr;$/;"	m	line:921	struct:_SortedAssociativeContainerConcept	access:public
__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }$/;"	f	line:354	class:std::__ctype_abstract_base	access:protected	signature:(size_t __refs = 0)
__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class __ctype_abstract_base : public locale::facet, public ctype_base$/;"	c	line:146	namespace:std	inherits:locale::facet,ctype_base
__ctype_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef ctype<_CharT>                          __ctype_type;$/;"	t	line:78	class:std::basic_ios	access:public
__deque_buf_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^  __deque_buf_size(size_t __size)$/;"	f	line:84	namespace:std	signature:(size_t __size)
__destroy_aux	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:118	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, __false_type)
__destroy_aux	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)$/;"	f	line:136	namespace:std	signature:(_ForwardIterator, _ForwardIterator, __true_type)
__distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __distance(_InputIterator __first, _InputIterator __last,$/;"	f	line:75	namespace:std	signature:(_InputIterator __first, _InputIterator __last, input_iterator_tag)
__distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:92	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
__divides	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __divides$/;"	s	line:211	namespace:std
__equal_to	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __equal_to$/;"	s	line:280	namespace:std
__exp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __exp$/;"	s	line:137	namespace:std
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:322	struct:_GeneratorConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:332	struct:_GeneratorConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:341	struct:_UnaryFunctionConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:351	struct:_UnaryFunctionConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:361	struct:_BinaryFunctionConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:373	struct:_BinaryFunctionConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:384	struct:_UnaryPredicateConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:394	struct:_BinaryPredicateConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Func __f;$/;"	m	line:410	struct:_Const_BinaryPredicateConcept	access:public
__f	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(_Tp)) const$/;"	f	line:285	class:std::_Expr	signature:(_Tp) const
__f	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(const _Tp&)) const$/;"	f	line:277	class:std::_Expr	signature:(const _Tp&) const
__fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill$/;"	s	line:544	namespace:std
__fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill<true>$/;"	s	line:557	namespace:std
__fill_bvector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)$/;"	f	line:357	namespace:std	signature:(_Bit_iterator __first, _Bit_iterator __last, bool __x)
__fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill_n$/;"	s	line:620	namespace:std
__fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill_n<true>$/;"	s	line:633	namespace:std
__final_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2433	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
__final_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2452	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
__find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find(_InputIterator __first, _InputIterator __last,$/;"	f	line:170	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __val, input_iterator_tag)
__find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:200	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, const _Tp& __val, random_access_iterator_tag)
__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	line:5344	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, bidirectional_iterator_tag, bidirectional_iterator_tag)
__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	line:5377	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, bidirectional_iterator_tag, bidirectional_iterator_tag, _BinaryPredicate __comp)
__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5287	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag)
__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5315	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag, _BinaryPredicate __comp)
__find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:185	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred, input_iterator_tag)
__find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:252	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate __pred, random_access_iterator_tag)
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __first;$/;"	m	line:362	struct:_BinaryFunctionConcept	access:public
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _First __first;$/;"	m	line:374	struct:_BinaryFunctionConcept	access:public
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	line:851	struct:_MultipleAssociativeContainerConcept	access:public
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	line:750	struct:_SequenceConcept	access:public
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	line:922	struct:_SortedAssociativeContainerConcept	access:public
__first	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	line:833	struct:_UniqueAssociativeContainerConcept	access:public
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun$/;"	s	line:342	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__equal_to, _Tp>$/;"	s	line:391	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__greater, _Tp>$/;"	s	line:373	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__greater_equal, _Tp>$/;"	s	line:385	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__less, _Tp>$/;"	s	line:367	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__less_equal, _Tp>$/;"	s	line:379	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_and, _Tp>$/;"	s	line:355	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_not, _Tp>$/;"	s	line:349	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_or, _Tp>$/;"	s	line:361	namespace:std
__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__not_equal_to, _Tp>$/;"	s	line:397	namespace:std
__function_requires	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^inline void __function_requires()$/;"	f	line:61	signature:()
__gcd	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)$/;"	f	line:1738	namespace:std	signature:(_EuclideanRingElement __m, _EuclideanRingElement __n)
__glibcxx_base_allocator	/home/damian/.vim/tags/cpp_src/allocator.h	142;"	d	line:142
__glibcxx_class_requires	/home/damian/.vim/tags/cpp_src/concept_check.h	53;"	d	line:53
__glibcxx_class_requires	/home/damian/.vim/tags/cpp_src/concept_check.h	74;"	d	line:74
__glibcxx_class_requires2	/home/damian/.vim/tags/cpp_src/concept_check.h	54;"	d	line:54
__glibcxx_class_requires2	/home/damian/.vim/tags/cpp_src/concept_check.h	76;"	d	line:76
__glibcxx_class_requires3	/home/damian/.vim/tags/cpp_src/concept_check.h	55;"	d	line:55
__glibcxx_class_requires3	/home/damian/.vim/tags/cpp_src/concept_check.h	78;"	d	line:78
__glibcxx_class_requires4	/home/damian/.vim/tags/cpp_src/concept_check.h	56;"	d	line:56
__glibcxx_class_requires4	/home/damian/.vim/tags/cpp_src/concept_check.h	80;"	d	line:80
__glibcxx_function_requires	/home/damian/.vim/tags/cpp_src/concept_check.h	52;"	d	line:52
__glibcxx_function_requires	/home/damian/.vim/tags/cpp_src/concept_check.h	72;"	d	line:72
__greater	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __greater$/;"	s	line:301	namespace:std
__greater_equal	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __greater_equal$/;"	s	line:315	namespace:std
__heap_select	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	line:2472	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)
__heap_select	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	line:2492	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Const_iterator __i;$/;"	m	line:586	struct:_ContainerConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	line:607	struct:_Mutable_ContainerConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __i;$/;"	m	line:811	struct:_AssociativeContainerConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __i;$/;"	m	line:712	struct:_Mutable_RandomAccessContainerConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:438	struct:_Mutable_TrivialIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:546	struct:_RandomAccessIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:428	struct:_TrivialIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:458	struct:_InputIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:470	struct:_OutputIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:486	struct:_ForwardIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:496	struct:_Mutable_ForwardIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:510	struct:_BidirectionalIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:521	struct:_Mutable_BidirectionalIteratorConcept	access:public
__i	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i;$/;"	m	line:558	struct:_Mutable_RandomAccessIteratorConcept	access:public
__inplace_stable_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_partition(_ForwardIterator __first,$/;"	f	line:2119	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len)
__inplace_stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	line:3171	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
__inplace_stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	line:3194	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
__insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2346	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
__insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2373	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
__introselect	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:3945	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Size __depth_limit)
__introselect	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:3980	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Size __depth_limit, _Compare __comp)
__introsort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	line:2735	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Size __depth_limit)
__introsort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	line:2771	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Size __depth_limit, _Compare __comp)
__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _Distance __n)$/;"	f	line:72	namespace:std	signature:(_RandomAccessIterator __first, _Distance __n)
__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:104	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:109	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _StrictWeakOrdering __comp)
__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _StrictWeakOrdering __comp,$/;"	f	line:88	namespace:std	signature:(_RandomAccessIterator __first, _StrictWeakOrdering __comp, _Distance __n)
__iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __iter_swap$/;"	s	line:107	namespace:std
__iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __iter_swap<true>$/;"	s	line:122	namespace:std
__iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    __iterator_category(const _Iter&)$/;"	f	line:164	namespace:std	signature:(const _Iter&)
__j	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:438	struct:_Mutable_TrivialIteratorConcept	access:public
__j	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Tp __i, __j;$/;"	m	line:546	struct:_RandomAccessIteratorConcept	access:public
__k	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::key_type __k;$/;"	m	line:815	struct:_AssociativeContainerConcept	access:public
__k	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_type __k;$/;"	m	line:913	struct:_SortedAssociativeContainerConcept	access:public
__kc	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::key_compare __kc;$/;"	m	line:910	struct:_SortedAssociativeContainerConcept	access:public
__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type *__first, *__last;$/;"	m	line:851	struct:_MultipleAssociativeContainerConcept	access:public
__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type *__first, *__last;$/;"	m	line:750	struct:_SequenceConcept	access:public
__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type *__first, *__last;$/;"	m	line:922	struct:_SortedAssociativeContainerConcept	access:public
__last	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type *__first, *__last;$/;"	m	line:833	struct:_UniqueAssociativeContainerConcept	access:public
__less	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __less$/;"	s	line:294	namespace:std
__less_equal	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __less_equal$/;"	s	line:308	namespace:std
__lg	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __lg(_Size __n)$/;"	f	line:2512	namespace:std	signature:(_Size __n)
__log	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __log$/;"	s	line:144	namespace:std
__log10	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __log10$/;"	s	line:151	namespace:std
__logical_and	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_and$/;"	s	line:260	namespace:std
__logical_not	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_not$/;"	s	line:274	namespace:std
__logical_or	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_or$/;"	s	line:267	namespace:std
__median	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c)$/;"	f	line:87	namespace:std	signature:(const _Tp& __a, const _Tp& __b, const _Tp& __c)
__median	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)$/;"	f	line:121	namespace:std	signature:(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)
__merge_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	line:3582	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Pointer __buffer, _Distance __buffer_size)
__merge_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	line:3641	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Pointer __buffer, _Distance __buffer_size, _Compare __comp)
__merge_backward	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_backward(_BidirectionalIterator1 __first1,$/;"	f	line:3467	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, _BidirectionalIterator3 __result)
__merge_backward	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_backward(_BidirectionalIterator1 __first1,$/;"	f	line:3506	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, _BidirectionalIterator3 __result, _Compare __comp)
__merge_sort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	line:3333	namespace:std	signature:(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _RandomAccessIterator2 __result, _Distance __step_size)
__merge_sort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	line:3356	namespace:std	signature:(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _RandomAccessIterator2 __result, _Distance __step_size, _Compare __comp)
__merge_sort_with_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	line:3411	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer)
__merge_sort_with_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	line:3435	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Compare __comp)
__merge_without_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	line:3073	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2)
__merge_without_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	line:3121	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Compare __comp)
__minus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __minus$/;"	s	line:197	namespace:std
__modulus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __modulus$/;"	s	line:218	namespace:std
__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __moneypunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:3572	struct:std::__moneypunct_cache	access:public	signature:(size_t __refs = 0)
__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __moneypunct_cache : public locale::facet$/;"	s	line:3548	namespace:std	inherits:locale::facet
__multiplies	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __multiplies$/;"	s	line:204	namespace:std
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	line:587	struct:_ContainerConcept	access:public
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Size_type __n;$/;"	m	line:690	struct:_RandomAccessContainerConcept	access:public
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _AssociativeContainer::size_type __n;$/;"	m	line:816	struct:_AssociativeContainerConcept	access:public
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::size_type __n;$/;"	m	line:749	struct:_SequenceConcept	access:public
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	line:547	struct:_RandomAccessIteratorConcept	access:public
__n	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename std::iterator_traits<_Tp>::difference_type __n;$/;"	m	line:559	struct:_Mutable_RandomAccessIteratorConcept	access:public
__negate	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __negate$/;"	s	line:176	namespace:std
__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^        __normal_iterator(const __normal_iterator<_Iter,$/;"	f	line:657	class:__normal_iterator	access:public	signature:(const __normal_iterator<_Iter, typename __enable_if< (std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>& __i)
__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      __normal_iterator() : _M_current(_Iterator()) { }$/;"	f	line:650	class:__normal_iterator	access:public	signature:()
__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      __normal_iterator(const _Iterator& __i) : _M_current(__i) { }$/;"	f	line:653	class:__normal_iterator	access:public	signature:(const _Iterator& __i)
__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class __normal_iterator$/;"	c	line:636
__normal_iterator::_M_current	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Iterator _M_current;$/;"	m	line:639	class:__normal_iterator	access:protected
__normal_iterator::__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^        __normal_iterator(const __normal_iterator<_Iter,$/;"	f	line:657	class:__normal_iterator	access:public	signature:(const __normal_iterator<_Iter, typename __enable_if< (std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>& __i)
__normal_iterator::__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      __normal_iterator() : _M_current(_Iterator()) { }$/;"	f	line:650	class:__normal_iterator	access:public	signature:()
__normal_iterator::__normal_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      __normal_iterator(const _Iterator& __i) : _M_current(__i) { }$/;"	f	line:653	class:__normal_iterator	access:public	signature:(const _Iterator& __i)
__normal_iterator::base	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      base() const$/;"	f	line:717	class:__normal_iterator	access:public	signature:() const
__normal_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^                                                             difference_type;$/;"	t	line:646	class:__normal_iterator	access:public
__normal_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^                                                             iterator_category;$/;"	t	line:643	class:__normal_iterator	access:public
__normal_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	line:665	class:__normal_iterator	access:public	signature:() const
__normal_iterator::operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+(const difference_type& __n) const$/;"	f	line:705	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
__normal_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:673	class:__normal_iterator	access:public	signature:()
__normal_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:680	class:__normal_iterator	access:public	signature:(int)
__normal_iterator::operator +=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+=(const difference_type& __n)$/;"	f	line:701	class:__normal_iterator	access:public	signature:(const difference_type& __n)
__normal_iterator::operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-(const difference_type& __n) const$/;"	f	line:713	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
__normal_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--()$/;"	f	line:685	class:__normal_iterator	access:public	signature:()
__normal_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	line:692	class:__normal_iterator	access:public	signature:(int)
__normal_iterator::operator -=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-=(const difference_type& __n)$/;"	f	line:709	class:__normal_iterator	access:public	signature:(const difference_type& __n)
__normal_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	line:669	class:__normal_iterator	access:public	signature:() const
__normal_iterator::operator []	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator[](const difference_type& __n) const$/;"	f	line:697	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
__normal_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer   pointer;$/;"	t	line:648	class:__normal_iterator	access:public
__normal_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference reference;$/;"	t	line:647	class:__normal_iterator	access:public
__normal_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::value_type  value_type;$/;"	t	line:644	class:__normal_iterator	access:public
__not_equal_to	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __not_equal_to$/;"	s	line:287	namespace:std
__num_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class __num_base$/;"	c	line:1541	namespace:std
__num_get_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^						     __num_get_type;$/;"	t	line:82	class:std::basic_ios	access:public
__num_put_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^						     __num_put_type;$/;"	t	line:80	class:std::basic_ios	access:public
__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __numpunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:1617	struct:std::__numpunct_cache	access:public	signature:(size_t __refs = 0)
__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __numpunct_cache : public locale::facet$/;"	s	line:1591	namespace:std	inherits:locale::facet
__ostream_fill	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)$/;"	f	line:59	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, streamsize __n)
__ostream_insert	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,$/;"	f	line:78	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s, streamsize __n)
__ostream_write	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_write(basic_ostream<_CharT, _Traits>& __out,$/;"	f	line:46	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s, streamsize __n)
__p	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Iterator __p;$/;"	m	line:918	struct:_SortedAssociativeContainerConcept	access:public
__p	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	line:751	struct:_SequenceConcept	access:public
__pad	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __pad$/;"	s	line:89	namespace:std
__partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:2055	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Predicate __pred, bidirectional_iterator_tag)
__partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2025	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, forward_iterator_tag)
__plus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __plus$/;"	s	line:190	namespace:std
__pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:232	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator __result, _Tp __value)
__pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:296	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator __result, _Tp __value, _Compare __comp)
__pos	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::iterator __pos;$/;"	m	line:849	struct:_MultipleAssociativeContainerConcept	access:public
__pos_flag	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<typename _UniqueAssociativeContainer::iterator, bool> __pos_flag;$/;"	m	line:831	struct:_UniqueAssociativeContainerConcept	access:public
__pow	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __pow$/;"	s	line:330	namespace:std
__push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:162	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __topIndex, _Tp __value, _Compare __comp)
__push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first,$/;"	f	line:117	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __topIndex, _Tp __value)
__q	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::iterator __p, __q;$/;"	m	line:751	struct:_SequenceConcept	access:public
__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	line:343	struct:_UnaryFunctionConcept	access:public
__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Return __r;$/;"	m	line:364	struct:_BinaryFunctionConcept	access:public
__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	line:812	struct:_AssociativeContainerConcept	access:public
__r	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    std::pair<_Iterator,_Iterator> __r;$/;"	m	line:920	struct:_SortedAssociativeContainerConcept	access:public
__rb_verify	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const$/;"	f	line:1520	class:std::_Rb_tree	signature:() const
__reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:1635	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, bidirectional_iterator_tag)
__reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:1657	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_BidirectionalIterator __first,$/;"	f	line:1796	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, bidirectional_iterator_tag)
__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_ForwardIterator __first,$/;"	f	line:1756	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, forward_iterator_tag)
__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_RandomAccessIterator __first,$/;"	f	line:1830	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, random_access_iterator_tag)
__rotate_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate_adaptive(_BidirectionalIterator1 __first,$/;"	f	line:3546	namespace:std	signature:(_BidirectionalIterator1 __first, _BidirectionalIterator1 __middle, _BidirectionalIterator1 __last, _Distance __len1, _Distance __len2, _BidirectionalIterator2 __buffer, _Distance __buffer_size)
__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:630	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, std::forward_iterator_tag)
__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:750	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, std::forward_iterator_tag)
__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	line:664	namespace:std	signature:(_RandomAccessIter __first, _RandomAccessIter __last, _Integer __count, const _Tp& __val, std::random_access_iterator_tag)
__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	line:790	namespace:std	signature:(_RandomAccessIter __first, _RandomAccessIter __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, std::random_access_iterator_tag)
__second	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __second;$/;"	m	line:363	struct:_BinaryFunctionConcept	access:public
__second	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _Second __second;$/;"	m	line:375	struct:_BinaryFunctionConcept	access:public
__shift_left	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __shift_left$/;"	s	line:246	namespace:std
__shift_right	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __shift_right$/;"	s	line:253	namespace:std
__sin	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sin$/;"	s	line:95	namespace:std
__sinh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sinh$/;"	s	line:109	namespace:std
__sqrt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sqrt$/;"	s	line:158	namespace:std
__stable_partition_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_partition_adaptive(_ForwardIterator __first,$/;"	f	line:2148	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)
__stable_sort_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	line:3805	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Distance __buffer_size)
__stable_sort_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	line:3832	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Distance __buffer_size, _Compare __comp)
__string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	line:2875	class:std::__timepunct	access:public
__string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	line:3066	class:std::time_get	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _ValueT __t;$/;"	m	line:471	struct:_OutputIteratorConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _BackInsertionSequence::value_type __t;$/;"	m	line:784	struct:_BackInsertionSequenceConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _FrontInsertionSequence::value_type __t;$/;"	m	line:764	struct:_FrontInsertionSequenceConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _MultipleAssociativeContainer::value_type __t;$/;"	m	line:850	struct:_MultipleAssociativeContainerConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _Sequence::value_type __t;$/;"	m	line:748	struct:_SequenceConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_type __t;$/;"	m	line:912	struct:_SortedAssociativeContainerConcept	access:public
__t	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _UniqueAssociativeContainer::value_type __t;$/;"	m	line:832	struct:_UniqueAssociativeContainerConcept	access:public
__tan	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __tan$/;"	s	line:116	namespace:std
__tanh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __tanh$/;"	s	line:130	namespace:std
__throw_exception_again	/home/damian/.vim/tags/cpp_src/exception_defines.h	45;"	d	line:45
__throw_exception_again	/home/damian/.vim/tags/cpp_src/exception_defines.h	48;"	d	line:48
__timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class __timepunct : public locale::facet$/;"	c	line:2870	namespace:std	inherits:locale::facet
__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __timepunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:2815	struct:std::__timepunct_cache	access:public	signature:(size_t __refs = 0)
__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __timepunct_cache : public locale::facet$/;"	s	line:2752	namespace:std	inherits:locale::facet
__unary_plus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __unary_plus$/;"	s	line:169	namespace:std
__unguarded_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2399	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
__unguarded_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2416	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
__unguarded_linear_insert	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val)$/;"	f	line:2305	namespace:std	signature:(_RandomAccessIterator __last, _Tp __val)
__unguarded_linear_insert	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val,$/;"	f	line:2325	namespace:std	signature:(_RandomAccessIterator __last, _Tp __val, _Compare __comp)
__unguarded_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	line:2248	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Tp __pivot)
__unguarded_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	line:2272	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Tp __pivot, _Compare __comp)
__uninitialized_copy_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	line:231	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator __alloc)
__uninitialized_copy_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	line:251	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp>)
__uninitialized_copy_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:72	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, __true_type)
__uninitialized_copy_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:79	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, __false_type)
__uninitialized_copy_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_copy(_InputIterator1 __first1,$/;"	f	line:321	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator __alloc)
__uninitialized_copy_fill	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_fill(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:371	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp& __x, _Allocator __alloc)
__uninitialized_fill_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:258	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, _Allocator __alloc)
__uninitialized_fill_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:276	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, allocator<_Tp2>)
__uninitialized_fill_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:143	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, __false_type)
__uninitialized_fill_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first,$/;"	f	line:136	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, __true_type)
__uninitialized_fill_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_copy(_ForwardIterator __result, _ForwardIterator __mid,$/;"	f	line:348	namespace:std	signature:(_ForwardIterator __result, _ForwardIterator __mid, const _Tp& __x, _InputIterator __first, _InputIterator __last, _Allocator __alloc)
__uninitialized_fill_n_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, $/;"	f	line:283	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, _Allocator __alloc)
__uninitialized_fill_n_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, $/;"	f	line:303	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, allocator<_Tp2>)
__uninitialized_fill_n_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,$/;"	f	line:182	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, __true_type)
__uninitialized_fill_n_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,$/;"	f	line:188	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, __false_type)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1314	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, forward_iterator_tag, output_iterator_tag)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1387	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred, forward_iterator_tag, output_iterator_tag)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1339	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, input_iterator_tag, output_iterator_tag)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1364	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, input_iterator_tag, forward_iterator_tag)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1418	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred, input_iterator_tag, output_iterator_tag)
__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1449	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _BinaryPredicate __binary_pred, input_iterator_tag, forward_iterator_tag)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)$/;"	f	line:474	namespace:std	signature:(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:488	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, _Array<_Tp> __b, size_t __n)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)$/;"	f	line:462	namespace:std	signature:(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b,$/;"	f	line:495	namespace:std	signature:(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, _Array<size_t> __i)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)$/;"	f	line:468	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s1,$/;"	f	line:481	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s1, _Array<_Tp> __b, size_t __s2)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __src, size_t __n, _Array<size_t> __i,$/;"	f	line:503	namespace:std	signature:(_Array<_Tp> __src, size_t __n, _Array<size_t> __i, _Array<_Tp> __dst, _Array<size_t> __j)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, _Tp* __restrict__ __b,$/;"	f	line:295	namespace:std	signature:(const _Tp* __restrict__ __a, _Tp* __restrict__ __b, size_t __n, size_t __s)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n, size_t __s,$/;"	f	line:285	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, size_t __s, _Tp* __restrict__ __b)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:276	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:327	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b, const size_t* __restrict__ __i)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a,$/;"	f	line:316	namespace:std	signature:(const _Tp* __restrict__ __a, const size_t* __restrict__ __i, _Tp* __restrict__ __b, size_t __n)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n, size_t __s1,$/;"	f	line:306	namespace:std	signature:(const _Tp* __restrict__ __src, size_t __n, size_t __s1, _Tp* __restrict__ __dst, size_t __s2)
__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n,$/;"	f	line:338	namespace:std	signature:(const _Tp* __restrict__ __src, size_t __n, const size_t* __restrict__ __i, _Tp* __restrict__ __dst, const size_t* __restrict__ __j)
__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:178	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, size_t __s, _Tp* __restrict__ __o)
__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a,$/;"	f	line:198	namespace:std	signature:(const _Tp* __restrict__ __a, const size_t* __restrict__ __i, _Tp* __restrict__ __o, size_t __n)
__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:431	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, _Array<_Tp> __b, size_t __n)
__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, size_t __n, size_t __s,$/;"	f	line:439	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)
__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(const _Tp* __restrict__ __b,$/;"	f	line:168	namespace:std	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
__valarray_default_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_default_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:99	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
__valarray_destroy_elements	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_destroy_elements(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:213	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill (_Array<_Tp> __a, size_t __n, const _Tp& __t)$/;"	f	line:445	namespace:std	signature:(_Array<_Tp> __a, size_t __n, const _Tp& __t)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:455	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, size_t __n, const _Tp& __t)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)$/;"	f	line:450	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, const size_t* __restrict__ __i,$/;"	f	line:245	namespace:std	signature:(_Tp* __restrict__ __a, const size_t* __restrict__ __i, size_t __n, const _Tp& __t)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n, const _Tp& __t)$/;"	f	line:226	namespace:std	signature:(_Tp* __restrict__ __a, size_t __n, const _Tp& __t)
__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n,$/;"	f	line:235	namespace:std	signature:(_Tp* __restrict__ __a, size_t __n, size_t __s, const _Tp& __t)
__valarray_fill_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e,$/;"	f	line:133	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
__valarray_get_memory	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^  __valarray_get_memory(size_t __n)$/;"	f	line:57	namespace:std	signature:(size_t __n)
__valarray_get_storage	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_get_storage(size_t __n)$/;"	f	line:62	namespace:std	signature:(size_t __n)
__valarray_max	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_max(const _Ta& __a)$/;"	f	line:394	namespace:std	signature:(const _Ta& __a)
__valarray_min	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_min(const _Ta& __a)$/;"	f	line:378	namespace:std	signature:(const _Ta& __a)
__valarray_product	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_product(const _Tp* __restrict__ __f,$/;"	f	line:366	namespace:std	signature:(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)
__valarray_release_memory	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^  __valarray_release_memory(void* __p)$/;"	f	line:70	namespace:std	signature:(void* __p)
__valarray_sum	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_sum(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)$/;"	f	line:355	namespace:std	signature:(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)
__vc	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    typename _SortedAssociativeContainer::value_compare __vc;$/;"	m	line:911	struct:_SortedAssociativeContainerConcept	access:public
__wmask_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef wctype_t		__wmask_type;$/;"	t	line:1220	class:std::ctype	access:public
__write	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __write(_OutIter __s, const _CharT* __ws, int __len)$/;"	f	line:124	namespace:std	signature:(_OutIter __s, const _CharT* __ws, int __len)
__write	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)$/;"	f	line:114	namespace:std	signature:(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
__x	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	/^    _From __x;$/;"	m	line:226	struct:_ConvertibleConcept	access:public
accumulate	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)$/;"	f	line:81	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Tp __init)
accumulate	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init,$/;"	f	line:107	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Tp __init, _BinaryOperation __binary_op)
adjacent_difference	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first, _InputIterator __last,$/;"	f	line:313	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryOperation __binary_op)
adjacent_difference	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first,$/;"	f	line:274	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
adjacent_find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:362	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
adjacent_find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:393	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)
adjustfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags adjustfield = _S_adjustfield;$/;"	m	line:308	class:std::ios_base	access:public
advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    advance(_InputIterator& __i, _Distance __n)$/;"	f	line:173	namespace:std	signature:(_InputIterator& __i, _Distance __n)
all	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category all		= (ctype | numeric | collate |$/;"	m	line:111	class:std::locale	access:public
allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^        allocator(const allocator<_Tp1>&) throw() { }$/;"	f	line:106	class:std::allocator	access:public	signature:(const allocator<_Tp1>&)
allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      allocator() throw() { }$/;"	f	line:100	class:std::allocator	access:public	signature:()
allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      allocator(const allocator& __a) throw()$/;"	f	line:102	class:std::allocator	access:public	signature:(const allocator& __a)
allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^    class allocator: public __glibcxx_base_allocator<_Tp>$/;"	c	line:85	namespace:std	inherits:__glibcxx_base_allocator
allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^    class allocator<void>$/;"	c	line:64	namespace:std
allocator.h	/home/damian/.vim/tags/cpp_src/allocator.h	1;"	F	line:1
allocator_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef _Alloc					    allocator_type;$/;"	t	line:119	class:std::basic_string	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      typedef _Alloc allocator_type;$/;"	t	line:394	struct:std::_Bvector_base	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Alloc                        		 allocator_type;$/;"	t	line:472	class:std::vector	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Alloc                             allocator_type;$/;"	t	line:651	class:std::deque	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Alloc                  allocator_type;$/;"	t	line:374	class:std::_Deque_base	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Alloc                                     allocator_type;$/;"	t	line:429	class:std::list	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Alloc allocator_type;$/;"	t	line:324	class:std::_List_base	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	line:100	class:std::map	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	line:99	class:std::multimap	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Alloc   allocator_type;$/;"	t	line:105	class:std::multiset	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Alloc   allocator_type;$/;"	t	line:110	class:std::set	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Alloc allocator_type;$/;"	t	line:350	class:std::_Rb_tree	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Alloc                        		 allocator_type;$/;"	t	line:183	class:std::vector	access:public
allocator_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Alloc allocator_type;$/;"	t	line:93	struct:std::_Vector_base	access:public
always_noconv	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      always_noconv() const throw()$/;"	f	line:214	class:std::__codecvt_abstract_base	access:public	signature:() const
app	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode app =		_S_app;$/;"	m	line:362	class:std::ios_base	access:public
append	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        append(_InputIterator __first, _InputIterator __last)$/;"	f	line:851	class:std::basic_string	access:public	signature:(_InputIterator __first, _InputIterator __last)
append	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      append(const _CharT* __s)$/;"	f	line:824	class:std::basic_string	access:public	signature:(const _CharT* __s)
argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg argument_type;   \/\/\/< @c argument_type is the type of the$/;"	t	line:104	struct:std::unary_function	access:public
assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:946	class:std::basic_string	access:public	signature:(_InputIterator __first, _InputIterator __last)
assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(const _CharT* __s)$/;"	f	line:917	class:std::basic_string	access:public	signature:(const _CharT* __s)
assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(const basic_string& __str, size_type __pos, size_type __n)$/;"	f	line:889	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos, size_type __n)
assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(size_type __n, _CharT __c)$/;"	f	line:933	class:std::basic_string	access:public	signature:(size_type __n, _CharT __c)
assign	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      assign(char_type& __c1, const char_type& __c2)$/;"	f	line:96	struct:char_traits	access:public	signature:(char_type& __c1, const char_type& __c2)
assign	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    assign(char_type* __s, std::size_t __n, char_type __a)$/;"	f	line:202	class:char_traits	signature:(char_type* __s, std::size_t __n, char_type __a)
assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:540	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last)
assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    assign(size_type __n, const bool& __x)$/;"	f	line:535	class:std::vector	access:public	signature:(size_type __n, const bool& __x)
assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:782	class:std::deque	access:public	signature:(_InputIterator __first, _InputIterator __last)
assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:765	class:std::deque	access:public	signature:(size_type __n, const value_type& __val)
assign	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:564	class:std::list	access:public	signature:(_InputIterator __first, _InputIterator __last)
assign	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:547	class:std::list	access:public	signature:(size_type __n, const value_type& __val)
assign	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:310	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last)
assign	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:293	class:std::vector	access:public	signature:(size_type __n, const value_type& __val)
at	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      at(size_type __n) const$/;"	f	line:728	class:std::basic_string	access:public	signature:(size_type __n) const
at	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      at(size_type __n)$/;"	f	line:747	class:std::basic_string	access:public	signature:(size_type __n)
at	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    at(size_type __n) const$/;"	f	line:627	class:std::vector	access:public	signature:(size_type __n) const
at	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    at(size_type __n)$/;"	f	line:623	class:std::vector	access:public	signature:(size_type __n)
at	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      at(size_type __n) const$/;"	f	line:975	class:std::deque	access:public	signature:(size_type __n) const
at	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      at(size_type __n)$/;"	f	line:957	class:std::deque	access:public	signature:(size_type __n)
at	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      at(const key_type& __k) const$/;"	f	line:373	class:std::map	access:public	signature:(const key_type& __k) const
at	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      at(const key_type& __k)$/;"	f	line:364	class:std::map	access:public	signature:(const key_type& __k)
at	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      at(size_type __n) const$/;"	f	line:532	class:std::vector	access:public	signature:(size_type __n) const
at	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      at(size_type __n)$/;"	f	line:514	class:std::vector	access:public	signature:(size_type __n)
ate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode ate =		_S_ate;$/;"	m	line:365	class:std::ios_base	access:public
back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    back() const$/;"	f	line:660	class:std::vector	access:public	signature:() const
back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    back()$/;"	f	line:656	class:std::vector	access:public	signature:()
back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      back() const$/;"	f	line:1014	class:std::deque	access:public	signature:() const
back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      back()$/;"	f	line:1002	class:std::deque	access:public	signature:()
back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      back() const$/;"	f	line:714	class:std::list	access:public	signature:() const
back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      back()$/;"	f	line:702	class:std::list	access:public	signature:()
back	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      back() const$/;"	f	line:187	class:std::queue	access:public	signature:() const
back	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      back()$/;"	f	line:176	class:std::queue	access:public	signature:()
back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      back() const$/;"	f	line:567	class:std::vector	access:public	signature:() const
back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      back()$/;"	f	line:559	class:std::vector	access:public	signature:()
back_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      back_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	line:397	class:std::back_insert_iterator	access:public	signature:(_Container& __x)
back_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class back_insert_iterator$/;"	c	line:385	namespace:std	inherits:iterator
back_inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    back_inserter(_Container& __x)$/;"	f	line:446	namespace:std	signature:(_Container& __x)
bad	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      bad() const$/;"	f	line:197	class:std::basic_ios	access:public	signature:() const
badbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate badbit =	_S_badbit;$/;"	m	line:332	class:std::ios_base	access:public
base	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      base() const$/;"	f	line:144	class:std::reverse_iterator	access:public	signature:() const
base	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      base() const$/;"	f	line:717	class:__normal_iterator	access:public	signature:() const
basefield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags basefield =   _S_basefield;$/;"	m	line:311	class:std::ios_base	access:public
basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ios()$/;"	f	line:444	class:std::basic_ios	access:protected	signature:()
basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)$/;"	f	line:256	class:std::basic_ios	access:public	signature:(basic_streambuf<_CharT, _Traits>* __sb)
basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^    class basic_ios : public ios_base$/;"	c	line:56	namespace:std	inherits:ios_base
basic_ios.h	/home/damian/.vim/tags/cpp_src/basic_ios.h	1;"	F	line:1
basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    basic_string()$/;"	f	line:2055	class:std::basic_string	signature:()
basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    class basic_string$/;"	c	line:111	namespace:std
basic_string.h	/home/damian/.vim/tags/cpp_src/basic_string.h	1;"	F	line:1
beg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir beg =		_S_beg;$/;"	m	line:395	class:std::ios_base	access:public
begin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      begin() const$/;"	f	line:532	class:std::basic_string	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      begin()$/;"	f	line:521	class:std::basic_string	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    begin() const$/;"	f	line:551	class:std::vector	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    begin()$/;"	f	line:547	class:std::vector	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      begin() const$/;"	f	line:807	class:std::deque	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      begin()$/;"	f	line:799	class:std::deque	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      begin() const$/;"	f	line:591	class:std::list	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      begin()$/;"	f	line:582	class:std::list	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      begin() const$/;"	f	line:253	class:std::map	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      begin()$/;"	f	line:244	class:std::map	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      begin() const$/;"	f	line:252	class:std::multimap	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      begin()$/;"	f	line:243	class:std::multimap	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      begin() const$/;"	f	line:221	class:std::multiset	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      begin() const$/;"	f	line:230	class:std::set	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      begin()$/;"	f	line:113	class:std::_Temporary_buffer	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      begin() const$/;"	f	line:610	class:std::_Rb_tree	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      begin()$/;"	f	line:603	class:std::_Rb_tree	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      begin() const$/;"	f	line:336	class:std::vector	access:public	signature:() const
begin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      begin()$/;"	f	line:327	class:std::vector	access:public	signature:()
begin	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::begin () const$/;"	f	line:534	class:std::_Array	signature:() const
bidirectional_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct bidirectional_iterator_tag : public forward_iterator_tag {};$/;"	s	line:87	namespace:std	inherits:forward_iterator_tag
binary	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode binary =	_S_bin;$/;"	m	line:371	class:std::ios_base	access:public
binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct binary_function$/;"	s	line:114	namespace:std
binary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binary_negate(const _Predicate& __x)$/;"	f	line:343	class:std::binary_negate	access:public	signature:(const _Predicate& __x)
binary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binary_negate$/;"	c	line:334	namespace:std	inherits:binary_function
binary_search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4228	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
binary_search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4260	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
bind1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    bind1st(const _Operation& __fn, const _Tp& __x)$/;"	f	line:418	namespace:std	signature:(const _Operation& __fn, const _Tp& __x)
bind2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    bind2nd(const _Operation& __fn, const _Tp& __x)$/;"	f	line:452	namespace:std	signature:(const _Operation& __fn, const _Tp& __x)
binder1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binder1st(const _Operation& __x,$/;"	f	line:400	class:std::binder1st	access:public	signature:(const _Operation& __x, const typename _Operation::first_argument_type& __y)
binder1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binder1st$/;"	c	line:392	namespace:std	inherits:unary_function
binder2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binder2nd(const _Operation& __x,$/;"	f	line:434	class:std::binder2nd	access:public	signature:(const _Operation& __x, const typename _Operation::second_argument_type& __y)
binder2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binder2nd$/;"	c	line:426	namespace:std	inherits:unary_function
boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags boolalpha =   _S_boolalpha;$/;"	m	line:256	class:std::ios_base	access:public
boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  boolalpha(ios_base& __base)$/;"	f	line:788	namespace:std	signature:(ios_base& __base)
boost_concept_check.h	/home/damian/.vim/tags/cpp_src/boost_concept_check.h	1;"	F	line:1
c	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Sequence  c;$/;"	m	line:342	class:std::priority_queue	access:protected
c	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Sequence c;$/;"	m	line:128	class:std::queue	access:protected
c	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      _Sequence c;$/;"	m	line:123	class:std::stack	access:protected
c_str	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      c_str() const$/;"	f	line:1522	class:std::basic_string	access:public	signature:() const
capacity	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      capacity() const$/;"	f	line:641	class:std::basic_string	access:public	signature:() const
capacity	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    capacity() const$/;"	f	line:591	class:std::vector	access:public	signature:() const
capacity	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      capacity() const$/;"	f	line:429	class:std::vector	access:public	signature:() const
catalog	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    typedef int catalog;$/;"	t	line:4340	struct:std::messages_base	access:public
catch	/home/damian/.vim/tags/cpp_src/exception_defines.h	44;"	d	line:44
category	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    typedef int	category;$/;"	t	line:71	class:std::locale	access:public
char_traits	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    struct char_traits$/;"	s	line:87
char_traits.h	/home/damian/.vim/tags/cpp_src/char_traits.h	1;"	F	line:1
char_traits::assign	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      assign(char_type& __c1, const char_type& __c2)$/;"	f	line:96	struct:char_traits	access:public	signature:(char_type& __c1, const char_type& __c2)
char_traits::assign	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    assign(char_type* __s, std::size_t __n, char_type __a)$/;"	f	line:202	class:char_traits	signature:(char_type* __s, std::size_t __n, char_type __a)
char_traits::char_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef _CharT                                    char_type;$/;"	t	line:89	struct:char_traits	access:public
char_traits::compare	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:149	class:char_traits	signature:(const char_type* __s1, const char_type* __s2, std::size_t __n)
char_traits::copy	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    copy(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:193	class:char_traits	signature:(char_type* __s1, const char_type* __s2, std::size_t __n)
char_traits::eof	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eof()$/;"	f	line:138	struct:char_traits	access:public	signature:()
char_traits::eq	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2)$/;"	f	line:100	struct:char_traits	access:public	signature:(const char_type& __c1, const char_type& __c2)
char_traits::eq_int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2)$/;"	f	line:134	struct:char_traits	access:public	signature:(const int_type& __c1, const int_type& __c2)
char_traits::find	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    find(const char_type* __s, std::size_t __n, const char_type& __a)$/;"	f	line:173	class:char_traits	signature:(const char_type* __s, std::size_t __n, const char_type& __a)
char_traits::int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::int_type    int_type;$/;"	t	line:90	struct:char_traits	access:public
char_traits::length	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    length(const char_type* __p)$/;"	f	line:162	class:char_traits	signature:(const char_type* __p)
char_traits::lt	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2)$/;"	f	line:104	struct:char_traits	access:public	signature:(const char_type& __c1, const char_type& __c2)
char_traits::move	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    move(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:184	class:char_traits	signature:(char_type* __s1, const char_type* __s2, std::size_t __n)
char_traits::not_eof	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      not_eof(const int_type& __c)$/;"	f	line:142	struct:char_traits	access:public	signature:(const int_type& __c)
char_traits::off_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::off_type    off_type;$/;"	t	line:92	struct:char_traits	access:public
char_traits::pos_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::pos_type    pos_type;$/;"	t	line:91	struct:char_traits	access:public
char_traits::state_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::state_type  state_type;$/;"	t	line:93	struct:char_traits	access:public
char_traits::to_char_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      to_char_type(const int_type& __c)$/;"	f	line:126	struct:char_traits	access:public	signature:(const int_type& __c)
char_traits::to_int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      to_int_type(const char_type& __c)$/;"	f	line:130	struct:char_traits	access:public	signature:(const char_type& __c)
char_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef _CharT                                 char_type;$/;"	t	line:65	class:std::basic_ios	access:public
char_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef _CharT                                    char_type;$/;"	t	line:89	struct:char_traits	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1668	class:std::numpunct	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1897	class:std::numpunct_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1938	class:std::num_get	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:2543	class:std::collate	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3063	class:std::time_get	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3374	class:std::time_get_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3404	class:std::time_put	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3498	class:std::time_put_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3621	class:std::moneypunct	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4005	class:std::moneypunct_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4051	class:std::money_get	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4199	class:std::money_put	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4370	class:std::messages	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4584	class:std::messages_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:611	class:std::ctype	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	line:1513	class:std::ctype_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	line:2269	class:std::num_put	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT               char_type;$/;"	t	line:2718	class:std::collate_byname	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT char_type;$/;"	t	line:151	class:std::__ctype_abstract_base	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef char		char_type;$/;"	t	line:681	class:std::ctype	access:public
char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef wchar_t		char_type;$/;"	t	line:1219	class:std::ctype	access:public
char_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	line:158	class:std::ostream_iterator	access:public
char_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	line:51	class:std::istream_iterator	access:public
char_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _CharT					char_type;$/;"	t	line:57	class:std::istreambuf_iterator	access:public
char_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _CharT                           char_type;$/;"	t	line:214	class:std::ostreambuf_iterator	access:public
clear	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      clear()$/;"	f	line:668	class:std::basic_string	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    clear()$/;"	f	line:766	class:std::vector	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      clear()$/;"	f	line:1217	class:std::deque	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      clear()$/;"	f	line:907	class:std::list	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      clear()$/;"	f	line:508	class:std::map	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      clear()$/;"	f	line:445	class:std::multimap	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      clear()$/;"	f	line:385	class:std::multiset	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      clear()$/;"	f	line:397	class:std::set	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      clear()$/;"	f	line:709	class:std::_Rb_tree	access:public	signature:()
clear	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      clear()$/;"	f	line:748	class:std::vector	access:public	signature:()
close	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      close(catalog __c) const$/;"	f	line:4466	class:std::messages	access:public	signature:(catalog __c) const
codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	f	line:290	class:std::codecvt	access:public	signature:(size_t __refs = 0)
codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt$/;"	c	line:273	namespace:std	inherits:__codecvt_abstract_base
codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt<char, char, mbstate_t>$/;"	c	line:335	namespace:std	inherits:__codecvt_abstract_base
codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt<wchar_t, char, mbstate_t>$/;"	c	line:393	namespace:std	inherits:__codecvt_abstract_base
codecvt.h	/home/damian/.vim/tags/cpp_src/codecvt.h	1;"	F	line:1
codecvt_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^  class codecvt_base$/;"	c	line:50	namespace:std
codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      codecvt_byname(const char* __s, size_t __refs = 0)$/;"	f	line:457	class:std::codecvt_byname	access:public	signature:(const char* __s, size_t __refs = 0)
codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>$/;"	c	line:453	namespace:std	inherits:codecvt
collate	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category collate	= 1L << 2;$/;"	m	line:107	class:std::locale	access:public
collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate(__c_locale __cloc, size_t __refs = 0)$/;"	f	line:2578	class:std::collate	access:public	signature:(__c_locale __cloc, size_t __refs = 0)
collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate(size_t __refs = 0)$/;"	f	line:2564	class:std::collate	access:public	signature:(size_t __refs = 0)
collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class collate : public locale::facet$/;"	c	line:2537	namespace:std	inherits:locale::facet
collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate_byname(const char* __s, size_t __refs = 0)$/;"	f	line:2723	class:std::collate_byname	access:public	signature:(const char* __s, size_t __refs = 0)
collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class collate_byname : public collate<_CharT>$/;"	c	line:2713	namespace:std	inherits:collate
comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	_Compare comp;$/;"	m	line:116	class:std::map::value_compare	access:protected
comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	_Compare comp;$/;"	m	line:115	class:std::multimap::value_compare	access:protected
comp	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Compare   comp;$/;"	m	line:343	class:std::priority_queue	access:protected
compare	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      compare(const basic_string& __str) const$/;"	f	line:1929	class:std::basic_string	access:public	signature:(const basic_string& __str) const
compare	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    compare(const char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:149	class:char_traits	signature:(const char_type* __s1, const char_type* __s2, std::size_t __n)
compare	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      compare(const _CharT* __lo1, const _CharT* __hi1,$/;"	f	line:2595	class:std::collate	access:public	signature:(const _CharT* __lo1, const _CharT* __hi1, const _CharT* __lo2, const _CharT* __hi2) const
concept_check.h	/home/damian/.vim/tags/cpp_src/concept_check.h	1;"	F	line:1
const_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^                                                            const_iterator;$/;"	t	line:128	class:std::basic_string	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator                          const_iterator;$/;"	t	line:469	class:std::vector	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator  const_iterator;$/;"	t	line:275	struct:std::_Bit_const_iterator	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	line:105	struct:std::_Deque_iterator	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	line:381	class:std::_Deque_base	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::const_iterator             const_iterator;$/;"	t	line:646	class:std::deque	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>                  const_iterator;$/;"	t	line:424	class:std::list	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	line:145	class:std::map	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	line:143	class:std::multimap	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	line:125	class:std::multiset	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	line:131	class:std::set	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<value_type> const_iterator;$/;"	t	line:542	class:std::_Rb_tree	access:public
const_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      const_iterator;$/;"	t	line:178	class:std::vector	access:public
const_mem_fun1_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	line:695	namespace:std	inherits:binary_function
const_mem_fun1_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>$/;"	c	line:663	namespace:std	inherits:binary_function
const_mem_fun_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	line:631	namespace:std	inherits:unary_function
const_mem_fun_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>$/;"	c	line:599	namespace:std	inherits:unary_function
const_pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const _Tp* const_pointer;$/;"	t	line:91	class:std::allocator	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const void* const_pointer;$/;"	t	line:70	class:std::allocator	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;$/;"	t	line:125	class:std::basic_string	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef const bool*                                  const_pointer;$/;"	t	line:467	class:std::vector	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:642	class:std::deque	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:420	class:std::list	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	line:141	class:std::map	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	line:139	class:std::multimap	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	line:118	class:std::multiset	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	line:124	class:std::set	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const value_type* const_pointer;$/;"	t	line:343	class:std::_Rb_tree	access:public
const_pointer	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:173	class:std::vector	access:public
const_reference	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const _Tp& const_reference;$/;"	t	line:93	class:std::allocator	access:public
const_reference	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_reference   const_reference;$/;"	t	line:123	class:std::basic_string	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                                         const_reference;$/;"	t	line:465	class:std::vector	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                 const_reference;$/;"	t	line:273	struct:std::_Bit_const_iterator	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:644	class:std::deque	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:422	class:std::list	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	line:143	class:std::map	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	line:141	class:std::multimap	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	line:120	class:std::multiset	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:115	class:std::queue	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:336	class:std::priority_queue	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	line:126	class:std::set	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:117	class:std::stack	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const value_type& const_reference;$/;"	t	line:345	class:std::_Rb_tree	access:public
const_reference	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:175	class:std::vector	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	line:129	class:std::basic_string	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<const_iterator>        const_reverse_iterator;$/;"	t	line:470	class:std::vector	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	line:647	class:std::deque	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	line:425	class:std::list	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	line:149	class:std::map	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	line:147	class:std::multimap	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	line:127	class:std::multiset	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	line:133	class:std::set	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;$/;"	t	line:545	class:std::_Rb_tree	access:public
const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;$/;"	t	line:179	class:std::vector	access:public
container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:389	class:std::back_insert_iterator	access:protected
container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:464	class:std::front_insert_iterator	access:protected
container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:542	class:std::insert_iterator	access:protected
container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:393	class:std::back_insert_iterator	access:public
container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:468	class:std::front_insert_iterator	access:public
container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:547	class:std::insert_iterator	access:public
container_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:117	class:std::queue	access:public
container_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:338	class:std::priority_queue	access:public
container_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:119	class:std::stack	access:public
copy	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    copy(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:193	class:char_traits	signature:(char_type* __s1, const char_type* __s2, std::size_t __n)
copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(_II __first, _II __last, _OI __result)$/;"	f	line:265	struct:std::__copy	access:public	signature:(_II __first, _II __last, _OI __result)
copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(_II __first, _II __last, _OI __result)$/;"	f	line:278	struct:std::__copy	access:public	signature:(_II __first, _II __last, _OI __result)
copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	line:296	struct:std::__copy	access:public	signature:(const _Tp* __first, const _Tp* __last, _Tp* __result)
copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:389	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
copy	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    copy(istreambuf_iterator<_CharT> __first,$/;"	f	line:284	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result)
copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:526	namespace:std	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
copyfmt_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      copyfmt_event$/;"	e	line:422	enum:std::ios_base::event
count	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)$/;"	f	line:424	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __value)
count	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      count(const key_type& __x) const$/;"	f	line:568	class:std::map	access:public	signature:(const key_type& __x) const
count	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      count(const key_type& __x) const$/;"	f	line:502	class:std::multimap	access:public	signature:(const key_type& __x) const
count	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      count(const key_type& __x) const$/;"	f	line:396	class:std::multiset	access:public	signature:(const key_type& __x) const
count	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      count(const key_type& __x) const$/;"	f	line:411	class:std::set	access:public	signature:(const key_type& __x) const
count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    count(const _Key& __k) const$/;"	f	line:1413	class:std::_Rb_tree	signature:(const _Key& __k) const
count_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	line:448	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred)
cpp_type_traits.h	/home/damian/.vim/tags/cpp_src/cpp_type_traits.h	1;"	F	line:1
cshift	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::cshift(int __n) const$/;"	f	line:269	class:std::_Expr	signature:(int __n) const
ctype	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category ctype		= 1L << 0;$/;"	m	line:105	class:std::locale	access:public
ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }$/;"	f	line:618	class:std::ctype	access:public	signature:(size_t __refs = 0)
ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype : public __ctype_abstract_base<_CharT>$/;"	c	line:607	namespace:std	inherits:__ctype_abstract_base
ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype<char> : public locale::facet, public ctype_base$/;"	c	line:676	namespace:std	inherits:locale::facet,ctype_base
ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>$/;"	c	line:1214	namespace:std	inherits:__ctype_abstract_base
ctype_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype_byname : public ctype<_CharT>$/;"	c	line:1510	namespace:std	inherits:ctype
cur	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir cur =		_S_cur;$/;"	m	line:398	class:std::ios_base	access:public
curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      curr_symbol() const$/;"	f	line:3740	class:std::moneypunct	access:public	signature:() const
current	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Iterator current;$/;"	m	line:102	class:std::reverse_iterator	access:protected
data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      data() const$/;"	f	line:1532	class:std::basic_string	access:public	signature:() const
data	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    data() { }$/;"	f	line:669	class:std::vector	access:public	signature:()
data	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      data() const$/;"	f	line:582	class:std::vector	access:public	signature:() const
data	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      data()$/;"	f	line:578	class:std::vector	access:public	signature:()
date_order	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      date_order()  const$/;"	f	line:3096	class:std::time_get	access:public	signature:() const
dateorder	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	g	line:2748	class:std::time_base	access:public
dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags dec =         _S_dec;$/;"	m	line:259	class:std::ios_base	access:public
dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  dec(ios_base& __base)$/;"	f	line:926	namespace:std	signature:(ios_base& __base)
decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	line:1727	class:std::numpunct	access:public	signature:() const
decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	line:3685	class:std::moneypunct	access:public	signature:() const
deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        deque(_InputIterator __first, _InputIterator __last,$/;"	f	line:727	class:std::deque	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(const allocator_type& __a = allocator_type())$/;"	f	line:683	class:std::deque	access:public	signature:(const allocator_type& __a = allocator_type())
deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(const deque& __x)$/;"	f	line:706	class:std::deque	access:public	signature:(const deque& __x)
deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(size_type __n, const value_type& __value = value_type(),$/;"	f	line:694	class:std::deque	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    class deque : protected _Deque_base<_Tp, _Alloc>$/;"	c	line:629	namespace:std	inherits:_Deque_base
difference_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef ptrdiff_t   difference_type;$/;"	t	line:68	class:std::allocator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef ptrdiff_t  difference_type;$/;"	t	line:89	class:std::allocator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::difference_type   difference_type;$/;"	t	line:121	class:std::basic_string	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef ptrdiff_t                                    difference_type;$/;"	t	line:463	class:std::vector	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:650	class:std::deque	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef ptrdiff_t                       difference_type;$/;"	t	line:115	struct:std::_Deque_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^							       difference_type;$/;"	t	line:107	class:std::reverse_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^                                                             difference_type;$/;"	t	line:646	class:__normal_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Distance  difference_type;$/;"	t	line:113	struct:std::iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	line:141	struct:std::iterator_traits	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	line:151	struct:std::iterator_traits	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::difference_type   difference_type;$/;"	t	line:131	struct:std::iterator_traits	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                                  difference_type;$/;"	t	line:428	class:std::list	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:117	struct:std::_List_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:195	struct:std::_List_const_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	line:147	class:std::map	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	line:145	class:std::multimap	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	line:129	class:std::multiset	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	line:135	class:std::set	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	line:159	struct:std::_Rb_tree_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	line:231	struct:std::_Rb_tree_const_iterator	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t difference_type;$/;"	t	line:349	class:std::_Rb_tree	access:public
difference_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef ptrdiff_t					 difference_type;$/;"	t	line:182	class:std::vector	access:public
distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    distance(_InputIterator __first, _InputIterator __last)$/;"	f	line:115	namespace:std	signature:(_InputIterator __first, _InputIterator __last)
divides	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct divides : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:161	namespace:std	inherits:binary_function
dmy	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
do_curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_curr_symbol()   const$/;"	f	line:3885	class:std::moneypunct	access:protected	signature:() const
do_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	line:1814	class:std::numpunct	access:protected	signature:() const
do_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	line:3847	class:std::moneypunct	access:protected	signature:() const
do_falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_falsename() const$/;"	f	line:1865	class:std::numpunct	access:protected	signature:() const
do_frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_frac_digits() const$/;"	f	line:3925	class:std::moneypunct	access:protected	signature:() const
do_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	line:1839	class:std::numpunct	access:protected	signature:() const
do_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	line:3872	class:std::moneypunct	access:protected	signature:() const
do_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_narrow(char_type __c, char) const$/;"	f	line:1124	class:std::ctype	access:protected	signature:(char_type __c, char) const
do_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:1150	class:std::ctype	access:protected	signature:(const char_type* __lo, const char_type* __hi, char, char* __dest) const
do_neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_neg_format() const$/;"	f	line:3953	class:std::moneypunct	access:protected	signature:() const
do_negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_negative_sign() const$/;"	f	line:3911	class:std::moneypunct	access:protected	signature:() const
do_pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_pos_format() const$/;"	f	line:3939	class:std::moneypunct	access:protected	signature:() const
do_positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_positive_sign() const$/;"	f	line:3898	class:std::moneypunct	access:protected	signature:() const
do_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	line:1826	class:std::numpunct	access:protected	signature:() const
do_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	line:3859	class:std::moneypunct	access:protected	signature:() const
do_truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_truename() const$/;"	f	line:1852	class:std::numpunct	access:protected	signature:() const
do_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_widen(char __c) const$/;"	f	line:1075	class:std::ctype	access:protected	signature:(char __c) const
do_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_widen(const char* __lo, const char* __hi, char_type* __dest) const$/;"	f	line:1098	class:std::ctype	access:protected	signature:(const char* __lo, const char* __hi, char_type* __dest) const
empty	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      empty() const$/;"	f	line:675	class:std::basic_string	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    empty() const$/;"	f	line:596	class:std::vector	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      empty() const$/;"	f	line:901	class:std::deque	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      empty() const$/;"	f	line:654	class:std::list	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      empty() const$/;"	f	line:315	class:std::map	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      empty() const$/;"	f	line:312	class:std::multimap	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      empty() const$/;"	f	line:253	class:std::multiset	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      empty() const$/;"	f	line:141	class:std::queue	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      empty() const$/;"	f	line:385	class:std::priority_queue	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      empty() const$/;"	f	line:261	class:std::set	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      empty() const$/;"	f	line:138	class:std::stack	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      empty() const$/;"	f	line:644	class:std::_Rb_tree	access:public	signature:() const
empty	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      empty() const$/;"	f	line:438	class:std::vector	access:public	signature:() const
encoding	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      encoding() const throw()$/;"	f	line:210	class:std::__codecvt_abstract_base	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      end() const$/;"	f	line:551	class:std::basic_string	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      end()$/;"	f	line:540	class:std::basic_string	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir end =		_S_end;$/;"	m	line:401	class:std::ios_base	access:public
end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    end() const$/;"	f	line:559	class:std::vector	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    end()$/;"	f	line:555	class:std::vector	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      end() const$/;"	f	line:825	class:std::deque	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      end()$/;"	f	line:816	class:std::deque	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      end() const$/;"	f	line:609	class:std::list	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      end()$/;"	f	line:600	class:std::list	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      end() const$/;"	f	line:271	class:std::map	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      end()$/;"	f	line:262	class:std::map	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      end() const$/;"	f	line:270	class:std::multimap	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      end()$/;"	f	line:261	class:std::multimap	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      end() const$/;"	f	line:230	class:std::multiset	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      end() const$/;"	f	line:238	class:std::set	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      end()$/;"	f	line:118	class:std::_Temporary_buffer	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      end() const$/;"	f	line:621	class:std::_Rb_tree	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      end()$/;"	f	line:617	class:std::_Rb_tree	access:public	signature:()
end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      end() const$/;"	f	line:354	class:std::vector	access:public	signature:() const
end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      end()$/;"	f	line:345	class:std::vector	access:public	signature:()
eof	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      eof() const$/;"	f	line:176	class:std::basic_ios	access:public	signature:() const
eof	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eof()$/;"	f	line:138	struct:char_traits	access:public	signature:()
eofbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate eofbit =	_S_eofbit;$/;"	m	line:335	class:std::ios_base	access:public
eq	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eq(const char_type& __c1, const char_type& __c2)$/;"	f	line:100	struct:char_traits	access:public	signature:(const char_type& __c1, const char_type& __c2)
eq_int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      eq_int_type(const int_type& __c1, const int_type& __c2)$/;"	f	line:134	struct:char_traits	access:public	signature:(const int_type& __c1, const int_type& __c2)
equal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    equal(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:771	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2)
equal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    equal(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:804	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred)
equal	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      equal(const istreambuf_iterator& __b) const$/;"	f	line:159	class:std::istreambuf_iterator	access:public	signature:(const istreambuf_iterator& __b) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4109	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
equal_range	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
equal_range	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      equal_range(const key_type& __x) const$/;"	f	line:656	class:std::map	access:public	signature:(const key_type& __x) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      equal_range(const key_type& __x)$/;"	f	line:637	class:std::map	access:public	signature:(const key_type& __x)
equal_range	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x) const$/;"	f	line:586	class:std::multimap	access:public	signature:(const key_type& __x) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x)$/;"	f	line:569	class:std::multimap	access:public	signature:(const key_type& __x)
equal_range	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x) const$/;"	f	line:480	class:std::multiset	access:public	signature:(const key_type& __x) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x)$/;"	f	line:476	class:std::multiset	access:public	signature:(const key_type& __x)
equal_range	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      equal_range(const key_type& __x) const$/;"	f	line:495	class:std::set	access:public	signature:(const key_type& __x) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      equal_range(const key_type& __x)$/;"	f	line:491	class:std::set	access:public	signature:(const key_type& __x)
equal_range	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    equal_range(const _Key& __k) const$/;"	f	line:1509	class:std::_Rb_tree	signature:(const _Key& __k) const
equal_range	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    equal_range(const _Key& __k)$/;"	f	line:1499	class:std::_Rb_tree	signature:(const _Key& __k)
equal_to	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	line:196	namespace:std	inherits:binary_function
erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:1156	class:std::basic_string	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(iterator __position)$/;"	f	line:1136	class:std::basic_string	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(size_type __pos = 0, size_type __n = npos)$/;"	f	line:1120	class:std::basic_string	access:public	signature:(size_type __pos = 0, size_type __n = npos)
erase	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    erase(iterator __first, iterator __last)$/;"	f	line:742	class:std::vector	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    erase(iterator __position)$/;"	f	line:733	class:std::vector	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:873	class:std::list	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(const key_type& __x)$/;"	f	line:468	class:std::map	access:public	signature:(const key_type& __x)
erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:483	class:std::map	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(iterator __position)$/;"	f	line:453	class:std::map	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(const key_type& __x)$/;"	f	line:405	class:std::multimap	access:public	signature:(const key_type& __x)
erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:420	class:std::multimap	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(iterator __position)$/;"	f	line:390	class:std::multimap	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(const key_type& __x)$/;"	f	line:360	class:std::multiset	access:public	signature:(const key_type& __x)
erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:375	class:std::multiset	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(iterator __position)$/;"	f	line:345	class:std::multiset	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(const key_type& __x)$/;"	f	line:372	class:std::set	access:public	signature:(const key_type& __x)
erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:387	class:std::set	access:public	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(iterator __position)$/;"	f	line:357	class:std::set	access:public	signature:(iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const _Key& __x)$/;"	f	line:1270	class:std::_Rb_tree	signature:(const _Key& __x)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const _Key* __first, const _Key* __last)$/;"	f	line:1360	class:std::_Rb_tree	signature:(const _Key* __first, const _Key* __last)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const_iterator __first, const_iterator __last)$/;"	f	line:1347	class:std::_Rb_tree	signature:(const_iterator __first, const_iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const_iterator __position)$/;"	f	line:1256	class:std::_Rb_tree	signature:(const_iterator __position)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(iterator __first, iterator __last)$/;"	f	line:1334	class:std::_Rb_tree	signature:(iterator __first, iterator __last)
erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(iterator __position)$/;"	f	line:1242	class:std::_Rb_tree	signature:(iterator __position)
erase_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      erase_event,$/;"	e	line:420	enum:std::ios_base::event
error	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      error,$/;"	e	line:57	enum:std::codecvt_base::result
event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    enum event$/;"	g	line:418	class:std::ios_base	access:public
event_callback	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef void (*event_callback) (event, ios_base&, int);$/;"	t	line:435	class:std::ios_base	access:public
exception_defines.h	/home/damian/.vim/tags/cpp_src/exception_defines.h	1;"	F	line:1
exceptions	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      exceptions() const$/;"	f	line:208	class:std::basic_ios	access:public	signature:() const
exceptions	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      exceptions(iostate __except)$/;"	f	line:243	class:std::basic_ios	access:public	signature:(iostate __except)
extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	line:280	class:std::codecvt	access:public
extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	line:79	class:std::__codecvt_abstract_base	access:public
extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			extern_type;$/;"	t	line:341	class:std::codecvt	access:public
extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			extern_type;$/;"	t	line:399	class:std::codecvt	access:public
facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)$/;"	f	line:374	class:std::locale::facet	access:protected	signature:(size_t __refs = 0)
facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::facet$/;"	c	line:342	class:std::locale
fail	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fail() const$/;"	f	line:187	class:std::basic_ios	access:public	signature:() const
failbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate failbit =	_S_failbit;$/;"	m	line:340	class:std::ios_base	access:public
failed	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      failed() const throw()$/;"	f	line:266	class:std::ostreambuf_iterator	access:public	signature:() const
failure	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    class failure : public exception$/;"	c	line:207	class:std::ios_base	inherits:exception	access:public
falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      falsename() const$/;"	f	line:1797	class:std::numpunct	access:public	signature:() const
field	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	m	line:3526	struct:std::money_base::pattern	access:public
fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fill() const$/;"	f	line:356	class:std::basic_ios	access:public	signature:() const
fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fill(char_type __ch)$/;"	f	line:376	class:std::basic_ios	access:public	signature:(char_type __ch)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:548	struct:std::__fill	access:public	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:561	struct:std::__fill	access:public	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)$/;"	f	line:583	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(char* __first, char* __last, const char& __c)$/;"	f	line:612	namespace:std	signature:(char* __first, char* __last, const char& __c)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(signed char* __first, signed char* __last, const signed char& __c)$/;"	f	line:604	namespace:std	signature:(signed char* __first, signed char* __last, const signed char& __c)
fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(unsigned char* __first, unsigned char* __last, const unsigned char& __c)$/;"	f	line:596	namespace:std	signature:(unsigned char* __first, unsigned char* __last, const unsigned char& __c)
fill	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)$/;"	f	line:364	namespace:std	signature:(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:624	struct:std::__fill_n	access:public	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:637	struct:std::__fill_n	access:public	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:659	namespace:std	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(char* __first, _Size __n, const char& __c)$/;"	f	line:686	namespace:std	signature:(char* __first, _Size __n, const char& __c)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(signed char* __first, _Size __n, const signed char& __c)$/;"	f	line:678	namespace:std	signature:(signed char* __first, _Size __n, const signed char& __c)
fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(unsigned char* __first, _Size __n, const unsigned char& __c)$/;"	f	line:670	namespace:std	signature:(unsigned char* __first, _Size __n, const unsigned char& __c)
find	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1581	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
find	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1567	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
find	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    find(const char_type* __s, std::size_t __n, const char_type& __a)$/;"	f	line:173	class:char_traits	signature:(const char_type* __s, std::size_t __n, const char_type& __a)
find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find(_InputIterator __first, _InputIterator __last,$/;"	f	line:318	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __val)
find	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      find(const key_type& __x) const$/;"	f	line:556	class:std::map	access:public	signature:(const key_type& __x) const
find	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      find(const key_type& __x)$/;"	f	line:541	class:std::map	access:public	signature:(const key_type& __x)
find	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      find(const key_type& __x) const$/;"	f	line:493	class:std::multimap	access:public	signature:(const key_type& __x) const
find	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      find(const key_type& __x)$/;"	f	line:478	class:std::multimap	access:public	signature:(const key_type& __x)
find	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      find(const key_type& __x) const$/;"	f	line:418	class:std::multiset	access:public	signature:(const key_type& __x) const
find	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      find(const key_type& __x)$/;"	f	line:414	class:std::multiset	access:public	signature:(const key_type& __x)
find	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      find(const key_type& __x) const$/;"	f	line:433	class:std::set	access:public	signature:(const key_type& __x) const
find	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      find(const key_type& __x)$/;"	f	line:429	class:std::set	access:public	signature:(const key_type& __x)
find	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    find(const _Key& __k) const$/;"	f	line:1391	class:std::_Rb_tree	signature:(const _Key& __k) const
find	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    find(const _Key& __k)$/;"	f	line:1370	class:std::_Rb_tree	signature:(const _Key& __k)
find	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    find(istreambuf_iterator<_CharT> __first,$/;"	f	line:360	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT& __val)
find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5437	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)
find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5483	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __comp)
find_first_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_not_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1820	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
find_first_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_not_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1791	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(_CharT __c, size_type __pos = 0) const$/;"	f	line:1716	class:std::basic_string	access:public	signature:(_CharT __c, size_type __pos = 0) const
find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1697	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1669	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
find_first_of	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:5221	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2)
find_first_of	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:5258	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, _BinaryPredicate __comp)
find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:340	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred)
find_last_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_not_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1879	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
find_last_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_not_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1850	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(_CharT __c, size_type __pos = npos) const$/;"	f	line:1777	class:std::basic_string	access:public	signature:(_CharT __c, size_type __pos = npos) const
find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1758	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1730	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
first	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      _T1 first;                 \/\/\/< @c first is a copy of the first object$/;"	m	line:73	struct:std::pair	access:public
first_argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg1 first_argument_type;   \/\/\/< the type of the first argument$/;"	t	line:116	struct:std::binary_function	access:public
first_type	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      typedef _T1 first_type;    \/\/\/<  @c first_type is the first bound type$/;"	t	line:70	struct:std::pair	access:public
fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags fixed =       _S_fixed;$/;"	m	line:262	class:std::ios_base	access:public
fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  fixed(ios_base& __base)$/;"	f	line:951	namespace:std	signature:(ios_base& __base)
flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    flags() const { return _M_flags; }$/;"	f	line:548	class:std::ios_base	access:public	signature:() const
flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    flags(fmtflags __fmtfl)$/;"	f	line:558	class:std::ios_base	access:public	signature:(fmtflags __fmtfl)
flip	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    flip()$/;"	f	line:106	struct:std::_Bit_reference	access:public	signature:()
flip	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    flip()$/;"	f	line:758	class:std::vector	access:public	signature:()
floatfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags floatfield =  _S_floatfield;$/;"	m	line:314	class:std::ios_base	access:public
fmtflags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Fmtflags fmtflags;$/;"	t	line:253	class:std::ios_base	access:public
for_each	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    for_each(_InputIterator __first, _InputIterator __last, _Function __f)$/;"	f	line:153	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Function __f)
forward_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct forward_iterator_tag : public input_iterator_tag {};$/;"	s	line:84	namespace:std	inherits:input_iterator_tag
fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^      fpos()$/;"	f	line:106	class:std::fpos	access:public	signature:()
fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^      fpos(streamoff __off)$/;"	f	line:116	class:std::fpos	access:public	signature:(streamoff __off)
fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^    class fpos$/;"	c	line:95	namespace:std
frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      frac_digits() const$/;"	f	line:3790	class:std::moneypunct	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    front() const$/;"	f	line:652	class:std::vector	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    front()$/;"	f	line:648	class:std::vector	access:public	signature:()
front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      front() const$/;"	f	line:994	class:std::deque	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      front()$/;"	f	line:986	class:std::deque	access:public	signature:()
front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      front() const$/;"	f	line:694	class:std::list	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      front()$/;"	f	line:686	class:std::list	access:public	signature:()
front	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      front() const$/;"	f	line:165	class:std::queue	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      front()$/;"	f	line:154	class:std::queue	access:public	signature:()
front	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      front() const$/;"	f	line:551	class:std::vector	access:public	signature:() const
front	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      front()$/;"	f	line:543	class:std::vector	access:public	signature:()
front_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      explicit front_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	line:471	class:std::front_insert_iterator	access:public	signature:(_Container& __x)
front_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class front_insert_iterator$/;"	c	line:460	namespace:std	inherits:iterator
front_inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    front_inserter(_Container& __x)$/;"	f	line:520	namespace:std	signature:(_Container& __x)
functexcept.h	/home/damian/.vim/tags/cpp_src/functexcept.h	1;"	F	line:1
generate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    generate(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1125	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Generator __gen)
generate_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)$/;"	f	line:1151	namespace:std	signature:(_OutputIterator __first, _Size __n, _Generator __gen)
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(catalog __c, int __set, int __msgid, const string_type& __s) const$/;"	f	line:4455	class:std::messages	access:public	signature:(catalog __c, int __set, int __msgid, const string_type& __s) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:1979	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, bool& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2015	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2020	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned short& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2025	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned int& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2030	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned long& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2036	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long long& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2041	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned long long& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2074	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, float& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2079	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, double& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2084	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long double& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2116	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, void*& __v) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	line:4097	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, long double& __units) const
get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	line:4127	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, string_type& __digits) const
get_allocator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      get_allocator() const$/;"	f	line:1539	class:std::basic_string	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      get_allocator() const$/;"	f	line:405	struct:std::_Bvector_base	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    allocator_type get_allocator() const$/;"	f	line:474	class:std::vector	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	line:377	class:std::_Deque_base	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	line:790	class:std::deque	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	line:339	class:std::_List_base	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	line:573	class:std::list	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      get_allocator() const$/;"	f	line:234	class:std::map	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      get_allocator() const$/;"	f	line:233	class:std::multimap	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      get_allocator() const$/;"	f	line:212	class:std::multiset	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      get_allocator() const$/;"	f	line:222	class:std::set	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      get_allocator() const$/;"	f	line:361	class:std::_Rb_tree	access:public	signature:() const
get_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      get_allocator() const$/;"	f	line:104	struct:std::_Vector_base	access:public	signature:() const
get_date	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3145	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
get_monthname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3202	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
get_time	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3120	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
get_weekday	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3173	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
get_year	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3228	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
getline	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    getline(basic_istream<_CharT, _Traits>& __is,$/;"	f	line:2439	namespace:std	signature:(basic_istream<_CharT, _Traits>& __is, basic_string<_CharT, _Traits, _Alloc>& __str)
getloc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    getloc() const { return _M_ios_locale; }$/;"	f	line:690	class:std::ios_base	access:public	signature:() const
good	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      good() const$/;"	f	line:166	class:std::basic_ios	access:public	signature:() const
goodbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate goodbit =	_S_goodbit;$/;"	m	line:343	class:std::ios_base	access:public
greater	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct greater : public binary_function<_Tp, _Tp, bool>$/;"	s	line:214	namespace:std	inherits:binary_function
greater_equal	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct greater_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	line:232	namespace:std	inherits:binary_function
grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      grouping() const$/;"	f	line:1771	class:std::numpunct	access:public	signature:() const
grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      grouping() const$/;"	f	line:3727	class:std::moneypunct	access:public	signature:() const
gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  class gslice$/;"	c	line:63	namespace:std
gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::gslice(const gslice& __g) : _M_index(__g._M_index)$/;"	f	line:147	class:std::gslice	signature:(const gslice& __g)
gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::gslice(size_t __o, const valarray<size_t>& __l,$/;"	f	line:142	class:std::gslice	signature:(size_t __o, const valarray<size_t>& __l, const valarray<size_t>& __s)
gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  inline gslice::gslice () : _M_index(0) {}$/;"	f	line:139	class:std::gslice	signature:()
gslice.h	/home/damian/.vim/tags/cpp_src/gslice.h	1;"	F	line:1
gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    class gslice_array$/;"	c	line:59	namespace:std
gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(_Array<_Tp> __a,$/;"	f	line:136	class:std::gslice_array	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(const gslice_array<_Tp>& __a)$/;"	f	line:142	class:std::gslice_array	signature:(const gslice_array<_Tp>& __a)
gslice_array.h	/home/damian/.vim/tags/cpp_src/gslice_array.h	1;"	F	line:1
hash	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      hash(const _CharT* __lo, const _CharT* __hi) const$/;"	f	line:2628	class:std::collate	access:public	signature:(const _CharT* __lo, const _CharT* __hi) const
hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags hex =         _S_hex;$/;"	m	line:265	class:std::ios_base	access:public
hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  hex(ios_base& __base)$/;"	f	line:934	namespace:std	signature:(ios_base& __base)
id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id			id;$/;"	m	line:287	class:std::codecvt	access:public
id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id			id;$/;"	m	line:406	class:std::codecvt	access:public
id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id id;$/;"	m	line:348	class:std::codecvt	access:public
id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    locale::id codecvt<_InternT, _ExternT, _StateT>::id;$/;"	m	line:331	class:std::codecvt
id	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    id() { }$/;"	f	line:464	class:std::locale::id	access:public	signature:()
id	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::id$/;"	c	line:433	class:std::locale
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:1678	class:std::numpunct	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:1943	class:std::num_get	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:2554	class:std::collate	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:2885	class:std::__timepunct	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3069	class:std::time_get	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3409	class:std::time_put	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3634	class:std::moneypunct	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4057	class:std::money_get	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4205	class:std::money_put	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4382	class:std::messages	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:615	class:std::ctype	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	line:1237	class:std::ctype	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	line:2274	class:std::num_put	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id        id;$/;"	m	line:698	class:std::ctype	access:public
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id __timepunct<_CharT>::id;$/;"	m	line:3015	class:std::__timepunct
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id collate<_CharT>::id;$/;"	m	line:2690	class:std::collate
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id ctype<_CharT>::id;$/;"	m	line:664	class:std::ctype
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id messages<_CharT>::id;$/;"	m	line:4566	class:std::messages
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id money_get<_CharT, _InIter>::id;$/;"	m	line:4179	class:std::money_get
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id money_put<_CharT, _OutIter>::id;$/;"	m	line:4331	class:std::money_put
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id moneypunct<_CharT, _Intl>::id;$/;"	m	line:3963	class:std::moneypunct
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id num_get<_CharT, _InIter>::id;$/;"	m	line:2248	class:std::num_get
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id num_put<_CharT, _OutIter>::id;$/;"	m	line:2520	class:std::num_put
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id numpunct<_CharT>::id;$/;"	m	line:1874	class:std::numpunct
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id time_get<_CharT, _InIter>::id;$/;"	m	line:3366	class:std::time_get
id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id time_put<_CharT, _OutIter>::id;$/;"	m	line:3490	class:std::time_put
imbue_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      imbue_event,$/;"	e	line:421	enum:std::ios_base::event
in	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      in(state_type& __state, const extern_type* __from,$/;"	f	line:200	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const
in	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode in =		_S_in;$/;"	m	line:374	class:std::ios_base	access:public
includes	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4299	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)
includes	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4348	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    class indirect_array$/;"	c	line:61	namespace:std
indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(_Array<_Tp> __a, size_t __s,$/;"	f	line:147	class:std::indirect_array	signature:(_Array<_Tp> __a, size_t __s, _Array<size_t> __i)
indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(const indirect_array<_Tp>& __a)$/;"	f	line:142	class:std::indirect_array	signature:(const indirect_array<_Tp>& __a)
indirect_array.h	/home/damian/.vim/tags/cpp_src/indirect_array.h	1;"	F	line:1
inner_product	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    inner_product(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:135	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _Tp __init)
inner_product	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    inner_product(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:167	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2)
inplace_merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	line:3713	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last)
inplace_merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	line:3767	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)
input_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct input_iterator_tag {};$/;"	s	line:80	namespace:std
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        insert(iterator __p, _InputIterator __beg, _InputIterator __end)$/;"	f	line:978	class:std::basic_string	access:public	signature:(iterator __p, _InputIterator __beg, _InputIterator __end)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(iterator __p, _CharT __c)$/;"	f	line:1096	class:std::basic_string	access:public	signature:(iterator __p, _CharT __c)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(iterator __p, size_type __n, _CharT __c)$/;"	f	line:962	class:std::basic_string	access:public	signature:(iterator __p, size_type __n, _CharT __c)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos, const _CharT* __s)$/;"	f	line:1056	class:std::basic_string	access:public	signature:(size_type __pos, const _CharT* __s)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos, size_type __n, _CharT __c)$/;"	f	line:1079	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n, _CharT __c)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str)$/;"	f	line:993	class:std::basic_string	access:public	signature:(size_type __pos1, const basic_string& __str)
insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str,$/;"	f	line:1015	class:std::basic_string	access:public	signature:(size_type __pos1, const basic_string& __str, size_type __pos2, size_type __n)
insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      insert(iterator __position,$/;"	f	line:717	class:std::vector	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    insert(iterator __position, const bool& __x = bool())$/;"	f	line:704	class:std::vector	access:public	signature:(iterator __position, const bool& __x = bool())
insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    insert(iterator __position, size_type __n, const bool& __x)$/;"	f	line:725	class:std::vector	access:public	signature:(iterator __position, size_type __n, const bool& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:1144	class:std::deque	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:1129	class:std::deque	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:829	class:std::list	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:808	class:std::list	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:439	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      insert(const value_type& __x)$/;"	f	line:399	class:std::map	access:public	signature:(const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:426	class:std::map	access:public	signature:(iterator __position, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:376	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      insert(const value_type& __x)$/;"	f	line:339	class:std::multimap	access:public	signature:(const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:363	class:std::multimap	access:public	signature:(iterator __position, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:331	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      insert(const value_type& __x)$/;"	f	line:294	class:std::multiset	access:public	signature:(const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:318	class:std::multiset	access:public	signature:(iterator __position, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:344	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      insert(const value_type& __x)$/;"	f	line:304	class:std::set	access:public	signature:(const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:331	class:std::set	access:public	signature:(iterator __position, const value_type& __x)
insert	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:671	class:std::vector	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
insert	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:652	class:std::vector	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      insert_iterator(_Container& __x, typename _Container::iterator __i)$/;"	f	line:553	class:std::insert_iterator	access:public	signature:(_Container& __x, typename _Container::iterator __i)
insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class insert_iterator$/;"	c	line:538	namespace:std	inherits:iterator
inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    inserter(_Container& __x, _Iterator __i)$/;"	f	line:616	namespace:std	signature:(_Container& __x, _Iterator __i)
int_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::int_type             int_type;$/;"	t	line:66	class:std::basic_ios	access:public
int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::int_type    int_type;$/;"	t	line:90	struct:char_traits	access:public
int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef unsigned long   int_type;$/;"	t	line:64	struct:_Char_types	access:public
int_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef typename _Traits::int_type		int_type;$/;"	t	line:59	class:std::istreambuf_iterator	access:public
intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	line:279	class:std::codecvt	access:public
intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	line:78	class:std::__codecvt_abstract_base	access:public
intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			intern_type;$/;"	t	line:340	class:std::codecvt	access:public
intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef wchar_t			intern_type;$/;"	t	line:398	class:std::codecvt	access:public
internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags internal =    _S_internal;$/;"	m	line:270	class:std::ios_base	access:public
internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  internal(ios_base& __base)$/;"	f	line:901	namespace:std	signature:(ios_base& __base)
intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const bool			intl = _Intl;$/;"	m	line:3632	class:std::moneypunct	access:public
intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const bool intl = _Intl;$/;"	m	line:4008	class:std::moneypunct_byname	access:public
intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const bool moneypunct<_CharT, _Intl>::intl;$/;"	m	line:3966	class:std::moneypunct
intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const bool moneypunct_byname<_CharT, _Intl>::intl;$/;"	m	line:4029	class:std::moneypunct_byname
io_state	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int io_state;$/;"	t	line:404	class:std::ios_base	access:public
ios_base	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  class ios_base$/;"	c	line:201	namespace:std
ios_base.h	/home/damian/.vim/tags/cpp_src/ios_base.h	1;"	F	line:1
iostate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Iostate iostate;$/;"	t	line:328	class:std::ios_base	access:public
is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      is(const char_type *__lo, const char_type *__hi, mask *__vec) const$/;"	f	line:181	class:std::__ctype_abstract_base	access:public	signature:(const char_type *__lo, const char_type *__hi, mask *__vec) const
is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      is(mask __m, char_type __c) const$/;"	f	line:164	class:std::__ctype_abstract_base	access:public	signature:(mask __m, char_type __c) const
isalnum	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isalnum(_CharT __c, const locale& __loc)$/;"	f	line:4665	namespace:std	signature:(_CharT __c, const locale& __loc)
isalpha	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isalpha(_CharT __c, const locale& __loc)$/;"	f	line:4641	namespace:std	signature:(_CharT __c, const locale& __loc)
iscntrl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    iscntrl(_CharT __c, const locale& __loc)$/;"	f	line:4623	namespace:std	signature:(_CharT __c, const locale& __loc)
isdigit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isdigit(_CharT __c, const locale& __loc)$/;"	f	line:4647	namespace:std	signature:(_CharT __c, const locale& __loc)
isgraph	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isgraph(_CharT __c, const locale& __loc)$/;"	f	line:4671	namespace:std	signature:(_CharT __c, const locale& __loc)
islower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    islower(_CharT __c, const locale& __loc)$/;"	f	line:4635	namespace:std	signature:(_CharT __c, const locale& __loc)
isprint	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isprint(_CharT __c, const locale& __loc)$/;"	f	line:4617	namespace:std	signature:(_CharT __c, const locale& __loc)
ispunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    ispunct(_CharT __c, const locale& __loc)$/;"	f	line:4653	namespace:std	signature:(_CharT __c, const locale& __loc)
isspace	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isspace(_CharT __c, const locale& __loc)$/;"	f	line:4611	namespace:std	signature:(_CharT __c, const locale& __loc)
istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator()$/;"	f	line:62	class:std::istream_iterator	access:public	signature:()
istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator(const istream_iterator& __obj)$/;"	f	line:70	class:std::istream_iterator	access:public	signature:(const istream_iterator& __obj)
istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator(istream_type& __s)$/;"	f	line:66	class:std::istream_iterator	access:public	signature:(istream_type& __s)
istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    class istream_iterator$/;"	c	line:47	namespace:std	inherits:iterator
istream_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef basic_istream<_CharT, _Traits> istream_type;$/;"	t	line:53	class:std::istream_iterator	access:public
istream_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_istream<_CharT, _Traits>		istream_type;$/;"	t	line:61	class:std::istreambuf_iterator	access:public
istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator() throw()$/;"	f	line:95	class:std::istreambuf_iterator	access:public	signature:()
istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(istream_type& __s) throw()$/;"	f	line:99	class:std::istreambuf_iterator	access:public	signature:(istream_type& __s)
istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(streambuf_type* __s) throw()$/;"	f	line:103	class:std::istreambuf_iterator	access:public	signature:(streambuf_type* __s)
istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    class istreambuf_iterator$/;"	c	line:49	namespace:std	inherits:iterator
isupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isupper(_CharT __c, const locale& __loc)$/;"	f	line:4629	namespace:std	signature:(_CharT __c, const locale& __loc)
isxdigit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isxdigit(_CharT __c, const locale& __loc)$/;"	f	line:4659	namespace:std	signature:(_CharT __c, const locale& __loc)
iter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typename _Container::iterator iter;$/;"	m	line:543	class:std::insert_iterator	access:protected
iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:111	struct:std::__iter_swap	access:public	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:126	struct:std::__iter_swap	access:public	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:143	namespace:std	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:1939	class:std::num_get	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:3064	class:std::time_get	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:3375	class:std::time_get_byname	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:4052	class:std::money_get	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:3405	class:std::time_put	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:3499	class:std::time_put_byname	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:4200	class:std::money_put	access:public
iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter		iter_type;$/;"	t	line:2270	class:std::num_put	access:public
iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;$/;"	t	line:126	class:std::basic_string	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_iterator                                iterator;$/;"	t	line:468	class:std::vector	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_iterator   iterator;$/;"	t	line:192	struct:std::_Bit_iterator	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	line:104	struct:std::_Deque_iterator	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	line:380	class:std::_Deque_base	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::iterator                   iterator;$/;"	t	line:645	class:std::deque	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator$/;"	s	line:106	namespace:std
iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                        iterator;$/;"	t	line:423	class:std::list	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                iterator;$/;"	t	line:193	struct:std::_List_const_iterator	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	line:144	class:std::map	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	line:142	class:std::multimap	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	line:124	class:std::multiset	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	line:130	class:std::set	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef pointer     iterator;$/;"	t	line:85	class:std::_Temporary_buffer	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp> iterator;$/;"	t	line:228	struct:std::_Rb_tree_const_iterator	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<value_type>       iterator;$/;"	t	line:541	class:std::_Rb_tree	access:public
iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, vector_type> iterator;$/;"	t	line:176	class:std::vector	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::random_access_iterator_tag iterator_category;$/;"	t	line:110	struct:std::_Deque_iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^                                                             iterator_category;$/;"	t	line:643	class:__normal_iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Category  iterator_category;$/;"	t	line:109	struct:std::iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	line:139	struct:std::iterator_traits	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	line:149	struct:std::iterator_traits	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::iterator_category iterator_category;$/;"	t	line:129	struct:std::iterator_traits	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	line:118	struct:std::_List_iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	line:196	struct:std::_List_const_iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	line:158	struct:std::_Rb_tree_iterator	access:public
iterator_category	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	line:230	struct:std::_Rb_tree_const_iterator	access:public
iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits$/;"	s	line:127	namespace:std
iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<_Tp*>$/;"	s	line:137	namespace:std
iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<const _Tp*>$/;"	s	line:147	namespace:std
iterator_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Iterator					       iterator_type;$/;"	t	line:105	class:std::reverse_iterator	access:public
iword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iword(int __ix)$/;"	f	line:734	class:std::ios_base	access:public	signature:(int __ix)
key_comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      key_comp() const$/;"	f	line:517	class:std::map	access:public	signature:() const
key_comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      key_comp() const$/;"	f	line:454	class:std::multimap	access:public	signature:() const
key_comp	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      key_comp() const$/;"	f	line:204	class:std::multiset	access:public	signature:() const
key_comp	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      key_comp() const$/;"	f	line:214	class:std::set	access:public	signature:() const
key_comp	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      key_comp() const$/;"	f	line:599	class:std::_Rb_tree	access:public	signature:() const
key_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Compare                                      key_compare;$/;"	t	line:99	class:std::map	access:public
key_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Compare                                      key_compare;$/;"	t	line:98	class:std::multimap	access:public
key_compare	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Compare key_compare;$/;"	t	line:103	class:std::multiset	access:public
key_compare	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Compare key_compare;$/;"	t	line:108	class:std::set	access:public
key_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Key                                          key_type;$/;"	t	line:96	class:std::map	access:public
key_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Key                                          key_type;$/;"	t	line:95	class:std::multimap	access:public
key_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Key     key_type;$/;"	t	line:101	class:std::multiset	access:public
key_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Key     key_type;$/;"	t	line:106	class:std::set	access:public
key_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Key key_type;$/;"	t	line:340	class:std::_Rb_tree	access:public
left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags left =        _S_left;$/;"	m	line:274	class:std::ios_base	access:public
left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  left(ios_base& __base)$/;"	f	line:909	namespace:std	signature:(ios_base& __base)
length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      length() const$/;"	f	line:601	class:std::basic_string	access:public	signature:() const
length	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    length(const char_type* __p)$/;"	f	line:162	class:char_traits	signature:(const char_type* __p)
length	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      length(state_type& __state, const extern_type* __from,$/;"	f	line:218	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __end, size_t __max) const
less	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct less : public binary_function<_Tp, _Tp, bool>$/;"	s	line:223	namespace:std	inherits:binary_function
less_equal	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct less_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	line:241	namespace:std	inherits:binary_function
lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:835	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)
lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:876	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  lexicographical_compare(const char* __first1, const char* __last1,$/;"	f	line:914	namespace:std	signature:(const char* __first1, const char* __last1, const char* __first2, const char* __last2)
lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  lexicographical_compare(const unsigned char* __first1,$/;"	f	line:898	namespace:std	signature:(const unsigned char* __first1, const unsigned char* __last1, const unsigned char* __first2, const unsigned char* __last2)
list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        list(_InputIterator __first, _InputIterator __last,$/;"	f	line:509	class:std::list	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(const allocator_type& __a = allocator_type())$/;"	f	line:472	class:std::list	access:public	signature:(const allocator_type& __a = allocator_type())
list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(const list& __x)$/;"	f	line:495	class:std::list	access:public	signature:(const list& __x)
list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(size_type __n, const value_type& __value = value_type(),$/;"	f	line:483	class:std::list	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    class list : protected _List_base<_Tp, _Alloc>$/;"	c	line:407	namespace:std	inherits:_List_base
locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    locale::locale(const locale& __other, _Facet* __f)$/;"	f	line:565	class:std::locale	signature:(const locale& __other, _Facet* __f)
locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale$/;"	c	line:66	namespace:std
locale_classes.h	/home/damian/.vim/tags/cpp_src/locale_classes.h	1;"	F	line:1
locale_facets.h	/home/damian/.vim/tags/cpp_src/locale_facets.h	1;"	F	line:1
localefwd.h	/home/damian/.vim/tags/cpp_src/localefwd.h	1;"	F	line:1
logical_and	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_and : public binary_function<_Tp, _Tp, bool>$/;"	s	line:257	namespace:std	inherits:binary_function
logical_not	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_not : public unary_function<_Tp, bool>$/;"	s	line:275	namespace:std	inherits:unary_function
logical_or	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_or : public binary_function<_Tp, _Tp, bool>$/;"	s	line:266	namespace:std	inherits:binary_function
lower_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2884	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2934	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:598	class:std::map	access:public	signature:(const key_type& __x) const
lower_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      lower_bound(const key_type& __x)$/;"	f	line:583	class:std::map	access:public	signature:(const key_type& __x)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:532	class:std::multimap	access:public	signature:(const key_type& __x) const
lower_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x)$/;"	f	line:517	class:std::multimap	access:public	signature:(const key_type& __x)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:439	class:std::multiset	access:public	signature:(const key_type& __x) const
lower_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x)$/;"	f	line:435	class:std::multiset	access:public	signature:(const key_type& __x)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:454	class:std::set	access:public	signature:(const key_type& __x) const
lower_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      lower_bound(const key_type& __x)$/;"	f	line:450	class:std::set	access:public	signature:(const key_type& __x)
lower_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k) const$/;"	f	line:1442	class:std::_Rb_tree	signature:(const _Key& __k) const
lower_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k)$/;"	f	line:1424	class:std::_Rb_tree	signature:(const _Key& __k)
lt	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      lt(const char_type& __c1, const char_type& __c2)$/;"	f	line:104	struct:char_traits	access:public	signature:(const char_type& __c1, const char_type& __c2)
make_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:344	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
make_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:384	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
make_pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    make_pair(_T1 __x, _T2 __y)$/;"	f	line:144	namespace:std	signature:(_T1 __x, _T2 __y)
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last)$/;"	f	line:188	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last)
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last,$/;"	f	line:204	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map()$/;"	f	line:157	class:std::map	access:public	signature:()
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map(const _Compare& __comp, const allocator_type& __a = allocator_type())$/;"	f	line:165	class:std::map	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map(const map& __x)$/;"	f	line:175	class:std::map	access:public	signature:(const map& __x)
map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    class map$/;"	c	line:93	namespace:std
mapped_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Tp                                           mapped_type;$/;"	t	line:97	class:std::map	access:public
mapped_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Tp                                           mapped_type;$/;"	t	line:96	class:std::multimap	access:public
mask	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef typename __ctype_abstract_base<_CharT>::mask mask;$/;"	t	line:612	class:std::ctype	access:public
mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    class mask_array$/;"	c	line:61	namespace:std
mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    inline mask_array<_Tp>::mask_array(const mask_array<_Tp>& a)$/;"	f	line:138	class:std::mask_array	signature:(const mask_array<_Tp>& a)
mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::mask_array(_Array<_Tp> __a, size_t __s, _Array<bool> __m)$/;"	f	line:143	class:std::mask_array	signature:(_Array<_Tp> __a, size_t __s, _Array<bool> __m)
mask_array.h	/home/damian/.vim/tags/cpp_src/mask_array.h	1;"	F	line:1
max	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b)$/;"	f	line:204	namespace:std	signature:(const _Tp& __a, const _Tp& __b)
max	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	line:246	namespace:std	signature:(const _Tp& __a, const _Tp& __b, _Compare __comp)
max	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::max() const$/;"	f	line:315	class:std::_Expr	signature:() const
max_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:4881	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
max_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4908	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)
max_length	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      max_length() const throw()$/;"	f	line:223	class:std::__codecvt_abstract_base	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      max_size() const$/;"	f	line:606	class:std::basic_string	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    max_size() const$/;"	f	line:583	class:std::vector	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      max_size() const$/;"	f	line:872	class:std::deque	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      max_size() const$/;"	f	line:664	class:std::list	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      max_size() const$/;"	f	line:325	class:std::map	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      max_size() const$/;"	f	line:322	class:std::multimap	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      max_size() const$/;"	f	line:263	class:std::multiset	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      max_size() const$/;"	f	line:271	class:std::set	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      max_size() const$/;"	f	line:652	class:std::_Rb_tree	access:public	signature:() const
max_size	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      max_size() const$/;"	f	line:401	class:std::vector	access:public	signature:() const
mdy	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
mem_fun1_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	line:679	namespace:std	inherits:binary_function
mem_fun1_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>$/;"	c	line:647	namespace:std	inherits:binary_function
mem_fun_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	line:615	namespace:std	inherits:unary_function
mem_fun_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun_t : public unary_function<_Tp*, _Ret>$/;"	c	line:583	namespace:std	inherits:unary_function
merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:3230	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:3291	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
messages	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category messages	= 1L << 5;$/;"	m	line:110	class:std::locale	access:public
messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class messages : public locale::facet, public messages_base$/;"	c	line:4364	namespace:std	inherits:locale::facet,messages_base
messages_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  struct messages_base$/;"	s	line:4338	namespace:std
messages_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class messages_byname : public messages<_CharT>$/;"	c	line:4581	namespace:std	inherits:messages
min	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b)$/;"	f	line:182	namespace:std	signature:(const _Tp& __a, const _Tp& __b)
min	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	line:226	namespace:std	signature:(const _Tp& __a, const _Tp& __b, _Compare __comp)
min	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::min() const$/;"	f	line:310	class:std::_Expr	signature:() const
min_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:4933	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
min_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4960	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)
minus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct minus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:143	namespace:std	inherits:binary_function
mismatch	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:706	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2)
mismatch	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:742	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred)
modulus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct modulus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:170	namespace:std	inherits:binary_function
monetary	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category monetary	= 1L << 4;$/;"	m	line:109	class:std::locale	access:public
money_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class money_base$/;"	c	line:3522	namespace:std
money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:4067	class:std::money_get	access:public	signature:(size_t __refs = 0)
money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class money_get : public locale::facet$/;"	c	line:4045	namespace:std	inherits:locale::facet
money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:4215	class:std::money_put	access:public	signature:(size_t __refs = 0)
money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class money_put : public locale::facet$/;"	c	line:4194	namespace:std	inherits:locale::facet
moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)$/;"	f	line:3671	class:std::moneypunct	access:public	signature:(__c_locale __cloc, const char* __s, size_t __refs = 0)
moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	line:3656	class:std::moneypunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)
moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	line:3644	class:std::moneypunct	access:public	signature:(size_t __refs = 0)
moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class moneypunct : public locale::facet, public money_base$/;"	c	line:3615	namespace:std	inherits:locale::facet,money_base
moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct_byname(const char* __s, size_t __refs = 0)$/;"	f	line:4011	class:std::moneypunct_byname	access:public	signature:(const char* __s, size_t __refs = 0)
moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class moneypunct_byname : public moneypunct<_CharT, _Intl>$/;"	c	line:4002	namespace:std	inherits:moneypunct
move	/home/damian/.vim/tags/cpp_src/char_traits.h	/^    move(char_type* __s1, const char_type* __s2, std::size_t __n)$/;"	f	line:184	class:char_traits	signature:(char_type* __s1, const char_type* __s2, std::size_t __n)
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last)$/;"	f	line:186	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last)
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last,$/;"	f	line:202	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap()$/;"	f	line:154	class:std::multimap	access:public	signature:()
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap(const _Compare& __comp,$/;"	f	line:162	class:std::multimap	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap(const multimap& __x)$/;"	f	line:173	class:std::multimap	access:public	signature:(const multimap& __x)
multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    class multimap$/;"	c	line:92	namespace:std
multiplies	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct multiplies : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:152	namespace:std	inherits:binary_function
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last)$/;"	f	line:154	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last)
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last,$/;"	f	line:170	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset()$/;"	f	line:136	class:std::multiset	access:public	signature:()
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset(const _Compare& __comp,$/;"	f	line:140	class:std::multiset	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	line:183	class:std::multiset	access:public	signature:(const multiset<_Key,_Compare,_Alloc>& __x)
multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    class multiset$/;"	c	line:90	namespace:std
narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	line:326	class:std::__ctype_abstract_base	access:public	signature:(char_type __c, char __dfault) const
narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	line:925	class:std::ctype	access:public	signature:(char_type __c, char __dfault) const
narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:348	class:std::__ctype_abstract_base	access:public	signature:(const char_type* __lo, const char_type* __hi, char __dfault, char *__to) const
narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:958	class:std::ctype	access:public	signature:(const char_type* __lo, const char_type* __hi, char __dfault, char *__to) const
neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      neg_format() const$/;"	f	line:3829	class:std::moneypunct	access:public	signature:() const
negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct negate : public unary_function<_Tp, _Tp>$/;"	s	line:179	namespace:std	inherits:unary_function
negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      negative_sign() const$/;"	f	line:3774	class:std::moneypunct	access:public	signature:() const
next_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	line:4995	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
next_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	line:5051	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)
no_order	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
noboolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noboolalpha(ios_base& __base)$/;"	f	line:796	namespace:std	signature:(ios_base& __base)
noconv	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      noconv$/;"	e	line:58	enum:std::codecvt_base::result
none	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category none		= 0;$/;"	m	line:104	class:std::locale	access:public
none	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
noshowbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowbase(ios_base& __base)$/;"	f	line:812	namespace:std	signature:(ios_base& __base)
noshowpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowpoint(ios_base& __base)$/;"	f	line:828	namespace:std	signature:(ios_base& __base)
noshowpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowpos(ios_base& __base)$/;"	f	line:844	namespace:std	signature:(ios_base& __base)
noskipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noskipws(ios_base& __base)$/;"	f	line:860	namespace:std	signature:(ios_base& __base)
not1	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    not1(const _Predicate& __pred)$/;"	f	line:329	namespace:std	signature:(const _Predicate& __pred)
not2	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    not2(const _Predicate& __pred)$/;"	f	line:355	namespace:std	signature:(const _Predicate& __pred)
not_eof	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      not_eof(const int_type& __c)$/;"	f	line:142	struct:char_traits	access:public	signature:(const int_type& __c)
not_equal_to	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct not_equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	line:205	namespace:std	inherits:binary_function
nounitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  nounitbuf(ios_base& __base)$/;"	f	line:892	namespace:std	signature:(ios_base& __base)
nouppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  nouppercase(ios_base& __base)$/;"	f	line:876	namespace:std	signature:(ios_base& __base)
npos	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      static const size_type	npos = static_cast<size_type>(-1);$/;"	m	line:272	class:std::basic_string	access:public
nth_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:4032	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last)
nth_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:4070	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)
num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      num_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:1953	class:std::num_get	access:public	signature:(size_t __refs = 0)
num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class num_get : public locale::facet$/;"	c	line:1932	namespace:std	inherits:locale::facet
num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      num_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:2284	class:std::num_put	access:public	signature:(size_t __refs = 0)
num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class num_put : public locale::facet$/;"	c	line:2263	namespace:std	inherits:locale::facet
numeric	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category numeric	= 1L << 1;$/;"	m	line:106	class:std::locale	access:public
numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(__c_locale __cloc, size_t __refs = 0)$/;"	f	line:1713	class:std::numpunct	access:public	signature:(__c_locale __cloc, size_t __refs = 0)
numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	line:1699	class:std::numpunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)
numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	line:1686	class:std::numpunct	access:public	signature:(size_t __refs = 0)
numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class numpunct : public locale::facet$/;"	c	line:1662	namespace:std	inherits:locale::facet
numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct_byname(const char* __s, size_t __refs = 0)$/;"	f	line:1901	class:std::numpunct_byname	access:public	signature:(const char* __s, size_t __refs = 0)
numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class numpunct_byname : public numpunct<_CharT>$/;"	c	line:1894	namespace:std	inherits:numpunct
oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags oct =         _S_oct;$/;"	m	line:277	class:std::ios_base	access:public
oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  oct(ios_base& __base)$/;"	f	line:942	namespace:std	signature:(ios_base& __base)
off_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::off_type             off_type;$/;"	t	line:68	class:std::basic_ios	access:public
off_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::streamoff  off_type;$/;"	t	line:66	struct:_Char_types	access:public
off_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::off_type    off_type;$/;"	t	line:92	struct:char_traits	access:public
ok	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ok,$/;"	e	line:55	enum:std::codecvt_base::result
op	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Operation op;$/;"	m	line:397	class:std::binder1st	access:protected
op	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Operation op;$/;"	m	line:431	class:std::binder2nd	access:protected
open	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      open(const basic_string<char>& __s, const locale& __loc) const$/;"	f	line:4419	class:std::messages	access:public	signature:(const basic_string<char>& __s, const locale& __loc) const
open_mode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int open_mode;$/;"	t	line:405	class:std::ios_base	access:public
openmode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Openmode openmode;$/;"	t	line:359	class:std::ios_base	access:public
operator !	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      operator!() const$/;"	f	line:111	class:std::basic_ios	access:public	signature:() const
operator !	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Dom, _Tp>::operator!() const$/;"	f	line:320	class:std::_Expr	signature:() const
operator !=	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator!=(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	line:125	namespace:std	signature:(const allocator<_T1>&, const allocator<_T2>&)
operator !=	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	line:130	namespace:std	signature:(const allocator<_Tp>&, const allocator<_Tp>&)
operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const _CharT* __lhs,$/;"	f	line:2191	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2179	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2203	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    operator!=(const locale& __other) const throw ()$/;"	f	line:240	class:std::locale	access:public	signature:(const locale& __other) const
operator !=	/home/damian/.vim/tags/cpp_src/postypes.h	/^    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	line:204	namespace:std	signature:(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator!=(const _Bit_iterator_base& __i) const$/;"	f	line:165	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:256	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:263	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1575	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:750	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:744	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:294	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:344	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	line:174	struct:std::_List_iterator	access:public	signature:(const _Self& __x) const
operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	line:256	struct:std::_List_const_iterator	access:public	signature:(const _Self& __x) const
operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator!=(const _List_iterator<_Val>& __x,$/;"	f	line:271	namespace:std	signature:(const _List_iterator<_Val>& __x, const _List_const_iterator<_Val>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator!=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1232	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator!=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:706	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator!=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:636	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator!=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:531	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:109	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator!=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:263	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator!=(const _Tp& __x, const _Tp& __y)$/;"	f	line:92	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator!=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:545	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator!=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:238	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	line:215	struct:std::_Rb_tree_iterator	access:public	signature:(const _Self& __x) const
operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	line:290	struct:std::_Rb_tree_const_iterator	access:public	signature:(const _Self& __x) const
operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:774	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree_iterator<_Val>& __x,$/;"	f	line:304	namespace:std	signature:(const _Rb_tree_iterator<_Val>& __x, const _Rb_tree_const_iterator<_Val>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:963	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	line:135	namespace:std	signature:(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x, const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y)
operator !=	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	line:201	namespace:std	signature:(const istreambuf_iterator<_CharT, _Traits>& __a, const istreambuf_iterator<_CharT, _Traits>& __b)
operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:79	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:157	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:119	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:95	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:173	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:135	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Arg __x) const$/;"	f	line:493	class:std::pointer_to_unary_function	access:public	signature:(_Arg __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Arg1 __x, _Arg2 __y) const$/;"	f	line:518	class:std::pointer_to_binary_function	access:public	signature:(_Arg1 __x, _Arg2 __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	line:546	struct:std::_Select1st	access:public	signature:(_Pair& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	line:559	struct:std::_Select2nd	access:public	signature:(_Pair& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __r) const$/;"	f	line:623	class:std::mem_fun_ref_t	access:public	signature:(_Tp& __r) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __r, _Arg __x) const$/;"	f	line:687	class:std::mem_fun1_ref_t	access:public	signature:(_Tp& __r, _Arg __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __x) const$/;"	f	line:533	struct:std::_Identity	access:public	signature:(_Tp& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp* __p) const$/;"	f	line:591	class:std::mem_fun_t	access:public	signature:(_Tp* __p) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp* __p, _Arg __x) const$/;"	f	line:655	class:std::mem_fun1_t	access:public	signature:(_Tp* __p, _Arg __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	line:550	struct:std::_Select1st	access:public	signature:(const _Pair& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	line:563	struct:std::_Select2nd	access:public	signature:(const _Pair& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __r) const$/;"	f	line:639	class:std::const_mem_fun_ref_t	access:public	signature:(const _Tp& __r) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __r, _Arg __x) const$/;"	f	line:703	class:std::const_mem_fun1_ref_t	access:public	signature:(const _Tp& __r, _Arg __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:182	struct:std::negate	access:public	signature:(const _Tp& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:278	struct:std::logical_not	access:public	signature:(const _Tp& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:537	struct:std::_Identity	access:public	signature:(const _Tp& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:137	struct:std::plus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:146	struct:std::minus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:155	struct:std::multiplies	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:164	struct:std::divides	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:173	struct:std::modulus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:199	struct:std::equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:208	struct:std::not_equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:217	struct:std::greater	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:226	struct:std::less	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:235	struct:std::greater_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:244	struct:std::less_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:260	struct:std::logical_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:269	struct:std::logical_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp* __p) const$/;"	f	line:607	class:std::const_mem_fun_t	access:public	signature:(const _Tp* __p) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp* __p, _Arg __x) const$/;"	f	line:671	class:std::const_mem_fun1_t	access:public	signature:(const _Tp* __p, _Arg __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Operation::first_argument_type& __x) const$/;"	f	line:439	class:std::binder2nd	access:public	signature:(const typename _Operation::first_argument_type& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Operation::second_argument_type& __x) const$/;"	f	line:405	class:std::binder1st	access:public	signature:(const typename _Operation::second_argument_type& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Predicate::argument_type& __x) const$/;"	f	line:322	class:std::unary_negate	access:public	signature:(const typename _Predicate::argument_type& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Predicate::first_argument_type& __x,$/;"	f	line:347	class:std::binary_negate	access:public	signature:(const typename _Predicate::first_argument_type& __x, const typename _Predicate::second_argument_type& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(typename _Operation::first_argument_type& __x) const$/;"	f	line:445	class:std::binder2nd	access:public	signature:(typename _Operation::first_argument_type& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(typename _Operation::second_argument_type& __x) const$/;"	f	line:411	class:std::binder1st	access:public	signature:(typename _Operation::second_argument_type& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	line:122	class:std::map::value_compare	access:public	signature:(const value_type& __x, const value_type& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	line:121	class:std::multimap::value_compare	access:public	signature:(const value_type& __x, const value_type& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator()() const$/;"	f	line:214	class:std::_Expr	signature:() const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:105	struct:std::__asin	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:112	struct:std::__sinh	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:119	struct:std::__tan	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:126	struct:std::__atan	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:133	struct:std::__tanh	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:140	struct:std::__exp	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:147	struct:std::__log	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:154	struct:std::__log10	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:161	struct:std::__sqrt	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:172	struct:std::__unary_plus	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:179	struct:std::__negate	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:186	struct:std::__bitwise_not	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:70	struct:std::__abs	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:77	struct:std::__cos	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:84	struct:std::__acos	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:91	struct:std::__cosh	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:98	struct:std::__sin	access:public	signature:(const _Tp& __t) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:193	struct:std::__plus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:200	struct:std::__minus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:207	struct:std::__multiplies	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:214	struct:std::__divides	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:221	struct:std::__modulus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:228	struct:std::__bitwise_xor	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:235	struct:std::__bitwise_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:242	struct:std::__bitwise_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:249	struct:std::__shift_left	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:256	struct:std::__shift_right	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:326	struct:std::__atan2	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:333	struct:std::__pow	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x) const { return !__x; }$/;"	f	line:277	struct:std::__logical_not	access:public	signature:(const _Tp& __x) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:263	struct:std::__logical_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:270	struct:std::__logical_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:283	struct:std::__equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:290	struct:std::__not_equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:297	struct:std::__less	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:304	struct:std::__greater	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:311	struct:std::__less_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:318	struct:std::__greater_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
operator *	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	line:200	struct:std::_Bit_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	line:286	struct:std::_Bit_const_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator*() const$/;"	f	line:135	struct:std::_Deque_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	line:153	class:std::reverse_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	line:665	class:__normal_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:419	class:std::back_insert_iterator	access:public	signature:()
operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:493	class:std::front_insert_iterator	access:public	signature:()
operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:589	class:std::insert_iterator	access:public	signature:()
operator *	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator*() const$/;"	f	line:132	struct:std::_List_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator*() const$/;"	f	line:214	struct:std::_List_const_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator*() { return *this; }$/;"	f	line:83	class:std::raw_storage_iterator	access:public	signature:()
operator *	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator*() const$/;"	f	line:173	struct:std::_Rb_tree_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator*() const$/;"	f	line:248	struct:std::_Rb_tree_const_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator*() const$/;"	f	line:76	class:std::istream_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator*()$/;"	f	line:202	class:std::ostream_iterator	access:public	signature:()
operator *	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator*() const$/;"	f	line:110	class:std::istreambuf_iterator	access:public	signature:() const
operator *	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator*()$/;"	f	line:251	class:std::ostreambuf_iterator	access:public	signature:()
operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)$/;"	f	line:2124	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2071	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2108	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator +	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator+(streamoff __off) const$/;"	f	line:161	class:std::fpos	access:public	signature:(streamoff __off) const
operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	line:248	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	line:334	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)$/;"	f	line:353	namespace:std	signature:(ptrdiff_t __n, const _Bit_const_iterator& __x)
operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_iterator& __x)$/;"	f	line:267	namespace:std	signature:(ptrdiff_t __n, const _Bit_iterator& __x)
operator +	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator+(difference_type __n) const$/;"	f	line:202	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
operator +	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)$/;"	f	line:350	namespace:std	signature:(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)
operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+(const difference_type& __n) const$/;"	f	line:705	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+(difference_type __n) const$/;"	f	line:224	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type$/;"	f	line:821	signature:(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container>& __i)
operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator+(typename reverse_iterator<_Iterator>::difference_type __n,$/;"	f	line:324	namespace:std	signature:(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator>& __x)
operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++()$/;"	f	line:204	struct:std::_Bit_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++()$/;"	f	line:290	struct:std::_Bit_const_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	line:211	struct:std::_Bit_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	line:297	struct:std::_Bit_const_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator++()$/;"	f	line:143	struct:std::_Deque_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator++(int)$/;"	f	line:155	struct:std::_Deque_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:174	class:std::reverse_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:424	class:std::back_insert_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:498	class:std::front_insert_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:594	class:std::insert_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:673	class:__normal_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:186	class:std::reverse_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:429	class:std::back_insert_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:503	class:std::front_insert_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:599	class:std::insert_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:680	class:__normal_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++()$/;"	f	line:140	struct:std::_List_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++()$/;"	f	line:222	struct:std::_List_const_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++(int)$/;"	f	line:147	struct:std::_List_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++(int)$/;"	f	line:229	struct:std::_List_const_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator++()$/;"	f	line:93	class:std::raw_storage_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator++(int)$/;"	f	line:100	class:std::raw_storage_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++()$/;"	f	line:181	struct:std::_Rb_tree_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++()$/;"	f	line:256	struct:std::_Rb_tree_const_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	line:188	struct:std::_Rb_tree_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	line:263	struct:std::_Rb_tree_const_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++()$/;"	f	line:206	class:std::ostream_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++()$/;"	f	line:88	class:std::istream_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	line:210	class:std::ostream_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	line:98	class:std::istream_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	line:124	class:std::istreambuf_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	line:261	class:std::ostreambuf_iterator	access:public	signature:()
operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	line:139	class:std::istreambuf_iterator	access:public	signature:(int)
operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	line:256	class:std::ostreambuf_iterator	access:public	signature:(int)
operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(_CharT __c)$/;"	f	line:780	class:std::basic_string	access:public	signature:(_CharT __c)
operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(const _CharT* __s)$/;"	f	line:771	class:std::basic_string	access:public	signature:(const _CharT* __s)
operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(const basic_string& __str)$/;"	f	line:762	class:std::basic_string	access:public	signature:(const basic_string& __str)
operator +=	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator+=(streamoff __off)$/;"	f	line:137	class:std::fpos	access:public	signature:(streamoff __off)
operator +=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	line:234	struct:std::_Bit_iterator	access:public	signature:(difference_type __i)
operator +=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	line:320	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i)
operator +=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator+=(difference_type __n)$/;"	f	line:183	struct:std::_Deque_iterator	access:public	signature:(difference_type __n)
operator +=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+=(const difference_type& __n)$/;"	f	line:701	class:__normal_iterator	access:public	signature:(const difference_type& __n)
operator +=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+=(difference_type __n)$/;"	f	line:233	class:std::reverse_iterator	access:public	signature:(difference_type __n)
operator -	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-(const fpos& __other) const$/;"	f	line:188	class:std::fpos	access:public	signature:(const fpos& __other) const
operator -	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-(streamoff __off) const$/;"	f	line:175	class:std::fpos	access:public	signature:(streamoff __off) const
operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	line:255	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	line:341	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	line:182	namespace:std	signature:(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator-(difference_type __n) const$/;"	f	line:213	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:327	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:339	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-(const difference_type& __n) const$/;"	f	line:713	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-(difference_type __n) const$/;"	f	line:245	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:815	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:809	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_Iterator>& __x,$/;"	f	line:318	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:368	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--()$/;"	f	line:219	struct:std::_Bit_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--()$/;"	f	line:305	struct:std::_Bit_const_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	line:226	struct:std::_Bit_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	line:312	struct:std::_Bit_const_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator--()$/;"	f	line:163	struct:std::_Deque_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator--(int)$/;"	f	line:175	struct:std::_Deque_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--()$/;"	f	line:199	class:std::reverse_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--()$/;"	f	line:685	class:__normal_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	line:211	class:std::reverse_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	line:692	class:__normal_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--()$/;"	f	line:155	struct:std::_List_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--()$/;"	f	line:237	struct:std::_List_const_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--(int)$/;"	f	line:162	struct:std::_List_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--(int)$/;"	f	line:244	struct:std::_List_const_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--()$/;"	f	line:196	struct:std::_Rb_tree_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--()$/;"	f	line:271	struct:std::_Rb_tree_const_iterator	access:public	signature:()
operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	line:203	struct:std::_Rb_tree_iterator	access:public	signature:(int)
operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	line:278	struct:std::_Rb_tree_const_iterator	access:public	signature:(int)
operator -=	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-=(streamoff __off)$/;"	f	line:148	class:std::fpos	access:public	signature:(streamoff __off)
operator -=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	line:241	struct:std::_Bit_iterator	access:public	signature:(difference_type __i)
operator -=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	line:327	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i)
operator -=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator-=(difference_type __n)$/;"	f	line:209	struct:std::_Deque_iterator	access:public	signature:(difference_type __n)
operator -=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-=(const difference_type& __n)$/;"	f	line:709	class:__normal_iterator	access:public	signature:(const difference_type& __n)
operator -=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-=(difference_type __n)$/;"	f	line:254	class:std::reverse_iterator	access:public	signature:(difference_type __n)
operator ->	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator->() const$/;"	f	line:139	struct:std::_Deque_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	line:165	class:std::reverse_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	line:669	class:__normal_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator->() const$/;"	f	line:136	struct:std::_List_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator->() const$/;"	f	line:218	struct:std::_List_const_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator->() const$/;"	f	line:177	struct:std::_Rb_tree_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator->() const$/;"	f	line:252	struct:std::_Rb_tree_const_iterator	access:public	signature:() const
operator ->	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator->() const { return &(operator*()); }$/;"	f	line:85	class:std::istream_iterator	access:public	signature:() const
operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const _CharT* __lhs,$/;"	f	line:2240	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2216	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2228	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator <	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<(const _Bit_iterator_base& __i) const$/;"	f	line:158	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator <	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<(const _Bit_reference& __x) const$/;"	f	line:102	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x) const
operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:269	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:277	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1567	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:763	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:757	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_Iterator>& __x,$/;"	f	line:288	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:338	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1225	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator<(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:699	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator<(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:629	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator<(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:524	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:102	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator<(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:257	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator<(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:538	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator<(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:232	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:764	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator <	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:956	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator <<	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<<(basic_ostream<_CharT, _Traits>& __os,$/;"	f	line:2399	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __os, const basic_string<_CharT, _Traits, _Alloc>& __str)
operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const _CharT* __lhs,$/;"	f	line:2314	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2290	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2302	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator <=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<=(const _Bit_iterator_base& __i) const$/;"	f	line:173	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:297	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:304	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1589	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:787	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:781	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:306	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:356	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator<=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1244	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator<=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:720	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator<=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:650	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator<=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:545	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:121	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator<=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:275	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator<=(const _Tp& __x, const _Tp& __y)$/;"	f	line:118	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator<=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:559	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator<=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:250	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:788	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator <=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:975	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(_CharT __c) $/;"	f	line:509	class:std::basic_string	access:public	signature:(_CharT __c)
operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(const _CharT* __s) $/;"	f	line:498	class:std::basic_string	access:public	signature:(const _CharT* __s)
operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(const basic_string& __str) $/;"	f	line:490	class:std::basic_string	access:public	signature:(const basic_string& __str)
operator =	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::operator= (const gslice& __g)$/;"	f	line:158	class:std::gslice	signature:(const gslice& __g)
operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      gslice_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	line:174	class:std::gslice_array	signature:(const _Expr<_Dom, _Tp>& __e) const
operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:157	class:std::gslice_array	signature:(const _Tp& __t) const
operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const gslice_array<_Tp>& __a)$/;"	f	line:147	class:std::gslice_array	signature:(const gslice_array<_Tp>& __a)
operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:165	class:std::gslice_array	signature:(const valarray<_Tp>& __v) const
operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      indirect_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	line:173	class:std::indirect_array	signature:(const _Expr<_Dom, _Tp>& __e) const
operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:162	class:std::indirect_array	signature:(const _Tp& __t) const
operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const indirect_array<_Tp>& __a)$/;"	f	line:153	class:std::indirect_array	signature:(const indirect_array<_Tp>& __a)
operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:167	class:std::indirect_array	signature:(const valarray<_Tp>& __v) const
operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      mask_array<_Tp>::operator=(const _Expr<_Ex, _Tp>& __e) const$/;"	f	line:168	class:std::mask_array	signature:(const _Expr<_Ex, _Tp>& __e) const
operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:157	class:std::mask_array	signature:(const _Tp& __t) const
operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const mask_array<_Tp>& __a)$/;"	f	line:148	class:std::mask_array	signature:(const mask_array<_Tp>& __a)
operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:162	class:std::mask_array	signature:(const valarray<_Tp>& __v) const
operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Expr<_Dom,_Tp>& __e) const$/;"	f	line:233	class:std::slice_array	signature:(const _Expr<_Dom,_Tp>& __e) const
operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:222	class:std::slice_array	signature:(const _Tp& __t) const
operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const slice_array<_Tp>& __a)$/;"	f	line:213	class:std::slice_array	signature:(const slice_array<_Tp>& __a)
operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:227	class:std::slice_array	signature:(const valarray<_Tp>& __v) const
operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(bool __x)$/;"	f	line:84	struct:std::_Bit_reference	access:public	signature:(bool __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(const _Bit_reference& __x)$/;"	f	line:94	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(const vector& __x)$/;"	f	line:516	class:std::vector	access:public	signature:(const vector& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(const typename _Container::const_reference __value)$/;"	f	line:580	class:std::insert_iterator	access:public	signature:(const typename _Container::const_reference __value)
operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	line:411	class:std::back_insert_iterator	access:public	signature:(typename _Container::const_reference __value)
operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	line:485	class:std::front_insert_iterator	access:public	signature:(typename _Container::const_reference __value)
operator =	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      operator=(const map& __x)$/;"	f	line:226	class:std::map	access:public	signature:(const map& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      operator=(const multimap& __x)$/;"	f	line:225	class:std::multimap	access:public	signature:(const multimap& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      operator=(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	line:194	class:std::multiset	access:public	signature:(const multiset<_Key,_Compare,_Alloc>& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator=(const _Tp& __element)$/;"	f	line:86	class:std::raw_storage_iterator	access:public	signature:(const _Tp& __element)
operator =	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      operator=(const set<_Key, _Compare, _Alloc>& __x)$/;"	f	line:204	class:std::set	access:public	signature:(const set<_Key, _Compare, _Alloc>& __x)
operator =	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	line:810	class:std::_Rb_tree	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
operator =	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator=(const _Tp& __value)$/;"	f	line:191	class:std::ostream_iterator	access:public	signature:(const _Tp& __value)
operator =	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator=(_CharT __c)$/;"	f	line:241	class:std::ostreambuf_iterator	access:public	signature:(_CharT __c)
operator ==	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator==(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	line:115	namespace:std	signature:(const allocator<_T1>&, const allocator<_T2>&)
operator ==	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator==(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	line:120	namespace:std	signature:(const allocator<_Tp>&, const allocator<_Tp>&)
operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const _CharT* __lhs,$/;"	f	line:2154	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2142	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2166	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/postypes.h	/^    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	line:199	namespace:std	signature:(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator==(const _Bit_iterator_base& __i) const$/;"	f	line:154	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator==(const _Bit_reference& __x) const$/;"	f	line:98	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:243	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:250	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1549	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:738	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:732	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_Iterator>& __x,$/;"	f	line:282	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:332	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	line:170	struct:std::_List_iterator	access:public	signature:(const _Self& __x) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	line:252	struct:std::_List_const_iterator	access:public	signature:(const _Self& __x) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator==(const _List_iterator<_Val>& __x,$/;"	f	line:265	namespace:std	signature:(const _List_iterator<_Val>& __x, const _List_const_iterator<_Val>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1196	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator==(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:682	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator==(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:612	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator==(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:507	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:96	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator==(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:239	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator==(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:521	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator==(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:214	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	line:211	struct:std::_Rb_tree_iterator	access:public	signature:(const _Self& __x) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	line:286	struct:std::_Rb_tree_const_iterator	access:public	signature:(const _Self& __x) const
operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:754	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator==(const _Rb_tree_iterator<_Val>& __x,$/;"	f	line:298	namespace:std	signature:(const _Rb_tree_iterator<_Val>& __x, const _Rb_tree_const_iterator<_Val>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:939	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	line:128	namespace:std	signature:(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x, const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y)
operator ==	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	line:195	namespace:std	signature:(const istreambuf_iterator<_CharT, _Traits>& __a, const istreambuf_iterator<_CharT, _Traits>& __b)
operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const _CharT* __lhs,$/;"	f	line:2277	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2253	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2265	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator >	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator>(const _Bit_iterator_base& __i) const$/;"	f	line:169	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:284	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:291	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1582	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:775	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:769	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_Iterator>& __x,$/;"	f	line:300	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:350	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator>(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1238	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator>(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:713	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator>(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:643	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator>(const multiset<_Key,_Compare,_Alloc>& __x,$/;"	f	line:538	namespace:std	signature:(const multiset<_Key,_Compare,_Alloc>& __x, const multiset<_Key,_Compare,_Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:115	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator>(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:269	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator>(const _Tp& __x, const _Tp& __y)$/;"	f	line:105	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator>(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:552	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:244	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:781	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator >	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:969	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const _CharT* __lhs,$/;"	f	line:2351	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2327	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2339	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
operator >=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator>=(const _Bit_iterator_base& __i) const$/;"	f	line:177	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:310	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:317	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1596	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,$/;"	f	line:799	signature:(const __normal_iterator<_Iterator, _Container>& __lhs, const __normal_iterator<_Iterator, _Container>& __rhs)
operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,$/;"	f	line:793	signature:(const __normal_iterator<_IteratorL, _Container>& __lhs, const __normal_iterator<_IteratorR, _Container>& __rhs)
operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:312	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:362	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator>=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1250	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator>=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:727	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator>=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:657	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator>=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:552	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:127	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator>=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:281	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator>=(const _Tp& __x, const _Tp& __y)$/;"	f	line:131	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator>=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:566	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator>=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:256	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:795	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
operator >=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:981	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
operator []	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator[] (size_type __pos) const$/;"	f	line:690	class:std::basic_string	access:public	signature:(size_type __pos) const
operator []	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator[](size_type __pos)$/;"	f	line:707	class:std::basic_string	access:public	signature:(size_type __pos)
operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	line:262	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	line:348	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](size_type __n) const$/;"	f	line:607	class:std::vector	access:public	signature:(size_type __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](size_type __n)$/;"	f	line:600	class:std::vector	access:public	signature:(size_type __n)
operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](difference_type __n) const$/;"	f	line:220	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](size_type __n) const$/;"	f	line:932	class:std::deque	access:public	signature:(size_type __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](size_type __n)$/;"	f	line:917	class:std::deque	access:public	signature:(size_type __n)
operator []	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator[](const difference_type& __n) const$/;"	f	line:697	class:__normal_iterator	access:public	signature:(const difference_type& __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator[](difference_type __n) const$/;"	f	line:266	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      operator[](const key_type& __k)$/;"	f	line:342	class:std::map	access:public	signature:(const key_type& __k)
operator []	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      operator[](size_type __n) const$/;"	f	line:489	class:std::vector	access:public	signature:(size_type __n) const
operator []	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      operator[](size_type __n)$/;"	f	line:474	class:std::vector	access:public	signature:(size_type __n)
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:127	class:std::_IBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:58	class:std::_GBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:80	class:std::_GBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const gslice& __gs) const$/;"	f	line:232	class:std::_Expr	signature:(const gslice& __gs) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<bool>& __m) const$/;"	f	line:240	class:std::_Expr	signature:(const valarray<bool>& __m) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<size_t>& __i) const$/;"	f	line:248	class:std::_Expr	signature:(const valarray<size_t>& __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](size_t __i) const$/;"	f	line:219	class:std::_Expr	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](slice __s) const$/;"	f	line:224	class:std::_Expr	signature:(slice __s) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      operator[] (size_t __i) const$/;"	f	line:677	class:std::_SBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      operator[] (size_t __i) const$/;"	f	line:700	class:std::_SBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:415	class:std::_FunBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:480	class:std::_UnBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:526	class:std::_BinBase	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:547	class:std::_BinBase2	access:public	signature:(size_t __i) const
operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:567	class:std::_BinBase1	access:public	signature:(size_t __i) const
operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:87	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:165	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:127	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:99	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:177	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:139	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
operator bool	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator bool() const$/;"	f	line:80	struct:std::_Bit_reference	access:public	signature:() const
operator streamoff	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator streamoff() const { return _M_off; }$/;"	f	line:120	class:std::fpos	access:public	signature:() const
operator void*	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      operator void*() const$/;"	f	line:107	class:std::basic_ios	access:public	signature:() const
operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:83	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:161	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:123	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:91	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:169	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:131	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Fmtflags __a)$/;"	f	line:103	namespace:std	signature:(_Ios_Fmtflags __a)
operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Iostate __a)$/;"	f	line:181	namespace:std	signature:(_Ios_Iostate __a)
operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Openmode __a)$/;"	f	line:143	namespace:std	signature:(_Ios_Openmode __a)
ostream_insert.h	/home/damian/.vim/tags/cpp_src/ostream_insert.h	1;"	F	line:1
ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(const ostream_iterator& __obj)$/;"	f	line:185	class:std::ostream_iterator	access:public	signature:(const ostream_iterator& __obj)
ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s) : _M_stream(&__s), _M_string(0) {}$/;"	f	line:169	class:std::ostream_iterator	access:public	signature:(ostream_type& __s)
ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s, const _CharT* __c)$/;"	f	line:181	class:std::ostream_iterator	access:public	signature:(ostream_type& __s, const _CharT* __c)
ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    class ostream_iterator$/;"	c	line:152	namespace:std	inherits:iterator
ostream_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef basic_ostream<_CharT, _Traits> ostream_type;$/;"	t	line:160	class:std::ostream_iterator	access:public
ostream_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_ostream<_CharT, _Traits>   ostream_type;$/;"	t	line:217	class:std::ostreambuf_iterator	access:public
ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(ostream_type& __s) throw ()$/;"	f	line:232	class:std::ostreambuf_iterator	access:public	signature:(ostream_type& __s)
ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(streambuf_type* __s) throw ()$/;"	f	line:236	class:std::ostreambuf_iterator	access:public	signature:(streambuf_type* __s)
ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    class ostreambuf_iterator$/;"	c	line:207	namespace:std	inherits:iterator
other	/home/damian/.vim/tags/cpp_src/allocator.h	/^        { typedef allocator<_Tp1> other; };$/;"	t	line:75	struct:std::allocator::rebind	access:public
other	/home/damian/.vim/tags/cpp_src/allocator.h	/^        { typedef allocator<_Tp1> other; };$/;"	t	line:98	struct:std::allocator::rebind	access:public
out	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      out(state_type& __state, const intern_type* __from,$/;"	f	line:120	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const
out	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode out =		_S_out;$/;"	m	line:377	class:std::ios_base	access:public
output_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct output_iterator_tag {};$/;"	s	line:82	namespace:std
pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^        pair(const pair<_U1, _U2>& __p)$/;"	f	line:89	struct:std::pair	access:public	signature:(const pair<_U1, _U2>& __p)
pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      pair()$/;"	f	line:80	struct:std::pair	access:public	signature:()
pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      pair(const _T1& __a, const _T2& __b)$/;"	f	line:84	struct:std::pair	access:public	signature:(const _T1& __a, const _T2& __b)
pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    struct pair$/;"	s	line:68	namespace:std
part	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	g	line:3525	class:std::money_base	access:public
partial	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      partial,$/;"	e	line:56	enum:std::codecvt_base::result
partial_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	line:2537	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)
partial_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	line:2575	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)
partial_sort_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:2614	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last)
partial_sort_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:2679	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last, _Compare __comp)
partial_sum	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    partial_sum(_InputIterator __first, _InputIterator __last,$/;"	f	line:198	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
partial_sum	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    partial_sum(_InputIterator __first, _InputIterator __last,$/;"	f	line:238	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryOperation __binary_op)
partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2097	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
pattern	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	s	line:3526	class:std::money_base	access:public
plus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct plus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:134	namespace:std	inherits:binary_function
pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp*       pointer;$/;"	t	line:90	class:std::allocator	access:public
pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef void*       pointer;$/;"	t	line:69	class:std::allocator	access:public
pointer	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::pointer	    pointer;$/;"	t	line:124	class:std::basic_string	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference*                              pointer;$/;"	t	line:466	class:std::vector	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference* pointer;$/;"	t	line:191	struct:std::_Bit_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef const bool*          pointer;$/;"	t	line:274	struct:std::_Bit_const_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Ptr                            pointer;$/;"	t	line:112	struct:std::_Deque_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:641	class:std::deque	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer     pointer;$/;"	t	line:109	class:std::reverse_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer   pointer;$/;"	t	line:648	class:__normal_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Pointer   pointer;$/;"	t	line:115	struct:std::iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp*                        pointer;$/;"	t	line:142	struct:std::iterator_traits	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp*                  pointer;$/;"	t	line:152	struct:std::iterator_traits	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::pointer           pointer;$/;"	t	line:132	struct:std::iterator_traits	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp*                               pointer;$/;"	t	line:120	struct:std::_List_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _Tp*                         pointer;$/;"	t	line:198	struct:std::_List_const_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:419	class:std::list	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	line:140	class:std::map	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	line:138	class:std::multimap	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	line:117	class:std::multiset	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	line:123	class:std::set	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef value_type* pointer;$/;"	t	line:84	class:std::_Temporary_buffer	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp* pointer;$/;"	t	line:156	struct:std::_Rb_tree_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Tp* pointer;$/;"	t	line:226	struct:std::_Rb_tree_const_iterator	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef value_type* pointer;$/;"	t	line:342	class:std::_Rb_tree	access:public
pointer	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:172	class:std::vector	access:public
pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_binary_function() {}$/;"	f	line:511	class:std::pointer_to_binary_function	access:public	signature:()
pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))$/;"	f	line:514	class:std::pointer_to_binary_function	access:public	signature:(_Result (__x)_Arg1, _Arg2))
pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class pointer_to_binary_function$/;"	c	line:505	namespace:std	inherits:binary_function
pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_unary_function() {}$/;"	f	line:486	class:std::pointer_to_unary_function	access:public	signature:()
pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_unary_function(_Result (*__x)(_Arg))$/;"	f	line:489	class:std::pointer_to_unary_function	access:public	signature:(_Result (__x)_Arg))
pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class pointer_to_unary_function : public unary_function<_Arg, _Result>$/;"	c	line:481	namespace:std	inherits:unary_function
pop	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      pop()$/;"	f	line:218	class:std::queue	access:public	signature:()
pop	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      pop()$/;"	f	line:431	class:std::priority_queue	access:public	signature:()
pop	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      pop()$/;"	f	line:193	class:std::stack	access:public	signature:()
pop_back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    pop_back()$/;"	f	line:729	class:std::vector	access:public	signature:()
pop_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      pop_back()$/;"	f	line:1095	class:std::deque	access:public	signature:()
pop_back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      pop_back()$/;"	f	line:778	class:std::list	access:public	signature:()
pop_back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      pop_back()$/;"	f	line:618	class:std::vector	access:public	signature:()
pop_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      pop_front()$/;"	f	line:1074	class:std::deque	access:public	signature:()
pop_front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      pop_front()$/;"	f	line:749	class:std::list	access:public	signature:()
pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:253	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first,$/;"	f	line:319	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      pos_format() const$/;"	f	line:3825	class:std::moneypunct	access:public	signature:() const
pos_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::pos_type             pos_type;$/;"	t	line:67	class:std::basic_ios	access:public
pos_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::streampos  pos_type;$/;"	t	line:65	struct:_Char_types	access:public
pos_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::pos_type    pos_type;$/;"	t	line:91	struct:char_traits	access:public
positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      positive_sign() const$/;"	f	line:3757	class:std::moneypunct	access:public	signature:() const
postypes.h	/home/damian/.vim/tags/cpp_src/postypes.h	1;"	F	line:1
precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    precision() const { return _M_precision; }$/;"	f	line:618	class:std::ios_base	access:public	signature:() const
precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    precision(streamsize __prec)$/;"	f	line:626	class:std::ios_base	access:public	signature:(streamsize __prec)
prev_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	line:5106	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
prev_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	line:5162	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)
priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^        priority_queue(_InputIterator __first, _InputIterator __last,$/;"	f	line:371	class:std::priority_queue	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __x = _Compare(), const _Sequence& __s = _Sequence())
priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      priority_queue(const _Compare& __x = _Compare(),$/;"	f	line:350	class:std::priority_queue	access:public	signature:(const _Compare& __x = _Compare(), const _Sequence& __s = _Sequence())
priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    class priority_queue$/;"	c	line:322	namespace:std
ptr_fun	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg))$/;"	f	line:500	namespace:std	signature:(_Result (__x)_Arg))
ptr_fun	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg1, _Arg2))$/;"	f	line:525	namespace:std	signature:(_Result (__x)_Arg1, _Arg2))
push	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	line:203	class:std::queue	access:public	signature:(const value_type& __x)
push	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	line:413	class:std::priority_queue	access:public	signature:(const value_type& __x)
push	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      push(const value_type& __x)$/;"	f	line:178	class:std::stack	access:public	signature:(const value_type& __x)
push_back	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      push_back(_CharT __c)$/;"	f	line:859	class:std::basic_string	access:public	signature:(_CharT __c)
push_back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    push_back(bool __x)$/;"	f	line:672	class:std::vector	access:public	signature:(bool __x)
push_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      push_back(const value_type& __x)$/;"	f	line:1053	class:std::deque	access:public	signature:(const value_type& __x)
push_back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      push_back(const value_type& __x)$/;"	f	line:763	class:std::list	access:public	signature:(const value_type& __x)
push_back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      push_back(const value_type& __x)$/;"	f	line:597	class:std::vector	access:public	signature:(const value_type& __x)
push_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      push_front(const value_type& __x)$/;"	f	line:1032	class:std::deque	access:public	signature:(const value_type& __x)
push_front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      push_front(const value_type& __x)$/;"	f	line:733	class:std::list	access:public	signature:(const value_type& __x)
push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:141	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:189	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	line:4235	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, long double __units) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	line:4257	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, const string_type& __digits) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const$/;"	f	line:2302	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, bool __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const$/;"	f	line:2407	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, double __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const$/;"	f	line:2344	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const$/;"	f	line:2354	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long long __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2348	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, unsigned long __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2358	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, unsigned long long __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2411	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long double __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2432	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, const void* __v) const
put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	line:3458	class:std::time_put	access:public	signature:(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, char __format, char __mod = 0) const
pword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    pword(int __ix)$/;"	f	line:755	class:std::ios_base	access:public	signature:(int __ix)
queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      queue(const _Sequence& __c = _Sequence()) : c(__c) {}$/;"	f	line:135	class:std::queue	access:public	signature:(const _Sequence& __c = _Sequence())
queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    class queue$/;"	c	line:95	namespace:std
random_access_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct random_access_iterator_tag : public bidirectional_iterator_tag {};$/;"	s	line:90	namespace:std	inherits:bidirectional_iterator_tag
random_shuffle	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:1976	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
random_shuffle	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:2003	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomNumberGenerator& __rand)
raw_storage_iterator	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      raw_storage_iterator(_ForwardIterator __x)$/;"	f	line:79	class:std::raw_storage_iterator	access:public	signature:(_ForwardIterator __x)
raw_storage_iterator	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^    class raw_storage_iterator$/;"	c	line:71	namespace:std	inherits:iterator
rbegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rbegin() const$/;"	f	line:569	class:std::basic_string	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rbegin()$/;"	f	line:560	class:std::basic_string	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rbegin() const$/;"	f	line:567	class:std::vector	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rbegin()$/;"	f	line:563	class:std::vector	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rbegin() const$/;"	f	line:843	class:std::deque	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rbegin()$/;"	f	line:834	class:std::deque	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rbegin() const$/;"	f	line:627	class:std::list	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rbegin()$/;"	f	line:618	class:std::list	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rbegin() const$/;"	f	line:289	class:std::map	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rbegin()$/;"	f	line:280	class:std::map	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rbegin() const$/;"	f	line:288	class:std::multimap	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rbegin()$/;"	f	line:279	class:std::multimap	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      rbegin() const$/;"	f	line:239	class:std::multiset	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      rbegin() const$/;"	f	line:247	class:std::set	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rbegin() const$/;"	f	line:632	class:std::_Rb_tree	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rbegin()$/;"	f	line:628	class:std::_Rb_tree	access:public	signature:()
rbegin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rbegin() const$/;"	f	line:372	class:std::vector	access:public	signature:() const
rbegin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rbegin()$/;"	f	line:363	class:std::vector	access:public	signature:()
rdbuf	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      rdbuf() const$/;"	f	line:307	class:std::basic_ios	access:public	signature:() const
rdstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      rdstate() const$/;"	f	line:123	class:std::basic_ios	access:public	signature:() const
rebind	/home/damian/.vim/tags/cpp_src/allocator.h	/^        struct rebind$/;"	s	line:74	class:std::allocator	access:public
rebind	/home/damian/.vim/tags/cpp_src/allocator.h	/^        struct rebind$/;"	s	line:97	class:std::allocator	access:public
reference	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp&       reference;$/;"	t	line:92	class:std::allocator	access:public
reference	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::reference	    reference;$/;"	t	line:122	class:std::basic_string	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference                               reference;$/;"	t	line:464	class:std::vector	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference  reference;$/;"	t	line:190	struct:std::_Bit_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                 reference;$/;"	t	line:272	struct:std::_Bit_const_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Ref                            reference;$/;"	t	line:113	struct:std::_Deque_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:643	class:std::deque	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference   reference;$/;"	t	line:108	class:std::reverse_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference reference;$/;"	t	line:647	class:__normal_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Reference reference;$/;"	t	line:117	struct:std::iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp&                        reference;$/;"	t	line:143	struct:std::iterator_traits	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp&                  reference;$/;"	t	line:153	struct:std::iterator_traits	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::reference         reference;$/;"	t	line:133	struct:std::iterator_traits	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp&                               reference;$/;"	t	line:121	struct:std::_List_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _Tp&                         reference;$/;"	t	line:199	struct:std::_List_const_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:421	class:std::list	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	line:142	class:std::map	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	line:140	class:std::multimap	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	line:119	class:std::multiset	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:114	class:std::queue	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:335	class:std::priority_queue	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	line:125	class:std::set	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:116	class:std::stack	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp& reference;$/;"	t	line:155	struct:std::_Rb_tree_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Tp& reference;$/;"	t	line:225	struct:std::_Rb_tree_const_iterator	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef value_type& reference;$/;"	t	line:344	class:std::_Rb_tree	access:public
reference	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:174	class:std::vector	access:public
rel_ops	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^  namespace rel_ops$/;"	n	line:76	namespace:std
remove	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1253	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
remove_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1178	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __value)
remove_copy_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:1215	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred)
remove_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1288	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
rend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rend() const$/;"	f	line:587	class:std::basic_string	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rend()$/;"	f	line:578	class:std::basic_string	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rend() const$/;"	f	line:575	class:std::vector	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rend()$/;"	f	line:571	class:std::vector	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rend() const$/;"	f	line:861	class:std::deque	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rend()$/;"	f	line:852	class:std::deque	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rend() const$/;"	f	line:645	class:std::list	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rend()$/;"	f	line:636	class:std::list	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rend() const$/;"	f	line:307	class:std::map	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rend()$/;"	f	line:298	class:std::map	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rend() const$/;"	f	line:306	class:std::multimap	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rend()$/;"	f	line:297	class:std::multimap	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      rend() const$/;"	f	line:248	class:std::multiset	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      rend() const$/;"	f	line:256	class:std::set	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rend() const$/;"	f	line:640	class:std::_Rb_tree	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rend()$/;"	f	line:636	class:std::_Rb_tree	access:public	signature:()
rend	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rend() const$/;"	f	line:390	class:std::vector	access:public	signature:() const
rend	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rend()$/;"	f	line:381	class:std::vector	access:public	signature:()
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        replace(iterator __i1, iterator __i2,$/;"	f	line:1372	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)$/;"	f	line:1385	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s)$/;"	f	line:1328	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __s)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)$/;"	f	line:1307	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const basic_string& __str)$/;"	f	line:1289	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const basic_string& __str)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)$/;"	f	line:1406	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)$/;"	f	line:1349	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, size_type __n, _CharT __c)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2,$/;"	f	line:1395	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __k1, const _CharT* __k2)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2,$/;"	f	line:1416	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n, const basic_string& __str)$/;"	f	line:1183	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n, const basic_string& __str)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, const _CharT* __s)$/;"	f	line:1248	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n1, const _CharT* __s)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)$/;"	f	line:1271	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos1, size_type __n1, const basic_string& __str,$/;"	f	line:1205	class:std::basic_string	access:public	signature:(size_type __pos1, size_type __n1, const basic_string& __str, size_type __pos2, size_type __n2)
replace	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:991	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __old_value, const _Tp& __new_value)
replace_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1055	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __old_value, const _Tp& __new_value)
replace_copy_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:1092	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred, const _Tp& __new_value)
replace_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1022	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, const _Tp& __new_value)
requested_size	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      requested_size() const$/;"	f	line:108	class:std::_Temporary_buffer	access:public	signature:() const
reserve	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    reserve(size_type __n)$/;"	f	line:631	class:std::vector	access:public	signature:(size_type __n)
resize	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      resize(size_type __n)$/;"	f	line:633	class:std::basic_string	access:public	signature:(size_type __n)
resize	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    resize(size_type __new_size, bool __x = bool())$/;"	f	line:749	class:std::vector	access:public	signature:(size_type __new_size, bool __x = bool())
resize	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	line:887	class:std::deque	access:public	signature:(size_type __new_size, value_type __x = value_type())
resize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	line:416	class:std::vector	access:public	signature:(size_type __new_size, value_type __x = value_type())
result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	line:278	class:std::codecvt	access:public
result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	line:77	class:std::__codecvt_abstract_base	access:public
result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    enum result$/;"	g	line:53	class:std::codecvt_base	access:public
result_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Result result_type;         \/\/\/< type of the return type$/;"	t	line:120	struct:std::binary_function	access:public
result_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Result result_type;  \/\/\/< @c result_type is the return type$/;"	t	line:107	struct:std::unary_function	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp result_type;$/;"	t	line:344	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:351	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:357	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:363	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:369	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:375	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:381	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:387	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:393	struct:std::__fun	access:public
result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:399	struct:std::__fun	access:public
reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)$/;"	f	line:1684	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
reverse	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      reverse()$/;"	f	line:1075	class:std::list	access:public	signature:()
reverse_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:1710	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __result)
reverse_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef std::reverse_iterator<iterator>		    reverse_iterator;$/;"	t	line:130	class:std::basic_string	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<iterator>              reverse_iterator;$/;"	t	line:471	class:std::vector	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	line:648	class:std::deque	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^        reverse_iterator(const reverse_iterator<_Iter>& __x)$/;"	f	line:137	class:std::reverse_iterator	access:public	signature:(const reverse_iterator<_Iter>& __x)
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator() : current() { }$/;"	f	line:118	class:std::reverse_iterator	access:public	signature:()
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator(const reverse_iterator& __x)$/;"	f	line:129	class:std::reverse_iterator	access:public	signature:(const reverse_iterator& __x)
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator(iterator_type __x) : current(__x) { }$/;"	f	line:124	class:std::reverse_iterator	access:public	signature:(iterator_type __x)
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class reverse_iterator$/;"	c	line:94	namespace:std	inherits:iterator
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	line:426	class:std::list	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	line:148	class:std::map	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	line:146	class:std::multimap	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	line:126	class:std::multiset	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	line:132	class:std::set	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<iterator>       reverse_iterator;$/;"	t	line:544	class:std::_Rb_tree	access:public
reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<iterator>		 reverse_iterator;$/;"	t	line:180	class:std::vector	access:public
rfind	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rfind(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1639	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
rfind	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rfind(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1611	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags right =       _S_right;$/;"	m	line:281	class:std::ios_base	access:public
right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  right(ios_base& __base)$/;"	f	line:917	namespace:std	signature:(ios_base& __base)
rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    rotate(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	line:1917	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)
rotate_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	line:1950	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result)
scan_is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	line:197	class:std::__ctype_abstract_base	access:public	signature:(mask __m, const char_type* __lo, const char_type* __hi) const
scan_not	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	line:213	class:std::__ctype_abstract_base	access:public	signature:(mask __m, const char_type* __lo, const char_type* __hi) const
scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags scientific =  _S_scientific;$/;"	m	line:284	class:std::ios_base	access:public
scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  scientific(ios_base& __base)$/;"	f	line:959	namespace:std	signature:(ios_base& __base)
search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:487	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)
search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:559	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __predicate)
search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:722	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val)
search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:851	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred)
second	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      _T2 second;                \/\/\/< @c second is a copy of the second object$/;"	m	line:74	struct:std::pair	access:public
second_argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg2 second_argument_type;  \/\/\/< the type of the second argument$/;"	t	line:119	struct:std::binary_function	access:public
second_type	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      typedef _T2 second_type;   \/\/\/<  @c second_type is the second bound type$/;"	t	line:71	struct:std::pair	access:public
seek_dir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int seek_dir;$/;"	t	line:406	class:std::ios_base	access:public
seekdir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Seekdir seekdir;$/;"	t	line:392	class:std::ios_base	access:public
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last)$/;"	f	line:164	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last)
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last,$/;"	f	line:180	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set()$/;"	f	line:140	class:std::set	access:public	signature:()
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set(const _Compare& __comp,$/;"	f	line:150	class:std::set	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set(const set<_Key,_Compare,_Alloc>& __x)$/;"	f	line:193	class:std::set	access:public	signature:(const set<_Key,_Compare,_Alloc>& __x)
set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    class set$/;"	c	line:93	namespace:std
set_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4642	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
set_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4702	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
set_intersection	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4529	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
set_intersection	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4585	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
set_symmetric_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4759	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
set_symmetric_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4824	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
set_union	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4397	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
set_union	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4463	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
setf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl)$/;"	f	line:574	class:std::ios_base	access:public	signature:(fmtflags __fmtfl)
setf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl, fmtflags __mask)$/;"	f	line:591	class:std::ios_base	access:public	signature:(fmtflags __fmtfl, fmtflags __mask)
setstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      setstate(iostate __state)$/;"	f	line:143	class:std::basic_ios	access:public	signature:(iostate __state)
shift	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::shift(int __n) const$/;"	f	line:261	class:std::_Expr	signature:(int __n) const
showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showbase =    _S_showbase;$/;"	m	line:288	class:std::ios_base	access:public
showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showbase(ios_base& __base)$/;"	f	line:804	namespace:std	signature:(ios_base& __base)
showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showpoint =   _S_showpoint;$/;"	m	line:292	class:std::ios_base	access:public
showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showpoint(ios_base& __base)$/;"	f	line:820	namespace:std	signature:(ios_base& __base)
showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showpos =     _S_showpos;$/;"	m	line:295	class:std::ios_base	access:public
showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showpos(ios_base& __base)$/;"	f	line:836	namespace:std	signature:(ios_base& __base)
sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      size() const$/;"	f	line:595	class:std::basic_string	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::size () const$/;"	f	line:132	class:std::gslice	signature:() const
size	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::size() const$/;"	f	line:100	class:std::slice	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    size() const$/;"	f	line:579	class:std::vector	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      size() const$/;"	f	line:867	class:std::deque	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      size() const$/;"	f	line:659	class:std::list	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      size() const$/;"	f	line:320	class:std::map	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      size() const$/;"	f	line:317	class:std::multimap	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      size() const$/;"	f	line:258	class:std::multiset	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      size() const$/;"	f	line:146	class:std::queue	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      size() const$/;"	f	line:390	class:std::priority_queue	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      size() const$/;"	f	line:266	class:std::set	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      size() const$/;"	f	line:143	class:std::stack	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size() const$/;"	f	line:103	class:std::_Temporary_buffer	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      size() const$/;"	f	line:648	class:std::_Rb_tree	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      size() const$/;"	f	line:396	class:std::vector	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size () const$/;"	f	line:62	class:std::_GBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size () const$/;"	f	line:84	class:std::_GBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size() const$/;"	f	line:131	class:std::_IBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::size() const$/;"	f	line:256	class:std::_Expr	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size() const$/;"	f	line:681	class:std::_SBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size() const$/;"	f	line:704	class:std::_SBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size ();}$/;"	f	line:418	class:std::_FunBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size(); }$/;"	f	line:483	class:std::_UnBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	line:529	class:std::_BinBase	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	line:550	class:std::_BinBase2	access:public	signature:() const
size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr2.size(); }$/;"	f	line:570	class:std::_BinBase1	access:public	signature:() const
size_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef size_t      size_type;$/;"	t	line:67	class:std::allocator	access:public
size_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef size_t     size_type;$/;"	t	line:88	class:std::allocator	access:public
size_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::size_type	    size_type;$/;"	t	line:120	class:std::basic_string	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef size_t                                       size_type;$/;"	t	line:462	class:std::vector	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef size_t                             size_type;$/;"	t	line:649	class:std::deque	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef size_t                          size_type;$/;"	t	line:114	struct:std::_Deque_iterator	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef size_t                                     size_type;$/;"	t	line:427	class:std::list	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	line:146	class:std::map	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	line:144	class:std::multimap	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	line:128	class:std::multiset	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:116	class:std::queue	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:337	class:std::priority_queue	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	line:134	class:std::set	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:118	class:std::stack	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef ptrdiff_t   size_type;$/;"	t	line:86	class:std::_Temporary_buffer	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef size_t size_type;$/;"	t	line:348	class:std::_Rb_tree	access:public
size_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef size_t					 size_type;$/;"	t	line:181	class:std::vector	access:public
skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags skipws =      _S_skipws;$/;"	m	line:298	class:std::ios_base	access:public
skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  skipws(ios_base& __base)$/;"	f	line:852	namespace:std	signature:(ios_base& __base)
slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  class slice$/;"	c	line:58	namespace:std
slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::slice() {}$/;"	f	line:89	class:std::slice	signature:()
slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::slice(size_t __o, size_t __d, size_t __s)$/;"	f	line:92	class:std::slice	signature:(size_t __o, size_t __d, size_t __s)
slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    class slice_array$/;"	c	line:121	namespace:std
slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(_Array<_Tp> __a, const slice& __s)$/;"	f	line:199	class:std::slice_array	signature:(_Array<_Tp> __a, const slice& __s)
slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(const slice_array<_Tp>& a)$/;"	f	line:205	class:std::slice_array	signature:(const slice_array<_Tp>& a)
slice_array.h	/home/damian/.vim/tags/cpp_src/slice_array.h	1;"	F	line:1
sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:2816	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:2851	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
sort_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:422	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
sort_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:448	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
space	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x)$/;"	f	line:926	class:std::list	access:public	signature:(iterator __position, list& __x)
splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __first, iterator __last)$/;"	f	line:972	class:std::list	access:public	signature:(iterator __position, list& __x, iterator __first, iterator __last)
splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __i)$/;"	f	line:946	class:std::list	access:public	signature:(iterator __position, list& __x, iterator __i)
stable_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2208	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:3876	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:3917	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
stack	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      stack(const _Sequence& __c = _Sequence())$/;"	f	line:131	class:std::stack	access:public	signature:(const _Sequence& __c = _Sequence())
stack	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    class stack$/;"	c	line:98	namespace:std
start	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::start () const$/;"	f	line:128	class:std::gslice	signature:() const
start	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::start() const$/;"	f	line:96	class:std::slice	signature:() const
state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      state() const$/;"	f	line:129	class:std::fpos	access:public	signature:() const
state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      state(_StateT __st)$/;"	f	line:124	class:std::fpos	access:public	signature:(_StateT __st)
state_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef std::mbstate_t  state_type;$/;"	t	line:67	struct:_Char_types	access:public
state_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      typedef typename _Char_types<_CharT>::state_type  state_type;$/;"	t	line:93	struct:char_traits	access:public
state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	line:281	class:std::codecvt	access:public
state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	line:80	class:std::__codecvt_abstract_base	access:public
state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	line:342	class:std::codecvt	access:public
state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	line:400	class:std::codecvt	access:public
std	/home/damian/.vim/tags/cpp_src/allocator.h	/^namespace std {$/;"	n	line:57
std	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^namespace std {$/;"	n	line:46
std	/home/damian/.vim/tags/cpp_src/basic_string.h	/^namespace std {$/;"	n	line:49
std	/home/damian/.vim/tags/cpp_src/codecvt.h	/^namespace std {$/;"	n	line:47
std	/home/damian/.vim/tags/cpp_src/functexcept.h	/^namespace std {$/;"	n	line:44
std	/home/damian/.vim/tags/cpp_src/gslice.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/ios_base.h	/^namespace std {$/;"	n	line:49
std	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^namespace std {$/;"	n	line:50
std	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^namespace std {$/;"	n	line:1538
std	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^namespace std {$/;"	n	line:3042
std	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^namespace std {$/;"	n	line:4601
std	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^namespace std {$/;"	n	line:53
std	/home/damian/.vim/tags/cpp_src/localefwd.h	/^namespace std {$/;"	n	line:50
std	/home/damian/.vim/tags/cpp_src/mask_array.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^namespace std {$/;"	n	line:42
std	/home/damian/.vim/tags/cpp_src/postypes.h	/^namespace std {$/;"	n	line:52
std	/home/damian/.vim/tags/cpp_src/slice_array.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^namespace std {$/;"	n	line:71
std	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^namespace std {$/;"	n	line:80
std	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^namespace std {$/;"	n	line:435
std	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^namespace std {$/;"	n	line:65
std	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^namespace std {$/;"	n	line:67
std	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^namespace std {$/;"	n	line:69
std	/home/damian/.vim/tags/cpp_src/stl_function.h	/^namespace std {$/;"	n	line:64
std	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^namespace std {$/;"	n	line:65
std	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^namespace std {$/;"	n	line:72
std	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^namespace std {$/;"	n	line:71
std	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^namespace std {$/;"	n	line:69
std	/home/damian/.vim/tags/cpp_src/stl_list.h	/^namespace std {$/;"	n	line:67
std	/home/damian/.vim/tags/cpp_src/stl_map.h	/^namespace std {$/;"	n	line:68
std	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^namespace std {$/;"	n	line:66
std	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^namespace std {$/;"	n	line:66
std	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^namespace std {$/;"	n	line:66
std	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^namespace std {$/;"	n	line:64
std	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^namespace std {$/;"	n	line:68
std	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^namespace std {$/;"	n	line:64
std	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^namespace std {$/;"	n	line:74
std	/home/damian/.vim/tags/cpp_src/stl_set.h	/^namespace std {$/;"	n	line:66
std	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^namespace std {$/;"	n	line:68
std	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^namespace std {$/;"	n	line:67
std	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^namespace std {$/;"	n	line:73
std	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^namespace std {$/;"	n	line:67
std	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^namespace std {$/;"	n	line:69
std	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^namespace std {$/;"	n	line:42
std	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^namespace std {$/;"	n	line:44
std	/home/damian/.vim/tags/cpp_src/stringfwd.h	/^namespace std {$/;"	n	line:46
std	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^namespace std {$/;"	n	line:43
std	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^namespace std {$/;"	n	line:49
std	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^namespace std {$/;"	n	line:45
std::_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array$/;"	s	line:415	namespace:std
std::_Array::_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(_Tp* const __restrict__ __p)$/;"	f	line:518	class:std::_Array	signature:(_Tp* const __restrict__ __p)
std::_Array::_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const _Tp* __restrict__ __b, size_t __s)$/;"	f	line:528	class:std::_Array	signature:(const _Tp* __restrict__ __b, size_t __s)
std::_Array::_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(const valarray<_Tp>& __v)$/;"	f	line:523	class:std::_Array	signature:(const valarray<_Tp>& __v)
std::_Array::_Array	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::_Array(size_t __n)$/;"	f	line:512	class:std::_Array	signature:(size_t __n)
std::_Array::_M_data	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _Tp* const __restrict__ _M_data;$/;"	m	line:424	struct:std::_Array	access:public
std::_Array::begin	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    _Array<_Tp>::begin () const$/;"	f	line:534	class:std::_Array	signature:() const
std::_Array_copier	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copier$/;"	s	line:255	namespace:std
std::_Array_copier	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copier<_Tp, true>$/;"	s	line:266	namespace:std
std::_Array_copier::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)$/;"	f	line:258	struct:std::_Array_copier	access:public	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
std::_Array_copier::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)$/;"	f	line:269	struct:std::_Array_copier	access:public	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
std::_Array_copy_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copy_ctor$/;"	s	line:144	namespace:std
std::_Array_copy_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_copy_ctor<_Tp, true>$/;"	s	line:158	namespace:std
std::_Array_copy_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,$/;"	f	line:149	struct:std::_Array_copy_ctor	access:public	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
std::_Array_copy_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,$/;"	f	line:161	struct:std::_Array_copy_ctor	access:public	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
std::_Array_default_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_default_ctor$/;"	s	line:76	namespace:std
std::_Array_default_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_default_ctor<_Tp, true>$/;"	s	line:89	namespace:std
std::_Array_default_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:81	struct:std::_Array_default_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
std::_Array_default_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:93	struct:std::_Array_default_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
std::_Array_init_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_init_ctor$/;"	s	line:108	namespace:std
std::_Array_init_ctor	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    struct _Array_init_ctor<_Tp, true>$/;"	s	line:121	namespace:std
std::_Array_init_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e,  const _Tp __t)$/;"	f	line:124	struct:std::_Array_init_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
std::_Array_init_ctor::_S_do_it	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^      _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)$/;"	f	line:113	struct:std::_Array_init_ctor	access:public	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
std::_BinBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase$/;"	c	line:517	namespace:std
std::_BinBase1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase1$/;"	c	line:558	namespace:std
std::_BinBase1::_BinBase1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase1(const _Vt& __t, const _Clos& __e)$/;"	f	line:564	class:std::_BinBase1	access:public	signature:(const _Vt& __t, const _Clos& __e)
std::_BinBase1::_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Vt& _M_expr1;$/;"	m	line:573	class:std::_BinBase1	access:private
std::_BinBase1::_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Clos& _M_expr2;$/;"	m	line:574	class:std::_BinBase1	access:private
std::_BinBase1::_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	line:561	class:std::_BinBase1	access:public
std::_BinBase1::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:567	class:std::_BinBase1	access:public	signature:(size_t __i) const
std::_BinBase1::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr2.size(); }$/;"	f	line:570	class:std::_BinBase1	access:public	signature:() const
std::_BinBase1::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:562	class:std::_BinBase1	access:public
std::_BinBase2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _BinBase2$/;"	c	line:538	namespace:std
std::_BinBase2::_BinBase2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase2(const _Clos& __e, const _Vt& __t)$/;"	f	line:544	class:std::_BinBase2	access:public	signature:(const _Clos& __e, const _Vt& __t)
std::_BinBase2::_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Clos& _M_expr1;$/;"	m	line:553	class:std::_BinBase2	access:private
std::_BinBase2::_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Vt& _M_expr2;$/;"	m	line:554	class:std::_BinBase2	access:private
std::_BinBase2::_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Clos::value_type _Vt;$/;"	t	line:541	class:std::_BinBase2	access:public
std::_BinBase2::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:547	class:std::_BinBase2	access:public	signature:(size_t __i) const
std::_BinBase2::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	line:550	class:std::_BinBase2	access:public	signature:() const
std::_BinBase2::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:542	class:std::_BinBase2	access:public
std::_BinBase::_BinBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinBase(const _FirstArg& __e1, const _SecondArg& __e2)$/;"	f	line:523	class:std::_BinBase	access:public	signature:(const _FirstArg& __e1, const _SecondArg& __e2)
std::_BinBase::_M_expr1	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _FirstArg& _M_expr1;$/;"	m	line:532	class:std::_BinBase	access:private
std::_BinBase::_M_expr2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _SecondArg& _M_expr2;$/;"	m	line:533	class:std::_BinBase	access:private
std::_BinBase::_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _FirstArg::value_type _Vt;$/;"	t	line:520	class:std::_BinBase	access:public
std::_BinBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:526	class:std::_BinBase	access:public	signature:(size_t __i) const
std::_BinBase::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr1.size(); }$/;"	f	line:529	class:std::_BinBase	access:public	signature:() const
std::_BinBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:521	class:std::_BinBase	access:public
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _Expr, typename _Dom::value_type, _Dom>$/;"	s	line:634	namespace:std	inherits:_BinBase1
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Constant, _ValArray, _Tp, _Tp>$/;"	s	line:655	namespace:std	inherits:_BinBase1
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Constant, _Dom, typename _Dom::value_type>$/;"	s	line:623	namespace:std	inherits:_BinBase2
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _Expr, _Dom1, _Dom2>$/;"	s	line:578	namespace:std	inherits:_BinBase
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _Expr, _ValArray, _Dom, typename _Dom::value_type>$/;"	s	line:599	namespace:std	inherits:_BinBase
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Constant, _Tp, _Tp>$/;"	s	line:645	namespace:std	inherits:_BinBase2
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper, _ValArray, _Expr, typename _Dom::value_type, _Dom>$/;"	s	line:611	namespace:std	inherits:_BinBase
std::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _BinClos<_Oper,_ValArray, _ValArray, _Tp, _Tp>$/;"	s	line:588	namespace:std	inherits:_BinBase
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, _Dom> _Base;$/;"	t	line:638	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase1<_Oper, valarray<_Tp> > _Base;$/;"	t	line:658	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,_Dom> _Base;$/;"	t	line:627	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase2<_Oper,valarray<_Tp> > _Base;$/;"	t	line:648	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, _Dom1, _Dom2> _Base;$/;"	t	line:581	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, _Dom> _Base;$/;"	t	line:615	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper, valarray<_Tp>, valarray<_Tp> > _Base;$/;"	t	line:591	struct:std::_BinClos	access:public
std::_BinClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;$/;"	t	line:603	struct:std::_BinClos	access:public
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const _Tp& __e2) : _Base(__e1, __e2) {}$/;"	f	line:630	struct:std::_BinClos	access:public	signature:(const _Dom& __e1, const _Tp& __e2)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom& __e1, const valarray<_Tp>& __e2)$/;"	f	line:606	struct:std::_BinClos	access:public	signature:(const _Dom& __e1, const valarray<_Tp>& __e2)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Dom1& __e1, const _Dom2& __e2) : _Base(__e1, __e2) {}$/;"	f	line:584	struct:std::_BinClos	access:public	signature:(const _Dom1& __e1, const _Dom2& __e2)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __e1, const _Dom& __e2) : _Base(__e1, __e2) {}$/;"	f	line:641	struct:std::_BinClos	access:public	signature:(const _Tp& __e1, const _Dom& __e2)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const _Tp& __t, const valarray<_Tp>& __v) : _Base(__t, __v) {}$/;"	f	line:661	struct:std::_BinClos	access:public	signature:(const _Tp& __t, const valarray<_Tp>& __v)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __e1, const _Dom& __e2)$/;"	f	line:618	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __e1, const _Dom& __e2)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const _Tp& __t) : _Base(__v, __t) {}$/;"	f	line:651	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __v, const _Tp& __t)
std::_BinClos::_BinClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _BinClos(const valarray<_Tp>& __v, const valarray<_Tp>& __w)$/;"	f	line:594	struct:std::_BinClos	access:public	signature:(const valarray<_Tp>& __v, const valarray<_Tp>& __w)
std::_BinClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:602	struct:std::_BinClos	access:public
std::_BinClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:614	struct:std::_BinClos	access:public
std::_BinClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:626	struct:std::_BinClos	access:public
std::_BinClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type _Tp;$/;"	t	line:637	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:582	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:592	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:604	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:616	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:628	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:639	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:649	struct:std::_BinClos	access:public
std::_BinClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:659	struct:std::_BinClos	access:public
std::_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_const_iterator : public _Bit_iterator_base$/;"	s	line:270	namespace:std	inherits:_Bit_iterator_base
std::_Bit_const_iterator::_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	line:277	struct:std::_Bit_const_iterator	access:public	signature:()
std::_Bit_const_iterator::_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	line:279	struct:std::_Bit_const_iterator	access:public	signature:(_Bit_type * __x, unsigned int __y)
std::_Bit_const_iterator::_Bit_const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_const_iterator(const _Bit_iterator& __x)$/;"	f	line:282	struct:std::_Bit_const_iterator	access:public	signature:(const _Bit_iterator& __x)
std::_Bit_const_iterator::const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator  const_iterator;$/;"	t	line:275	struct:std::_Bit_const_iterator	access:public
std::_Bit_const_iterator::const_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                 const_reference;$/;"	t	line:273	struct:std::_Bit_const_iterator	access:public
std::_Bit_const_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	line:286	struct:std::_Bit_const_iterator	access:public	signature:() const
std::_Bit_const_iterator::operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	line:334	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
std::_Bit_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++()$/;"	f	line:290	struct:std::_Bit_const_iterator	access:public	signature:()
std::_Bit_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	line:297	struct:std::_Bit_const_iterator	access:public	signature:(int)
std::_Bit_const_iterator::operator +=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	line:320	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i)
std::_Bit_const_iterator::operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	line:341	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
std::_Bit_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--()$/;"	f	line:305	struct:std::_Bit_const_iterator	access:public	signature:()
std::_Bit_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	line:312	struct:std::_Bit_const_iterator	access:public	signature:(int)
std::_Bit_const_iterator::operator -=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	line:327	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i)
std::_Bit_const_iterator::operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	line:348	struct:std::_Bit_const_iterator	access:public	signature:(difference_type __i) const
std::_Bit_const_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef const bool*          pointer;$/;"	t	line:274	struct:std::_Bit_const_iterator	access:public
std::_Bit_const_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                 reference;$/;"	t	line:272	struct:std::_Bit_const_iterator	access:public
std::_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_iterator : public _Bit_iterator_base$/;"	s	line:188	namespace:std	inherits:_Bit_iterator_base
std::_Bit_iterator::_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator() : _Bit_iterator_base(0, 0) { }$/;"	f	line:194	struct:std::_Bit_iterator	access:public	signature:()
std::_Bit_iterator::_Bit_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator(_Bit_type * __x, unsigned int __y)$/;"	f	line:196	struct:std::_Bit_iterator	access:public	signature:(_Bit_type * __x, unsigned int __y)
std::_Bit_iterator::iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_iterator   iterator;$/;"	t	line:192	struct:std::_Bit_iterator	access:public
std::_Bit_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator*() const$/;"	f	line:200	struct:std::_Bit_iterator	access:public	signature:() const
std::_Bit_iterator::operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+(difference_type __i) const$/;"	f	line:248	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
std::_Bit_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++()$/;"	f	line:204	struct:std::_Bit_iterator	access:public	signature:()
std::_Bit_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator++(int)$/;"	f	line:211	struct:std::_Bit_iterator	access:public	signature:(int)
std::_Bit_iterator::operator +=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator+=(difference_type __i)$/;"	f	line:234	struct:std::_Bit_iterator	access:public	signature:(difference_type __i)
std::_Bit_iterator::operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-(difference_type __i) const$/;"	f	line:255	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
std::_Bit_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--()$/;"	f	line:219	struct:std::_Bit_iterator	access:public	signature:()
std::_Bit_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator--(int)$/;"	f	line:226	struct:std::_Bit_iterator	access:public	signature:(int)
std::_Bit_iterator::operator -=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator-=(difference_type __i)$/;"	f	line:241	struct:std::_Bit_iterator	access:public	signature:(difference_type __i)
std::_Bit_iterator::operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](difference_type __i) const$/;"	f	line:262	struct:std::_Bit_iterator	access:public	signature:(difference_type __i) const
std::_Bit_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference* pointer;$/;"	t	line:191	struct:std::_Bit_iterator	access:public
std::_Bit_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference  reference;$/;"	t	line:190	struct:std::_Bit_iterator	access:public
std::_Bit_iterator_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_iterator_base$/;"	s	line:110	namespace:std	inherits:std::iterator
std::_Bit_iterator_base::_Bit_iterator_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_iterator_base(_Bit_type * __x, unsigned int __y)$/;"	f	line:116	struct:std::_Bit_iterator_base	access:public	signature:(_Bit_type * __x, unsigned int __y)
std::_Bit_iterator_base::_M_bump_down	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_bump_down()$/;"	f	line:130	struct:std::_Bit_iterator_base	access:public	signature:()
std::_Bit_iterator_base::_M_bump_up	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_bump_up()$/;"	f	line:120	struct:std::_Bit_iterator_base	access:public	signature:()
std::_Bit_iterator_base::_M_incr	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_incr(ptrdiff_t __i)$/;"	f	line:140	struct:std::_Bit_iterator_base	access:public	signature:(ptrdiff_t __i)
std::_Bit_iterator_base::_M_offset	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    unsigned int _M_offset;$/;"	m	line:114	struct:std::_Bit_iterator_base	access:public
std::_Bit_iterator_base::_M_p	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	line:113	struct:std::_Bit_iterator_base	access:public
std::_Bit_iterator_base::operator !=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator!=(const _Bit_iterator_base& __i) const$/;"	f	line:165	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_iterator_base::operator <	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<(const _Bit_iterator_base& __i) const$/;"	f	line:158	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_iterator_base::operator <=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<=(const _Bit_iterator_base& __i) const$/;"	f	line:173	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_iterator_base::operator ==	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator==(const _Bit_iterator_base& __i) const$/;"	f	line:154	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_iterator_base::operator >	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator>(const _Bit_iterator_base& __i) const$/;"	f	line:169	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_iterator_base::operator >=	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator>=(const _Bit_iterator_base& __i) const$/;"	f	line:177	struct:std::_Bit_iterator_base	access:public	signature:(const _Bit_iterator_base& __i) const
std::_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  struct _Bit_reference$/;"	s	line:70	namespace:std
std::_Bit_reference::_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_reference() : _M_p(0), _M_mask(0) { }$/;"	f	line:78	struct:std::_Bit_reference	access:public	signature:()
std::_Bit_reference::_Bit_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_reference(_Bit_type * __x, _Bit_type __y)$/;"	f	line:75	struct:std::_Bit_reference	access:public	signature:(_Bit_type * __x, _Bit_type __y)
std::_Bit_reference::_M_mask	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type _M_mask;$/;"	m	line:73	struct:std::_Bit_reference	access:public
std::_Bit_reference::_M_p	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _Bit_type * _M_p;$/;"	m	line:72	struct:std::_Bit_reference	access:public
std::_Bit_reference::flip	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    flip()$/;"	f	line:106	struct:std::_Bit_reference	access:public	signature:()
std::_Bit_reference::operator <	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator<(const _Bit_reference& __x) const$/;"	f	line:102	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x) const
std::_Bit_reference::operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(bool __x)$/;"	f	line:84	struct:std::_Bit_reference	access:public	signature:(bool __x)
std::_Bit_reference::operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(const _Bit_reference& __x)$/;"	f	line:94	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x)
std::_Bit_reference::operator ==	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator==(const _Bit_reference& __x) const$/;"	f	line:98	struct:std::_Bit_reference	access:public	signature:(const _Bit_reference& __x) const
std::_Bit_reference::operator bool	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator bool() const$/;"	f	line:80	struct:std::_Bit_reference	access:public	signature:() const
std::_Bit_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  typedef unsigned long _Bit_type;$/;"	t	line:67	namespace:std
std::_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    struct _Bvector_base$/;"	s	line:377	namespace:std
std::_Bvector_base::_Bit_alloc_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^        _Bit_alloc_type;$/;"	t	line:380	struct:std::_Bvector_base	access:public
std::_Bvector_base::_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _Bvector_base(const allocator_type& __a) : _M_impl(__a) { }$/;"	f	line:408	struct:std::_Bvector_base	access:public	signature:(const allocator_type& __a)
std::_Bvector_base::_Bvector_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      struct _Bvector_impl$/;"	s	line:382	struct:std::_Bvector_base	inherits:_Bit_alloc_type	access:public
std::_Bvector_base::_Bvector_impl::_Bvector_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bvector_impl(const _Bit_alloc_type& __a)$/;"	f	line:388	struct:std::_Bvector_base::_Bvector_impl	access:public	signature:(const _Bit_alloc_type& __a)
std::_Bvector_base::_Bvector_impl::_M_end_of_storage	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_type* 	_M_end_of_storage;$/;"	m	line:387	struct:std::_Bvector_base::_Bvector_impl	access:public
std::_Bvector_base::_Bvector_impl::_M_finish	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_finish;$/;"	m	line:386	struct:std::_Bvector_base::_Bvector_impl	access:public
std::_Bvector_base::_Bvector_impl::_M_start	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^	_Bit_iterator 	_M_start;$/;"	m	line:385	struct:std::_Bvector_base::_Bvector_impl	access:public
std::_Bvector_base::_M_allocate	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_allocate(size_t __n)$/;"	f	line:417	struct:std::_Bvector_base	access:protected	signature:(size_t __n)
std::_Bvector_base::_M_deallocate	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_deallocate()$/;"	f	line:422	struct:std::_Bvector_base	access:protected	signature:()
std::_Bvector_base::_M_get_Bit_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator() const$/;"	f	line:401	struct:std::_Bvector_base	access:public	signature:() const
std::_Bvector_base::_M_get_Bit_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_get_Bit_allocator()$/;"	f	line:397	struct:std::_Bvector_base	access:public	signature:()
std::_Bvector_base::_M_impl	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _Bvector_impl _M_impl;$/;"	m	line:414	struct:std::_Bvector_base	access:protected
std::_Bvector_base::allocator_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      typedef _Alloc allocator_type;$/;"	t	line:394	struct:std::_Bvector_base	access:public
std::_Bvector_base::get_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      get_allocator() const$/;"	f	line:405	struct:std::_Bvector_base	access:public	signature:() const
std::_Bvector_base::~_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      ~_Bvector_base()$/;"	f	line:410	struct:std::_Bvector_base	access:public	signature:()
std::_Construct	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Construct(_T1* __p)$/;"	f	line:92	namespace:std	signature:(_T1* __p)
std::_Construct	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Construct(_T1* __p, const _T2& __value)$/;"	f	line:77	namespace:std	signature:(_T1* __p, const _T2& __value)
std::_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    class _Deque_base$/;"	c	line:371	namespace:std
std::_Deque_base::_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a)$/;"	f	line:387	class:std::_Deque_base	access:public	signature:(const allocator_type& __a)
std::_Deque_base::_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_base(const allocator_type& __a, size_t __num_elements)$/;"	f	line:383	class:std::_Deque_base	access:public	signature:(const allocator_type& __a, size_t __num_elements)
std::_Deque_base::_Deque_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      struct _Deque_impl$/;"	s	line:401	class:std::_Deque_base	inherits:_Tp_alloc_type	access:protected
std::_Deque_base::_Deque_impl::_Deque_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	_Deque_impl(const _Tp_alloc_type& __a)$/;"	f	line:409	struct:std::_Deque_base::_Deque_impl	access:public	signature:(const _Tp_alloc_type& __a)
std::_Deque_base::_Deque_impl::_M_finish	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	iterator _M_finish;$/;"	m	line:407	struct:std::_Deque_base::_Deque_impl	access:public
std::_Deque_base::_Deque_impl::_M_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	_Tp** _M_map;$/;"	m	line:404	struct:std::_Deque_base::_Deque_impl	access:public
std::_Deque_base::_Deque_impl::_M_map_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	size_t _M_map_size;$/;"	m	line:405	struct:std::_Deque_base::_Deque_impl	access:public
std::_Deque_base::_Deque_impl::_M_start	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^	iterator _M_start;$/;"	m	line:406	struct:std::_Deque_base::_Deque_impl	access:public
std::_Deque_base::_M_allocate_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_allocate_map(size_t __n)$/;"	f	line:440	class:std::_Deque_base	access:protected	signature:(size_t __n)
std::_Deque_base::_M_allocate_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_allocate_node()$/;"	f	line:428	class:std::_Deque_base	access:protected	signature:()
std::_Deque_base::_M_create_nodes	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_create_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	line:520	class:std::_Deque_base	signature:(_Tp** __nstart, _Tp** __nfinish)
std::_Deque_base::_M_deallocate_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_deallocate_map(_Tp** __p, size_t __n)$/;"	f	line:444	class:std::_Deque_base	access:protected	signature:(_Tp** __p, size_t __n)
std::_Deque_base::_M_deallocate_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_deallocate_node(_Tp* __p)$/;"	f	line:434	class:std::_Deque_base	access:protected	signature:(_Tp* __p)
std::_Deque_base::_M_destroy_nodes	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_destroy_nodes(_Tp** __nstart, _Tp** __nfinish)$/;"	f	line:538	class:std::_Deque_base	signature:(_Tp** __nstart, _Tp** __nfinish)
std::_Deque_base::_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_Tp_allocator() const$/;"	f	line:420	class:std::_Deque_base	access:protected	signature:() const
std::_Deque_base::_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_Tp_allocator()$/;"	f	line:416	class:std::_Deque_base	access:protected	signature:()
std::_Deque_base::_M_get_map_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_get_map_allocator() const$/;"	f	line:424	class:std::_Deque_base	access:protected	signature:() const
std::_Deque_base::_M_impl	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_impl _M_impl;$/;"	m	line:453	class:std::_Deque_base	access:protected
std::_Deque_base::_M_initialize_map	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    _M_initialize_map(size_t __num_elements)$/;"	f	line:481	class:std::_Deque_base	signature:(size_t __num_elements)
std::_Deque_base::_Map_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp*>::other _Map_alloc_type;$/;"	t	line:397	class:std::_Deque_base	access:protected
std::_Deque_base::_S_initial_map_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      enum { _S_initial_map_size = 8 };$/;"	e	line:451	enum:std::_Deque_base::__anon1
std::_Deque_base::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::template rebind<_Tp>::other  _Tp_alloc_type;$/;"	t	line:399	class:std::_Deque_base	access:protected
std::_Deque_base::allocator_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Alloc                  allocator_type;$/;"	t	line:374	class:std::_Deque_base	access:public
std::_Deque_base::const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	line:381	class:std::_Deque_base	access:public
std::_Deque_base::get_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	line:377	class:std::_Deque_base	access:public	signature:() const
std::_Deque_base::iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	line:380	class:std::_Deque_base	access:public
std::_Deque_base::~_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    ~_Deque_base()$/;"	f	line:458	class:std::_Deque_base	signature:()
std::_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    struct _Deque_iterator$/;"	s	line:102	namespace:std
std::_Deque_iterator::_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator() : _M_cur(0), _M_first(0), _M_last(0), _M_node(0) {}$/;"	f	line:128	struct:std::_Deque_iterator	access:public	signature:()
std::_Deque_iterator::_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator(_Tp* __x, _Map_pointer __y)$/;"	f	line:124	struct:std::_Deque_iterator	access:public	signature:(_Tp* __x, _Map_pointer __y)
std::_Deque_iterator::_Deque_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Deque_iterator(const iterator& __x)$/;"	f	line:130	struct:std::_Deque_iterator	access:public	signature:(const iterator& __x)
std::_Deque_iterator::_M_cur	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_cur;$/;"	m	line:119	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::_M_first	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_first;$/;"	m	line:120	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::_M_last	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Tp* _M_last;$/;"	m	line:121	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::_M_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _Map_pointer _M_node;$/;"	m	line:122	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::_M_set_node	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_set_node(_Map_pointer __new_node)$/;"	f	line:230	struct:std::_Deque_iterator	access:public	signature:(_Map_pointer __new_node)
std::_Deque_iterator::_Map_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp**                           _Map_pointer;$/;"	t	line:116	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::_S_buffer_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	line:107	struct:std::_Deque_iterator	access:public	signature:()
std::_Deque_iterator::_Self	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator                 _Self;$/;"	t	line:117	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;$/;"	t	line:105	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef ptrdiff_t                       difference_type;$/;"	t	line:115	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;$/;"	t	line:104	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::random_access_iterator_tag iterator_category;$/;"	t	line:110	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator*() const$/;"	f	line:135	struct:std::_Deque_iterator	access:public	signature:() const
std::_Deque_iterator::operator +	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator+(difference_type __n) const$/;"	f	line:202	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
std::_Deque_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator++()$/;"	f	line:143	struct:std::_Deque_iterator	access:public	signature:()
std::_Deque_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator++(int)$/;"	f	line:155	struct:std::_Deque_iterator	access:public	signature:(int)
std::_Deque_iterator::operator +=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator+=(difference_type __n)$/;"	f	line:183	struct:std::_Deque_iterator	access:public	signature:(difference_type __n)
std::_Deque_iterator::operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator-(difference_type __n) const$/;"	f	line:213	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
std::_Deque_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator--()$/;"	f	line:163	struct:std::_Deque_iterator	access:public	signature:()
std::_Deque_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator--(int)$/;"	f	line:175	struct:std::_Deque_iterator	access:public	signature:(int)
std::_Deque_iterator::operator -=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator-=(difference_type __n)$/;"	f	line:209	struct:std::_Deque_iterator	access:public	signature:(difference_type __n)
std::_Deque_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator->() const$/;"	f	line:139	struct:std::_Deque_iterator	access:public	signature:() const
std::_Deque_iterator::operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](difference_type __n) const$/;"	f	line:220	struct:std::_Deque_iterator	access:public	signature:(difference_type __n) const
std::_Deque_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Ptr                            pointer;$/;"	t	line:112	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Ref                            reference;$/;"	t	line:113	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::size_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef size_t                          size_type;$/;"	t	line:114	struct:std::_Deque_iterator	access:public
std::_Deque_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp                             value_type;$/;"	t	line:111	struct:std::_Deque_iterator	access:public
std::_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:148	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Allocator __alloc)
std::_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:179	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp>)
std::_Destroy	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    _Destroy(_Tp* __pointer)$/;"	f	line:106	namespace:std	signature:(_Tp* __pointer)
std::_Expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _Expr$/;"	c	line:165	namespace:std
std::_Expr::_Expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::_Expr(const _Clos& __c) : _M_closure(__c) {}$/;"	f	line:210	class:std::_Expr	signature:(const _Clos& __c)
std::_Expr::_M_closure	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Clos _M_closure;$/;"	m	line:205	class:std::_Expr	access:private
std::_Expr::__f	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(_Tp)) const$/;"	f	line:285	class:std::_Expr	signature:(_Tp) const
std::_Expr::__f	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::apply(_Tp __f(const _Tp&)) const$/;"	f	line:277	class:std::_Expr	signature:(const _Tp&) const
std::_Expr::cshift	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::cshift(int __n) const$/;"	f	line:269	class:std::_Expr	signature:(int __n) const
std::_Expr::max	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::max() const$/;"	f	line:315	class:std::_Expr	signature:() const
std::_Expr::min	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::min() const$/;"	f	line:310	class:std::_Expr	signature:() const
std::_Expr::operator !	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Dom, _Tp>::operator!() const$/;"	f	line:320	class:std::_Expr	signature:() const
std::_Expr::operator ()	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator()() const$/;"	f	line:214	class:std::_Expr	signature:() const
std::_Expr::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const gslice& __gs) const$/;"	f	line:232	class:std::_Expr	signature:(const gslice& __gs) const
std::_Expr::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<bool>& __m) const$/;"	f	line:240	class:std::_Expr	signature:(const valarray<bool>& __m) const
std::_Expr::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](const valarray<size_t>& __i) const$/;"	f	line:248	class:std::_Expr	signature:(const valarray<size_t>& __i) const
std::_Expr::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](size_t __i) const$/;"	f	line:219	class:std::_Expr	signature:(size_t __i) const
std::_Expr::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::operator[](slice __s) const$/;"	f	line:224	class:std::_Expr	signature:(slice __s) const
std::_Expr::shift	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::shift(int __n) const$/;"	f	line:261	class:std::_Expr	signature:(int __n) const
std::_Expr::size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::size() const$/;"	f	line:256	class:std::_Expr	signature:() const
std::_Expr::sum	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::sum() const$/;"	f	line:294	class:std::_Expr	signature:() const
std::_Expr::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:168	class:std::_Expr	access:public
std::_FunBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _FunBase$/;"	c	line:407	namespace:std
std::_FunBase::_FunBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _FunBase(const _Dom& __e, value_type __f(_Arg))$/;"	f	line:412	class:std::_FunBase	access:public	signature:(const _Dom& __e, value_type __f(_Arg))
std::_FunBase::_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	line:421	class:std::_FunBase	access:private
std::_FunBase::_M_func	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type (*_M_func)(_Arg);$/;"	m	line:422	class:std::_FunBase	access:private
std::_FunBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:415	class:std::_FunBase	access:public	signature:(size_t __i) const
std::_FunBase::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size ();}$/;"	f	line:418	class:std::_FunBase	access:public	signature:() const
std::_FunBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:410	class:std::_FunBase	access:public
std::_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _GBase$/;"	c	line:49	namespace:std
std::_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _GBase<_Array<_Tp> >$/;"	c	line:71	namespace:std
std::_GBase::_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GBase (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	line:76	class:std::_GBase	access:public	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
std::_GBase::_GBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:54	class:std::_GBase	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
std::_GBase::_M_array	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Array<_Tp>       _M_array;$/;"	m	line:88	class:std::_GBase	access:private
std::_GBase::_M_expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	line:66	class:std::_GBase	access:private
std::_GBase::_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:67	class:std::_GBase	access:private
std::_GBase::_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:89	class:std::_GBase	access:private
std::_GBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:58	class:std::_GBase	access:public	signature:(size_t __i) const
std::_GBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:80	class:std::_GBase	access:public	signature:(size_t __i) const
std::_GBase::size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size () const$/;"	f	line:62	class:std::_GBase	access:public	signature:() const
std::_GBase::size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size () const$/;"	f	line:84	class:std::_GBase	access:public	signature:() const
std::_GBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:74	class:std::_GBase	access:public
std::_GBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:52	class:std::_GBase	access:public
std::_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _GClos<_Expr, _Dom>$/;"	s	line:93	namespace:std	inherits:_GBase
std::_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _GClos<_ValArray, _Tp>$/;"	s	line:104	namespace:std	inherits:_GBase
std::_GClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _GBase<_Array<_Tp> > _Base;$/;"	t	line:107	struct:std::_GClos	access:public
std::_GClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _GBase<_Dom> _Base;$/;"	t	line:96	struct:std::_GClos	access:public
std::_GClos::_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GClos (_Array<_Tp> __a, const valarray<size_t>& __i)$/;"	f	line:110	struct:std::_GClos	access:public	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
std::_GClos::_GClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _GClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:99	struct:std::_GClos	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
std::_GClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:108	struct:std::_GClos	access:public
std::_GClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:97	struct:std::_GClos	access:public
std::_IBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    class _IBase$/;"	c	line:118	namespace:std
std::_IBase::_IBase	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IBase (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:123	class:std::_IBase	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
std::_IBase::_M_expr	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const _Dom&	      _M_expr;$/;"	m	line:135	class:std::_IBase	access:private
std::_IBase::_M_index	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:136	class:std::_IBase	access:private
std::_IBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      operator[] (size_t __i) const$/;"	f	line:127	class:std::_IBase	access:public	signature:(size_t __i) const
std::_IBase::size	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      size() const$/;"	f	line:131	class:std::_IBase	access:public	signature:() const
std::_IBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:121	class:std::_IBase	access:public
std::_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _IClos<_Expr, _Dom>$/;"	s	line:140	namespace:std	inherits:_IBase
std::_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    struct _IClos<_ValArray, _Tp>$/;"	s	line:151	namespace:std	inherits:_IBase
std::_IClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _IBase<_Dom> _Base;$/;"	t	line:143	struct:std::_IClos	access:public
std::_IClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _IBase<valarray<_Tp> > _Base;$/;"	t	line:154	struct:std::_IClos	access:public
std::_IClos::_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IClos (const _Dom& __e, const valarray<size_t>& __i)$/;"	f	line:146	struct:std::_IClos	access:public	signature:(const _Dom& __e, const valarray<size_t>& __i)
std::_IClos::_IClos	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      _IClos (const valarray<_Tp>& __a, const valarray<size_t>& __i)$/;"	f	line:157	struct:std::_IClos	access:public	signature:(const valarray<_Tp>& __a, const valarray<size_t>& __i)
std::_IClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:155	struct:std::_IClos	access:public
std::_IClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:144	struct:std::_IClos	access:public
std::_Identity	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Identity : public unary_function<_Tp,_Tp>$/;"	s	line:530	namespace:std	inherits:unary_function
std::_Identity::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __x) const$/;"	f	line:533	struct:std::_Identity	access:public	signature:(_Tp& __x) const
std::_Identity::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:537	struct:std::_Identity	access:public	signature:(const _Tp& __x) const
std::_Ios_Fmtflags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Fmtflags $/;"	g	line:55	namespace:std
std::_Ios_Iostate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Iostate$/;"	g	line:147	namespace:std
std::_Ios_Openmode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Openmode $/;"	g	line:107	namespace:std
std::_Ios_Seekdir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  enum _Ios_Seekdir $/;"	g	line:184	namespace:std
std::_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    class _List_base$/;"	c	line:282	namespace:std
std::_List_base::_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_base(const allocator_type& __a)$/;"	f	line:342	class:std::_List_base	access:public	signature:(const allocator_type& __a)
std::_List_base::_List_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      struct _List_impl $/;"	s	line:303	class:std::_List_base	inherits:_Node_alloc_type	access:protected
std::_List_base::_List_impl::_List_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^	_List_impl(const _Node_alloc_type& __a)$/;"	f	line:308	struct:std::_List_base::_List_impl	access:public	signature:(const _Node_alloc_type& __a)
std::_List_base::_List_impl::_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^	_List_node_base _M_node;$/;"	m	line:306	struct:std::_List_base::_List_impl	access:public
std::_List_base::_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Node_allocator() const$/;"	f	line:331	class:std::_List_base	access:public	signature:() const
std::_List_base::_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Node_allocator()$/;"	f	line:327	class:std::_List_base	access:public	signature:()
std::_List_base::_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_Tp_allocator() const$/;"	f	line:335	class:std::_List_base	access:public	signature:() const
std::_List_base::_M_get_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_get_node()$/;"	f	line:316	class:std::_List_base	access:protected	signature:()
std::_List_base::_M_impl	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_impl _M_impl;$/;"	m	line:313	class:std::_List_base	access:protected
std::_List_base::_M_init	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_init()$/;"	f	line:354	class:std::_List_base	access:public	signature:()
std::_List_base::_M_put_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_put_node(_List_node<_Tp>* __p)$/;"	f	line:320	class:std::_List_base	access:protected	signature:(_List_node<_Tp>* __p)
std::_List_base::_Node_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _Node_alloc_type;$/;"	t	line:299	class:std::_List_base	access:protected
std::_List_base::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	line:301	class:std::_List_base	access:protected
std::_List_base::allocator_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Alloc allocator_type;$/;"	t	line:324	class:std::_List_base	access:public
std::_List_base::get_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	line:339	class:std::_List_base	access:public	signature:() const
std::_List_base::~_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      ~_List_base()$/;"	f	line:347	class:std::_List_base	access:public	signature:()
std::_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_const_iterator$/;"	s	line:189	namespace:std
std::_List_const_iterator::_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator()$/;"	f	line:201	struct:std::_List_const_iterator	access:public	signature:()
std::_List_const_iterator::_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator(const _List_node_base* __x)$/;"	f	line:205	struct:std::_List_const_iterator	access:public	signature:(const _List_node_base* __x)
std::_List_const_iterator::_List_const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_const_iterator(const iterator& __x)$/;"	f	line:208	struct:std::_List_const_iterator	access:public	signature:(const iterator& __x)
std::_List_const_iterator::_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      const _List_node_base* _M_node;$/;"	m	line:260	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _List_node<_Tp>              _Node;$/;"	t	line:192	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::_Self	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>          _Self;$/;"	t	line:191	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:195	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                iterator;$/;"	t	line:193	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	line:196	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	line:256	struct:std::_List_const_iterator	access:public	signature:(const _Self& __x) const
std::_List_const_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator*() const$/;"	f	line:214	struct:std::_List_const_iterator	access:public	signature:() const
std::_List_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++()$/;"	f	line:222	struct:std::_List_const_iterator	access:public	signature:()
std::_List_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++(int)$/;"	f	line:229	struct:std::_List_const_iterator	access:public	signature:(int)
std::_List_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--()$/;"	f	line:237	struct:std::_List_const_iterator	access:public	signature:()
std::_List_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--(int)$/;"	f	line:244	struct:std::_List_const_iterator	access:public	signature:(int)
std::_List_const_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator->() const$/;"	f	line:218	struct:std::_List_const_iterator	access:public	signature:() const
std::_List_const_iterator::operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	line:252	struct:std::_List_const_iterator	access:public	signature:(const _Self& __x) const
std::_List_const_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _Tp*                         pointer;$/;"	t	line:198	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef const _Tp&                         reference;$/;"	t	line:199	struct:std::_List_const_iterator	access:public
std::_List_const_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	line:197	struct:std::_List_const_iterator	access:public
std::_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_iterator$/;"	s	line:112	namespace:std
std::_List_iterator::_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_iterator()$/;"	f	line:123	struct:std::_List_iterator	access:public	signature:()
std::_List_iterator::_List_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_iterator(_List_node_base* __x)$/;"	f	line:127	struct:std::_List_iterator	access:public	signature:(_List_node_base* __x)
std::_List_iterator::_M_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _List_node_base* _M_node;$/;"	m	line:178	struct:std::_List_iterator	access:public
std::_List_iterator::_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_node<_Tp>                    _Node;$/;"	t	line:115	struct:std::_List_iterator	access:public
std::_List_iterator::_Self	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                _Self;$/;"	t	line:114	struct:std::_List_iterator	access:public
std::_List_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:117	struct:std::_List_iterator	access:public
std::_List_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::bidirectional_iterator_tag    iterator_category;$/;"	t	line:118	struct:std::_List_iterator	access:public
std::_List_iterator::operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator!=(const _Self& __x) const$/;"	f	line:174	struct:std::_List_iterator	access:public	signature:(const _Self& __x) const
std::_List_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator*() const$/;"	f	line:132	struct:std::_List_iterator	access:public	signature:() const
std::_List_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++()$/;"	f	line:140	struct:std::_List_iterator	access:public	signature:()
std::_List_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator++(int)$/;"	f	line:147	struct:std::_List_iterator	access:public	signature:(int)
std::_List_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--()$/;"	f	line:155	struct:std::_List_iterator	access:public	signature:()
std::_List_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator--(int)$/;"	f	line:162	struct:std::_List_iterator	access:public	signature:(int)
std::_List_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator->() const$/;"	f	line:136	struct:std::_List_iterator	access:public	signature:() const
std::_List_iterator::operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      operator==(const _Self& __x) const$/;"	f	line:170	struct:std::_List_iterator	access:public	signature:(const _Self& __x) const
std::_List_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp*                               pointer;$/;"	t	line:120	struct:std::_List_iterator	access:public
std::_List_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp&                               reference;$/;"	t	line:121	struct:std::_List_iterator	access:public
std::_List_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	line:119	struct:std::_List_iterator	access:public
std::_List_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    struct _List_node : public _List_node_base$/;"	s	line:99	namespace:std	inherits:_List_node_base
std::_List_node::_M_data	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _Tp _M_data;                \/\/\/< User's data.$/;"	m	line:101	struct:std::_List_node	access:public
std::_List_node_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^  struct _List_node_base$/;"	s	line:75	namespace:std
std::_List_node_base::_M_next	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    _List_node_base* _M_next;   \/\/\/< Self-explanatory$/;"	m	line:77	struct:std::_List_node_base	access:public
std::_List_node_base::_M_prev	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    _List_node_base* _M_prev;   \/\/\/< Self-explanatory$/;"	m	line:78	struct:std::_List_node_base	access:public
std::_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    class _Rb_tree$/;"	c	line:329	namespace:std
std::_Rb_tree::_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	line:335	class:std::_Rb_tree	access:protected
std::_Rb_tree::_Const_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	line:336	class:std::_Rb_tree	access:protected
std::_Rb_tree::_Const_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node* _Const_Link_type;$/;"	t	line:347	class:std::_Rb_tree	access:public
std::_Rb_tree::_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node* _Link_type;$/;"	t	line:346	class:std::_Rb_tree	access:public
std::_Rb_tree::_M_begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_begin() const$/;"	f	line:478	class:std::_Rb_tree	access:protected	signature:() const
std::_Rb_tree::_M_begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_begin()$/;"	f	line:474	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_M_clone_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_clone_node(_Const_Link_type __x)$/;"	f	line:388	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
std::_Rb_tree::_M_copy	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_copy(_Const_Link_type __x, _Link_type __p)$/;"	f	line:1282	class:std::_Rb_tree	signature:(_Const_Link_type __x, _Link_type __p)
std::_Rb_tree::_M_create_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_create_node(const value_type& __x)$/;"	f	line:374	class:std::_Rb_tree	access:protected	signature:(const value_type& __x)
std::_Rb_tree::_M_destroy_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_destroy_node(_Link_type __p)$/;"	f	line:398	class:std::_Rb_tree	access:protected	signature:(_Link_type __p)
std::_Rb_tree::_M_end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_end() const$/;"	f	line:489	class:std::_Rb_tree	access:protected	signature:() const
std::_Rb_tree::_M_end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_end()$/;"	f	line:485	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_M_erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_erase(_Link_type __x)$/;"	f	line:1318	class:std::_Rb_tree	signature:(_Link_type __x)
std::_Rb_tree::_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_Node_allocator() const$/;"	f	line:357	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::_M_get_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_Node_allocator()$/;"	f	line:353	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::_M_get_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_get_node()$/;"	f	line:366	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_M_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_impl<_Compare> _M_impl;$/;"	m	line:446	class:std::_Rb_tree	access:protected
std::_Rb_tree::_M_insert	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	line:832	class:std::_Rb_tree	signature:(_Base_ptr __x, _Base_ptr __p, const _Val& __v)
std::_Rb_tree::_M_insert	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)$/;"	f	line:868	class:std::_Rb_tree	signature:(_Const_Base_ptr __x, _Const_Base_ptr __p, const _Val& __v)
std::_Rb_tree::_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_insert_equal(_II __first, _II __last)$/;"	f	line:1221	class:std::_Rb_tree	signature:(_II __first, _II __last)
std::_Rb_tree::_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(const _Val& __v)$/;"	f	line:887	class:std::_Rb_tree	signature:(const _Val& __v)
std::_Rb_tree::_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(const_iterator __position, const _Val& __v)$/;"	f	line:1166	class:std::_Rb_tree	signature:(const_iterator __position, const _Val& __v)
std::_Rb_tree::_M_insert_equal	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal(iterator __position, const _Val& __v)$/;"	f	line:1112	class:std::_Rb_tree	signature:(iterator __position, const _Val& __v)
std::_Rb_tree::_M_insert_equal_lower	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_equal_lower(const _Val& __v)$/;"	f	line:904	class:std::_Rb_tree	signature:(const _Val& __v)
std::_Rb_tree::_M_insert_lower	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_lower(_Base_ptr __x, _Base_ptr __p, const _Val& __v)$/;"	f	line:850	class:std::_Rb_tree	signature:(_Base_ptr __x, _Base_ptr __p, const _Val& __v)
std::_Rb_tree::_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_insert_unique(_II __first, _II __last)$/;"	f	line:1232	class:std::_Rb_tree	signature:(_II __first, _II __last)
std::_Rb_tree::_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(const _Val& __v)$/;"	f	line:972	class:std::_Rb_tree	signature:(const _Val& __v)
std::_Rb_tree::_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(const_iterator __position, const _Val& __v)$/;"	f	line:1055	class:std::_Rb_tree	signature:(const_iterator __position, const _Val& __v)
std::_Rb_tree::_M_insert_unique	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _M_insert_unique(iterator __position, const _Val& __v)$/;"	f	line:998	class:std::_Rb_tree	signature:(iterator __position, const _Val& __v)
std::_Rb_tree::_M_leftmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_leftmost() const$/;"	f	line:462	class:std::_Rb_tree	access:protected	signature:() const
std::_Rb_tree::_M_leftmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_leftmost()$/;"	f	line:458	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_M_put_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_put_node(_Rb_tree_node* __p)$/;"	f	line:370	class:std::_Rb_tree	access:protected	signature:(_Rb_tree_node* __p)
std::_Rb_tree::_M_rightmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_rightmost() const$/;"	f	line:470	class:std::_Rb_tree	access:protected	signature:() const
std::_Rb_tree::_M_rightmost	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_rightmost()$/;"	f	line:466	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_M_root	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_root() const$/;"	f	line:454	class:std::_Rb_tree	access:protected	signature:() const
std::_Rb_tree::_M_root	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _M_root()$/;"	f	line:450	class:std::_Rb_tree	access:protected	signature:()
std::_Rb_tree::_Node_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^              _Node_allocator;$/;"	t	line:332	class:std::_Rb_tree	access:private
std::_Rb_tree::_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree()$/;"	f	line:568	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp)$/;"	f	line:571	class:std::_Rb_tree	access:public	signature:(const _Compare& __comp)
std::_Rb_tree::_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Compare& __comp, const allocator_type& __a)$/;"	f	line:575	class:std::_Rb_tree	access:public	signature:(const _Compare& __comp, const allocator_type& __a)
std::_Rb_tree::_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	line:579	class:std::_Rb_tree	access:public	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
std::_Rb_tree::_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^        struct _Rb_tree_impl : public _Node_allocator$/;"	s	line:407	class:std::_Rb_tree	inherits:_Node_allocator	access:protected
std::_Rb_tree::_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^        struct _Rb_tree_impl<_Key_compare, true> : public _Node_allocator $/;"	s	line:428	class:std::_Rb_tree	inherits:_Node_allocator	access:protected
std::_Rb_tree::_Rb_tree_impl::_M_header	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_node_base 	_M_header;$/;"	m	line:410	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_M_header	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_node_base 	_M_header;$/;"	m	line:431	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_M_key_compare	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Key_compare		_M_key_compare;$/;"	m	line:409	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_M_key_compare	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Key_compare 		_M_key_compare;$/;"	m	line:430	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_M_node_count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  size_type 		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	line:411	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_M_node_count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  size_type 		_M_node_count; \/\/ Keeps track of size of tree.$/;"	m	line:432	struct:std::_Rb_tree::_Rb_tree_impl	access:public
std::_Rb_tree::_Rb_tree_impl::_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),$/;"	f	line:413	struct:std::_Rb_tree::_Rb_tree_impl	access:public	signature:(const _Node_allocator& __a = _Node_allocator(), const _Key_compare& __comp = _Key_compare())
std::_Rb_tree::_Rb_tree_impl::_Rb_tree_impl	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^	  _Rb_tree_impl(const _Node_allocator& __a = _Node_allocator(),$/;"	f	line:434	struct:std::_Rb_tree::_Rb_tree_impl	access:public	signature:(const _Node_allocator& __a = _Node_allocator(), const _Key_compare& __comp = _Key_compare())
std::_Rb_tree::_Rb_tree_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val> _Rb_tree_node;$/;"	t	line:337	class:std::_Rb_tree	access:protected
std::_Rb_tree::_S_key	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_key(_Const_Base_ptr __x)$/;"	f	line:521	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_key	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_key(_Const_Link_type __x)$/;"	f	line:497	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
std::_Rb_tree::_S_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_left(_Base_ptr __x)$/;"	f	line:501	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
std::_Rb_tree::_S_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_left(_Const_Base_ptr __x)$/;"	f	line:505	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_maximum(_Base_ptr __x)$/;"	f	line:533	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
std::_Rb_tree::_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_maximum(_Const_Base_ptr __x)$/;"	f	line:537	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_minimum(_Base_ptr __x)$/;"	f	line:525	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
std::_Rb_tree::_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_minimum(_Const_Base_ptr __x)$/;"	f	line:529	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_right(_Base_ptr __x)$/;"	f	line:509	class:std::_Rb_tree	access:protected	signature:(_Base_ptr __x)
std::_Rb_tree::_S_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_right(_Const_Base_ptr __x)$/;"	f	line:513	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_value	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_value(_Const_Base_ptr __x)$/;"	f	line:517	class:std::_Rb_tree	access:protected	signature:(_Const_Base_ptr __x)
std::_Rb_tree::_S_value	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _S_value(_Const_Link_type __x)$/;"	f	line:493	class:std::_Rb_tree	access:protected	signature:(_Const_Link_type __x)
std::_Rb_tree::__rb_verify	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Rb_tree<_Key,_Val,_KeyOfValue,_Compare,_Alloc>::__rb_verify() const$/;"	f	line:1520	class:std::_Rb_tree	signature:() const
std::_Rb_tree::allocator_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Alloc allocator_type;$/;"	t	line:350	class:std::_Rb_tree	access:public
std::_Rb_tree::begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      begin() const$/;"	f	line:610	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::begin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      begin()$/;"	f	line:603	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::clear	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      clear()$/;"	f	line:709	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<value_type> const_iterator;$/;"	t	line:542	class:std::_Rb_tree	access:public
std::_Rb_tree::const_pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const value_type* const_pointer;$/;"	t	line:343	class:std::_Rb_tree	access:public
std::_Rb_tree::const_reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const value_type& const_reference;$/;"	t	line:345	class:std::_Rb_tree	access:public
std::_Rb_tree::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<const_iterator> const_reverse_iterator;$/;"	t	line:545	class:std::_Rb_tree	access:public
std::_Rb_tree::count	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    count(const _Key& __k) const$/;"	f	line:1413	class:std::_Rb_tree	signature:(const _Key& __k) const
std::_Rb_tree::difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t difference_type;$/;"	t	line:349	class:std::_Rb_tree	access:public
std::_Rb_tree::empty	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      empty() const$/;"	f	line:644	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      end() const$/;"	f	line:621	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::end	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      end()$/;"	f	line:617	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::equal_range	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    equal_range(const _Key& __k) const$/;"	f	line:1509	class:std::_Rb_tree	signature:(const _Key& __k) const
std::_Rb_tree::equal_range	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    equal_range(const _Key& __k)$/;"	f	line:1499	class:std::_Rb_tree	signature:(const _Key& __k)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const _Key& __x)$/;"	f	line:1270	class:std::_Rb_tree	signature:(const _Key& __x)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const _Key* __first, const _Key* __last)$/;"	f	line:1360	class:std::_Rb_tree	signature:(const _Key* __first, const _Key* __last)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const_iterator __first, const_iterator __last)$/;"	f	line:1347	class:std::_Rb_tree	signature:(const_iterator __first, const_iterator __last)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(const_iterator __position)$/;"	f	line:1256	class:std::_Rb_tree	signature:(const_iterator __position)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(iterator __first, iterator __last)$/;"	f	line:1334	class:std::_Rb_tree	signature:(iterator __first, iterator __last)
std::_Rb_tree::erase	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    erase(iterator __position)$/;"	f	line:1242	class:std::_Rb_tree	signature:(iterator __position)
std::_Rb_tree::find	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    find(const _Key& __k) const$/;"	f	line:1391	class:std::_Rb_tree	signature:(const _Key& __k) const
std::_Rb_tree::find	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    find(const _Key& __k)$/;"	f	line:1370	class:std::_Rb_tree	signature:(const _Key& __k)
std::_Rb_tree::get_allocator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      get_allocator() const$/;"	f	line:361	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<value_type>       iterator;$/;"	t	line:541	class:std::_Rb_tree	access:public
std::_Rb_tree::key_comp	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      key_comp() const$/;"	f	line:599	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::key_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Key key_type;$/;"	t	line:340	class:std::_Rb_tree	access:public
std::_Rb_tree::lower_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k) const$/;"	f	line:1442	class:std::_Rb_tree	signature:(const _Key& __k) const
std::_Rb_tree::lower_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    lower_bound(const _Key& __k)$/;"	f	line:1424	class:std::_Rb_tree	signature:(const _Key& __k)
std::_Rb_tree::max_size	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      max_size() const$/;"	f	line:652	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::operator =	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)$/;"	f	line:810	class:std::_Rb_tree	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x)
std::_Rb_tree::pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef value_type* pointer;$/;"	t	line:342	class:std::_Rb_tree	access:public
std::_Rb_tree::rbegin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rbegin() const$/;"	f	line:632	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::rbegin	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rbegin()$/;"	f	line:628	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef value_type& reference;$/;"	t	line:344	class:std::_Rb_tree	access:public
std::_Rb_tree::rend	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rend() const$/;"	f	line:640	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::rend	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      rend()$/;"	f	line:636	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef std::reverse_iterator<iterator>       reverse_iterator;$/;"	t	line:544	class:std::_Rb_tree	access:public
std::_Rb_tree::size	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      size() const$/;"	f	line:648	class:std::_Rb_tree	access:public	signature:() const
std::_Rb_tree::size_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef size_t size_type;$/;"	t	line:348	class:std::_Rb_tree	access:public
std::_Rb_tree::swap	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)$/;"	f	line:921	class:std::_Rb_tree	signature:(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)
std::_Rb_tree::upper_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k) const$/;"	f	line:1478	class:std::_Rb_tree	signature:(const _Key& __k) const
std::_Rb_tree::upper_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k)$/;"	f	line:1460	class:std::_Rb_tree	signature:(const _Key& __k)
std::_Rb_tree::value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Val value_type;$/;"	t	line:341	class:std::_Rb_tree	access:public
std::_Rb_tree::~_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      ~_Rb_tree()$/;"	f	line:591	class:std::_Rb_tree	access:public	signature:()
std::_Rb_tree_color	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	g	line:91	namespace:std
std::_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_const_iterator$/;"	s	line:222	namespace:std
std::_Rb_tree_const_iterator::_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Const_Base_ptr _Base_ptr;$/;"	t	line:234	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	line:235	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::_M_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	line:293	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator()$/;"	f	line:237	struct:std::_Rb_tree_const_iterator	access:public	signature:()
std::_Rb_tree_const_iterator::_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(_Link_type __x)$/;"	f	line:241	struct:std::_Rb_tree_const_iterator	access:public	signature:(_Link_type __x)
std::_Rb_tree_const_iterator::_Rb_tree_const_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_const_iterator(const iterator& __it)$/;"	f	line:244	struct:std::_Rb_tree_const_iterator	access:public	signature:(const iterator& __it)
std::_Rb_tree_const_iterator::_Self	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_const_iterator<_Tp>        _Self;$/;"	t	line:233	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	line:231	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp> iterator;$/;"	t	line:228	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	line:230	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	line:290	struct:std::_Rb_tree_const_iterator	access:public	signature:(const _Self& __x) const
std::_Rb_tree_const_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator*() const$/;"	f	line:248	struct:std::_Rb_tree_const_iterator	access:public	signature:() const
std::_Rb_tree_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++()$/;"	f	line:256	struct:std::_Rb_tree_const_iterator	access:public	signature:()
std::_Rb_tree_const_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	line:263	struct:std::_Rb_tree_const_iterator	access:public	signature:(int)
std::_Rb_tree_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--()$/;"	f	line:271	struct:std::_Rb_tree_const_iterator	access:public	signature:()
std::_Rb_tree_const_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	line:278	struct:std::_Rb_tree_const_iterator	access:public	signature:(int)
std::_Rb_tree_const_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator->() const$/;"	f	line:252	struct:std::_Rb_tree_const_iterator	access:public	signature:() const
std::_Rb_tree_const_iterator::operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	line:286	struct:std::_Rb_tree_const_iterator	access:public	signature:(const _Self& __x) const
std::_Rb_tree_const_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Tp* pointer;$/;"	t	line:226	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef const _Tp& reference;$/;"	t	line:225	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_const_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp        value_type;$/;"	t	line:224	struct:std::_Rb_tree_const_iterator	access:public
std::_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_iterator$/;"	s	line:152	namespace:std
std::_Rb_tree_iterator::_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node_base::_Base_ptr _Base_ptr;$/;"	t	line:162	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Tp>*           _Link_type;$/;"	t	line:163	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::_M_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Base_ptr _M_node;$/;"	m	line:218	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_iterator()$/;"	f	line:165	struct:std::_Rb_tree_iterator	access:public	signature:()
std::_Rb_tree_iterator::_Rb_tree_iterator	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Rb_tree_iterator(_Link_type __x)$/;"	f	line:169	struct:std::_Rb_tree_iterator	access:public	signature:(_Link_type __x)
std::_Rb_tree_iterator::_Self	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_iterator<_Tp>        _Self;$/;"	t	line:161	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef ptrdiff_t                  difference_type;$/;"	t	line:159	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef bidirectional_iterator_tag iterator_category;$/;"	t	line:158	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator!=(const _Self& __x) const$/;"	f	line:215	struct:std::_Rb_tree_iterator	access:public	signature:(const _Self& __x) const
std::_Rb_tree_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator*() const$/;"	f	line:173	struct:std::_Rb_tree_iterator	access:public	signature:() const
std::_Rb_tree_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++()$/;"	f	line:181	struct:std::_Rb_tree_iterator	access:public	signature:()
std::_Rb_tree_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator++(int)$/;"	f	line:188	struct:std::_Rb_tree_iterator	access:public	signature:(int)
std::_Rb_tree_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--()$/;"	f	line:196	struct:std::_Rb_tree_iterator	access:public	signature:()
std::_Rb_tree_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator--(int)$/;"	f	line:203	struct:std::_Rb_tree_iterator	access:public	signature:(int)
std::_Rb_tree_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator->() const$/;"	f	line:177	struct:std::_Rb_tree_iterator	access:public	signature:() const
std::_Rb_tree_iterator::operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      operator==(const _Self& __x) const$/;"	f	line:211	struct:std::_Rb_tree_iterator	access:public	signature:(const _Self& __x) const
std::_Rb_tree_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp* pointer;$/;"	t	line:156	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp& reference;$/;"	t	line:155	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp  value_type;$/;"	t	line:154	struct:std::_Rb_tree_iterator	access:public
std::_Rb_tree_node	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    struct _Rb_tree_node : public _Rb_tree_node_base$/;"	s	line:133	namespace:std	inherits:_Rb_tree_node_base
std::_Rb_tree_node::_Link_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Rb_tree_node<_Val>* _Link_type;$/;"	t	line:135	struct:std::_Rb_tree_node	access:public
std::_Rb_tree_node::_M_value_field	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      _Val _M_value_field;$/;"	m	line:136	struct:std::_Rb_tree_node	access:public
std::_Rb_tree_node_base	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  struct _Rb_tree_node_base$/;"	s	line:93	namespace:std
std::_Rb_tree_node_base::_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    typedef _Rb_tree_node_base* _Base_ptr;$/;"	t	line:95	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_Const_Base_ptr	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    typedef const _Rb_tree_node_base* _Const_Base_ptr;$/;"	t	line:96	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_M_color	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Rb_tree_color	_M_color;$/;"	m	line:98	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_M_left	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_left;$/;"	m	line:100	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_M_parent	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_parent;$/;"	m	line:99	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_M_right	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _Base_ptr		_M_right;$/;"	m	line:101	struct:std::_Rb_tree_node_base	access:public
std::_Rb_tree_node_base::_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_maximum(_Base_ptr __x)$/;"	f	line:118	struct:std::_Rb_tree_node_base	access:public	signature:(_Base_ptr __x)
std::_Rb_tree_node_base::_S_maximum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_maximum(_Const_Base_ptr __x)$/;"	f	line:125	struct:std::_Rb_tree_node_base	access:public	signature:(_Const_Base_ptr __x)
std::_Rb_tree_node_base::_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_minimum(_Base_ptr __x)$/;"	f	line:104	struct:std::_Rb_tree_node_base	access:public	signature:(_Base_ptr __x)
std::_Rb_tree_node_base::_S_minimum	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    _S_minimum(_Const_Base_ptr __x)$/;"	f	line:111	struct:std::_Rb_tree_node_base	access:public	signature:(_Const_Base_ptr __x)
std::_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _RefFunClos<_Expr, _Dom>$/;"	s	line:445	namespace:std	inherits:_FunBase
std::_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _RefFunClos<_ValArray, _Tp>$/;"	s	line:457	namespace:std	inherits:_FunBase
std::_RefFunClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;$/;"	t	line:448	struct:std::_RefFunClos	access:public
std::_RefFunClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;$/;"	t	line:460	struct:std::_RefFunClos	access:public
std::_RefFunClos::_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _RefFunClos(const _Dom& __e, _Tp __f(const _Tp&))$/;"	f	line:452	struct:std::_RefFunClos	access:public	signature:(const _Dom& __e, _Tp __f(const _Tp&))
std::_RefFunClos::_RefFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _RefFunClos(const valarray<_Tp>& __v, _Tp __f(const _Tp&))$/;"	f	line:463	struct:std::_RefFunClos	access:public	signature:(const valarray<_Tp>& __v, _Tp __f(const _Tp&))
std::_RefFunClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	line:450	struct:std::_RefFunClos	access:public
std::_RefFunClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:461	struct:std::_RefFunClos	access:public
std::_RefFunClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:449	struct:std::_RefFunClos	access:public
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)() const)$/;"	f	line:718	namespace:std	signature:(_Tp::*__f) const
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)())$/;"	f	line:713	namespace:std	signature:(_Tp::*__f)
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	line:738	namespace:std	signature:(_Tp::*__f) const
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun(_Ret (_Tp::*__f)(_Arg))$/;"	f	line:733	namespace:std	signature:(_Tp::*__f)
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)() const)$/;"	f	line:728	namespace:std	signature:(_Tp::*__f) const
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)())$/;"	f	line:723	namespace:std	signature:(_Tp::*__f)
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)$/;"	f	line:748	namespace:std	signature:(_Tp::*__f) const
std::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    mem_fun_ref(_Ret (_Tp::*__f)(_Arg))$/;"	f	line:743	namespace:std	signature:(_Tp::*__f)
std::_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _SBase$/;"	c	line:668	namespace:std
std::_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _SBase<_Array<_Tp> >$/;"	c	line:690	namespace:std
std::_SBase::_M_array	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Array<_Tp> _M_array;$/;"	m	line:708	class:std::_SBase	access:private
std::_SBase::_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Dom& _M_expr;$/;"	m	line:685	class:std::_SBase	access:private
std::_SBase::_M_size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const size_t _M_size;$/;"	m	line:709	class:std::_SBase	access:private
std::_SBase::_M_slice	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const slice& _M_slice;$/;"	m	line:686	class:std::_SBase	access:private
std::_SBase::_M_stride	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const size_t _M_stride;$/;"	m	line:710	class:std::_SBase	access:private
std::_SBase::_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SBase (_Array<_Tp> __a, const slice& __s)$/;"	f	line:695	class:std::_SBase	access:public	signature:(_Array<_Tp> __a, const slice& __s)
std::_SBase::_SBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SBase (const _Dom& __e, const slice& __s)$/;"	f	line:673	class:std::_SBase	access:public	signature:(const _Dom& __e, const slice& __s)
std::_SBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      operator[] (size_t __i) const$/;"	f	line:677	class:std::_SBase	access:public	signature:(size_t __i) const
std::_SBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      operator[] (size_t __i) const$/;"	f	line:700	class:std::_SBase	access:public	signature:(size_t __i) const
std::_SBase::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size() const$/;"	f	line:681	class:std::_SBase	access:public	signature:() const
std::_SBase::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size() const$/;"	f	line:704	class:std::_SBase	access:public	signature:() const
std::_SBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:693	class:std::_SBase	access:public
std::_SBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:671	class:std::_SBase	access:public
std::_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _SClos<_Expr, _Dom>$/;"	s	line:714	namespace:std	inherits:_SBase
std::_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _SClos<_ValArray, _Tp>$/;"	s	line:724	namespace:std	inherits:_SBase
std::_SClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef  _SBase<_Array<_Tp> > _Base;$/;"	t	line:727	struct:std::_SClos	access:public
std::_SClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _SBase<_Dom> _Base;$/;"	t	line:717	struct:std::_SClos	access:public
std::_SClos::_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SClos (_Array<_Tp> __a, const slice& __s) : _Base (__a, __s) {}$/;"	f	line:730	struct:std::_SClos	access:public	signature:(_Array<_Tp> __a, const slice& __s)
std::_SClos::_SClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _SClos (const _Dom& __e, const slice& __s) : _Base (__e, __s) {}$/;"	f	line:720	struct:std::_SClos	access:public	signature:(const _Dom& __e, const slice& __s)
std::_SClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:728	struct:std::_SClos	access:public
std::_SClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:718	struct:std::_SClos	access:public
std::_S_adjustfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_adjustfield 	= _S_left | _S_right | _S_internal,$/;"	e	line:72	enum:std::_Ios_Fmtflags
std::_S_app	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_app 		= 1L << 0,$/;"	e	line:109	enum:std::_Ios_Openmode
std::_S_ate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ate 		= 1L << 1,$/;"	e	line:110	enum:std::_Ios_Openmode
std::_S_badbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_badbit 		= 1L << 0,$/;"	e	line:150	enum:std::_Ios_Iostate
std::_S_basefield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_basefield 	= _S_dec | _S_oct | _S_hex,$/;"	e	line:73	enum:std::_Ios_Fmtflags
std::_S_beg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_beg = 0,$/;"	e	line:186	enum:std::_Ios_Seekdir
std::_S_bin	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_bin 		= 1L << 2,$/;"	e	line:111	enum:std::_Ios_Openmode
std::_S_black	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	line:91	enum:std::_Rb_tree_color
std::_S_boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_boolalpha 	= 1L << 0,$/;"	e	line:57	enum:std::_Ios_Fmtflags
std::_S_chunk_size	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^  enum { _S_chunk_size = 7 };$/;"	e	line:3379	enum:std::__anon8
std::_S_cur	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_cur = SEEK_CUR,$/;"	e	line:187	enum:std::_Ios_Seekdir
std::_S_dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_dec 		= 1L << 1,$/;"	e	line:58	enum:std::_Ios_Fmtflags
std::_S_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_end = SEEK_END,$/;"	e	line:188	enum:std::_Ios_Seekdir
std::_S_eofbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_eofbit 		= 1L << 1,$/;"	e	line:151	enum:std::_Ios_Iostate
std::_S_failbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_failbit		= 1L << 2,$/;"	e	line:152	enum:std::_Ios_Iostate
std::_S_fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_fixed 		= 1L << 2,$/;"	e	line:59	enum:std::_Ios_Fmtflags
std::_S_floatfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_floatfield 	= _S_scientific | _S_fixed,$/;"	e	line:74	enum:std::_Ios_Fmtflags
std::_S_goodbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_goodbit 		= 0,$/;"	e	line:149	enum:std::_Ios_Iostate
std::_S_hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_hex 		= 1L << 3,$/;"	e	line:60	enum:std::_Ios_Fmtflags
std::_S_in	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_in 		= 1L << 3,$/;"	e	line:112	enum:std::_Ios_Openmode
std::_S_internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_internal 	= 1L << 4,$/;"	e	line:61	enum:std::_Ios_Fmtflags
std::_S_ios_fmtflags_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_fmtflags_end = 1L << 16 $/;"	e	line:75	enum:std::_Ios_Fmtflags
std::_S_ios_iostate_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_iostate_end = 1L << 16 $/;"	e	line:153	enum:std::_Ios_Iostate
std::_S_ios_openmode_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_openmode_end = 1L << 16 $/;"	e	line:115	enum:std::_Ios_Openmode
std::_S_ios_seekdir_end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_ios_seekdir_end = 1L << 16 $/;"	e	line:189	enum:std::_Ios_Seekdir
std::_S_left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_left 		= 1L << 5,$/;"	e	line:62	enum:std::_Ios_Fmtflags
std::_S_oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_oct 		= 1L << 6,$/;"	e	line:63	enum:std::_Ios_Fmtflags
std::_S_out	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_out 		= 1L << 4,$/;"	e	line:113	enum:std::_Ios_Openmode
std::_S_red	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^  enum _Rb_tree_color { _S_red = false, _S_black = true };$/;"	e	line:91	enum:std::_Rb_tree_color
std::_S_right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_right 		= 1L << 7,$/;"	e	line:64	enum:std::_Ios_Fmtflags
std::_S_scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_scientific 	= 1L << 8,$/;"	e	line:65	enum:std::_Ios_Fmtflags
std::_S_showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showbase 	= 1L << 9,$/;"	e	line:66	enum:std::_Ios_Fmtflags
std::_S_showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showpoint 	= 1L << 10,$/;"	e	line:67	enum:std::_Ios_Fmtflags
std::_S_showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_showpos 	= 1L << 11,$/;"	e	line:68	enum:std::_Ios_Fmtflags
std::_S_skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_skipws 	= 1L << 12,$/;"	e	line:69	enum:std::_Ios_Fmtflags
std::_S_threshold	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^  enum { _S_threshold = 16 };$/;"	e	line:2296	enum:std::__anon7
std::_S_trunc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_trunc 		= 1L << 5,$/;"	e	line:114	enum:std::_Ios_Openmode
std::_S_unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_unitbuf 	= 1L << 13,$/;"	e	line:70	enum:std::_Ios_Fmtflags
std::_S_uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _S_uppercase 	= 1L << 14,$/;"	e	line:71	enum:std::_Ios_Fmtflags
std::_S_word_bit	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  enum { _S_word_bit = int(CHAR_BIT * sizeof(_Bit_type)) };$/;"	e	line:68	enum:std::__anon9
std::_Select1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Select1st : public unary_function<_Pair,$/;"	s	line:542	namespace:std	inherits:unary_function
std::_Select1st::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	line:546	struct:std::_Select1st	access:public	signature:(_Pair& __x) const
std::_Select1st::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	line:550	struct:std::_Select1st	access:public	signature:(const _Pair& __x) const
std::_Select2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct _Select2nd : public unary_function<_Pair,$/;"	s	line:555	namespace:std	inherits:unary_function
std::_Select2nd::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Pair& __x) const$/;"	f	line:559	struct:std::_Select2nd	access:public	signature:(_Pair& __x) const
std::_Select2nd::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Pair& __x) const$/;"	f	line:563	struct:std::_Select2nd	access:public	signature:(const _Pair& __x) const
std::_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^    class _Temporary_buffer$/;"	c	line:77	namespace:std
std::_Temporary_buffer::_M_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      pointer    _M_buffer;$/;"	m	line:91	class:std::_Temporary_buffer	access:protected
std::_Temporary_buffer::_M_initialize_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp& __val, __false_type)$/;"	f	line:97	class:std::_Temporary_buffer	access:protected	signature:(const _Tp& __val, __false_type)
std::_Temporary_buffer::_M_initialize_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      _M_initialize_buffer(const _Tp&, __true_type) { }$/;"	f	line:94	class:std::_Temporary_buffer	access:protected	signature:(const _Tp&, __true_type)
std::_Temporary_buffer::_M_len	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size_type  _M_len;$/;"	m	line:90	class:std::_Temporary_buffer	access:protected
std::_Temporary_buffer::_M_original_len	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size_type  _M_original_len;$/;"	m	line:89	class:std::_Temporary_buffer	access:protected
std::_Temporary_buffer::_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:144	class:std::_Temporary_buffer	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::_Temporary_buffer::begin	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      begin()$/;"	f	line:113	class:std::_Temporary_buffer	access:public	signature:()
std::_Temporary_buffer::end	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      end()$/;"	f	line:118	class:std::_Temporary_buffer	access:public	signature:()
std::_Temporary_buffer::iterator	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef pointer     iterator;$/;"	t	line:85	class:std::_Temporary_buffer	access:public
std::_Temporary_buffer::pointer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef value_type* pointer;$/;"	t	line:84	class:std::_Temporary_buffer	access:public
std::_Temporary_buffer::requested_size	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      requested_size() const$/;"	f	line:108	class:std::_Temporary_buffer	access:public	signature:() const
std::_Temporary_buffer::size	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      size() const$/;"	f	line:103	class:std::_Temporary_buffer	access:public	signature:() const
std::_Temporary_buffer::size_type	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef ptrdiff_t   size_type;$/;"	t	line:86	class:std::_Temporary_buffer	access:public
std::_Temporary_buffer::value_type	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef _Tp         value_type;$/;"	t	line:83	class:std::_Temporary_buffer	access:public
std::_Temporary_buffer::~_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      ~_Temporary_buffer()$/;"	f	line:127	class:std::_Temporary_buffer	access:public	signature:()
std::_UnBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    class _UnBase$/;"	c	line:472	namespace:std
std::_UnBase::_M_expr	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      const _Arg& _M_expr;$/;"	m	line:486	class:std::_UnBase	access:private
std::_UnBase::_UnBase	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnBase(const _Arg& __e) : _M_expr(__e) {}$/;"	f	line:478	class:std::_UnBase	access:public	signature:(const _Arg& __e)
std::_UnBase::_Vt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Arg::value_type _Vt;$/;"	t	line:475	class:std::_UnBase	access:public
std::_UnBase::operator []	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      value_type operator[](size_t __i) const$/;"	f	line:480	class:std::_UnBase	access:public	signature:(size_t __i) const
std::_UnBase::size	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      size_t size() const { return _M_expr.size(); }$/;"	f	line:483	class:std::_UnBase	access:public	signature:() const
std::_UnBase::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:476	class:std::_UnBase	access:public
std::_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _Expr, _Dom>$/;"	s	line:490	namespace:std	inherits:_UnBase
std::_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _UnClos<_Oper, _ValArray, _Tp>$/;"	s	line:501	namespace:std	inherits:_UnBase
std::_UnClos::_Arg	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Dom _Arg;$/;"	t	line:493	struct:std::_UnClos	access:public
std::_UnClos::_Arg	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef valarray<_Tp> _Arg;$/;"	t	line:504	struct:std::_UnClos	access:public
std::_UnClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, _Dom> _Base;$/;"	t	line:494	struct:std::_UnClos	access:public
std::_UnClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _UnBase<_Oper, valarray<_Tp> > _Base;$/;"	t	line:505	struct:std::_UnClos	access:public
std::_UnClos::_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnClos(const _Arg& __e) : _Base(__e) {}$/;"	f	line:497	struct:std::_UnClos	access:public	signature:(const _Arg& __e)
std::_UnClos::_UnClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _UnClos(const _Arg& __e) : _Base(__e) {}$/;"	f	line:508	struct:std::_UnClos	access:public	signature:(const _Arg& __e)
std::_UnClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:495	struct:std::_UnClos	access:public
std::_UnClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:506	struct:std::_UnClos	access:public
std::_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _ValFunClos<_Expr,_Dom> : _FunBase<_Dom, typename _Dom::value_type>$/;"	s	line:426	namespace:std	inherits:_FunBase
std::_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct _ValFunClos<_ValArray,_Tp> : _FunBase<valarray<_Tp>, _Tp>$/;"	s	line:436	namespace:std	inherits:_FunBase
std::_ValFunClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<_Dom, typename _Dom::value_type> _Base;$/;"	t	line:428	struct:std::_ValFunClos	access:public
std::_ValFunClos::_Base	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _FunBase<valarray<_Tp>, _Tp> _Base;$/;"	t	line:438	struct:std::_ValFunClos	access:public
std::_ValFunClos::_Tp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef value_type _Tp;$/;"	t	line:430	struct:std::_ValFunClos	access:public
std::_ValFunClos::_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _ValFunClos(const _Dom& __e, _Tp __f(_Tp)) : _Base(__e, __f) {}$/;"	f	line:432	struct:std::_ValFunClos	access:public	signature:(const _Dom& __e, _Tp __f(_Tp))
std::_ValFunClos::_ValFunClos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _ValFunClos(const valarray<_Tp>& __v, _Tp __f(_Tp)) : _Base(__v, __f) {}$/;"	f	line:441	struct:std::_ValFunClos	access:public	signature:(const valarray<_Tp>& __v, _Tp __f(_Tp))
std::_ValFunClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:439	struct:std::_ValFunClos	access:public
std::_ValFunClos::value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:429	struct:std::_ValFunClos	access:public
std::_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    struct _Vector_base$/;"	s	line:77	namespace:std
std::_Vector_base::_M_allocate	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_allocate(size_t __n)$/;"	f	line:127	struct:std::_Vector_base	access:public	signature:(size_t __n)
std::_Vector_base::_M_deallocate	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_deallocate(_Tp* __p, size_t __n)$/;"	f	line:131	struct:std::_Vector_base	access:public	signature:(_Tp* __p, size_t __n)
std::_Vector_base::_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_get_Tp_allocator() const$/;"	f	line:100	struct:std::_Vector_base	access:public	signature:() const
std::_Vector_base::_M_get_Tp_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_get_Tp_allocator()$/;"	f	line:96	struct:std::_Vector_base	access:public	signature:()
std::_Vector_base::_M_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_impl _M_impl;$/;"	m	line:124	struct:std::_Vector_base	access:public
std::_Vector_base::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Alloc::template rebind<_Tp>::other _Tp_alloc_type;$/;"	t	line:79	struct:std::_Vector_base	access:public
std::_Vector_base::_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_base(const allocator_type& __a)$/;"	f	line:107	struct:std::_Vector_base	access:public	signature:(const allocator_type& __a)
std::_Vector_base::_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _Vector_base(size_t __n, const allocator_type& __a)$/;"	f	line:111	struct:std::_Vector_base	access:public	signature:(size_t __n, const allocator_type& __a)
std::_Vector_base::_Vector_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      struct _Vector_impl $/;"	s	line:81	struct:std::_Vector_base	inherits:_Tp_alloc_type	access:public
std::_Vector_base::_Vector_impl::_M_end_of_storage	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_end_of_storage;$/;"	m	line:86	struct:std::_Vector_base::_Vector_impl	access:public
std::_Vector_base::_Vector_impl::_M_finish	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_finish;$/;"	m	line:85	struct:std::_Vector_base::_Vector_impl	access:public
std::_Vector_base::_Vector_impl::_M_start	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Tp*           _M_start;$/;"	m	line:84	struct:std::_Vector_base::_Vector_impl	access:public
std::_Vector_base::_Vector_impl::_Vector_impl	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^	_Vector_impl(_Tp_alloc_type const& __a)$/;"	f	line:87	struct:std::_Vector_base::_Vector_impl	access:public	signature:(_Tp_alloc_type const& __a)
std::_Vector_base::allocator_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Alloc allocator_type;$/;"	t	line:93	struct:std::_Vector_base	access:public
std::_Vector_base::get_allocator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      get_allocator() const$/;"	f	line:104	struct:std::_Vector_base	access:public	signature:() const
std::_Vector_base::~_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      ~_Vector_base()$/;"	f	line:119	struct:std::_Vector_base	access:public	signature:()
std::__abs	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __abs$/;"	s	line:67	namespace:std
std::__abs::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:70	struct:std::__abs	access:public	signature:(const _Tp& __t) const
std::__acos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __acos$/;"	s	line:81	namespace:std
std::__acos::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:84	struct:std::__acos	access:public	signature:(const _Tp& __t) const
std::__adjust_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:209	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __len, _Tp __value)
std::__adjust_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:272	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __len, _Tp __value, _Compare __comp)
std::__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_BidirectionalIterator& __i, _Distance __n,$/;"	f	line:134	namespace:std	signature:(_BidirectionalIterator& __i, _Distance __n, bidirectional_iterator_tag)
std::__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)$/;"	f	line:124	namespace:std	signature:(_InputIterator& __i, _Distance __n, input_iterator_tag)
std::__advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __advance(_RandomAccessIterator& __i, _Distance __n,$/;"	f	line:150	namespace:std	signature:(_RandomAccessIterator& __i, _Distance __n, random_access_iterator_tag)
std::__alloc_swap	/home/damian/.vim/tags/cpp_src/allocator.h	/^    struct __alloc_swap$/;"	s	line:146	namespace:std
std::__alloc_swap	/home/damian/.vim/tags/cpp_src/allocator.h	/^    struct __alloc_swap<_Alloc, false>$/;"	s	line:150	namespace:std
std::__alloc_swap::_S_do_it	/home/damian/.vim/tags/cpp_src/allocator.h	/^      _S_do_it(_Alloc& __one, _Alloc& __two)$/;"	f	line:153	struct:std::__alloc_swap	access:public	signature:(_Alloc& __one, _Alloc& __two)
std::__alloc_swap::_S_do_it	/home/damian/.vim/tags/cpp_src/allocator.h	/^    { static void _S_do_it(_Alloc&, _Alloc&) { } };$/;"	f	line:147	struct:std::__alloc_swap	access:public	signature:(_Alloc&, _Alloc&)
std::__asin	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __asin$/;"	s	line:102	namespace:std
std::__asin::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:105	struct:std::__asin	access:public	signature:(const _Tp& __t) const
std::__atan	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __atan$/;"	s	line:123	namespace:std
std::__atan2	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __atan2$/;"	s	line:323	namespace:std
std::__atan2::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:326	struct:std::__atan2	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__atan::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:126	struct:std::__atan	access:public	signature:(const _Tp& __t) const
std::__bitwise_and	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_and$/;"	s	line:232	namespace:std
std::__bitwise_and::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:235	struct:std::__bitwise_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__bitwise_not	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_not$/;"	s	line:183	namespace:std
std::__bitwise_not::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:186	struct:std::__bitwise_not	access:public	signature:(const _Tp& __t) const
std::__bitwise_or	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_or$/;"	s	line:239	namespace:std
std::__bitwise_or::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:242	struct:std::__bitwise_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__bitwise_xor	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __bitwise_xor$/;"	s	line:225	namespace:std
std::__bitwise_xor::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:228	struct:std::__bitwise_xor	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__check_facet	/home/damian/.vim/tags/cpp_src/localefwd.h	/^    __check_facet(const _Facet* __f)$/;"	f	line:188	namespace:std	signature:(const _Facet* __f)
std::__chunk_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:3383	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Distance __chunk_size)
std::__chunk_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __chunk_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:3397	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Distance __chunk_size, _Compare __comp)
std::__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class __codecvt_abstract_base$/;"	c	line:72	namespace:std	inherits:locale::facet,codecvt_base
std::__codecvt_abstract_base::__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }$/;"	f	line:228	class:std::__codecvt_abstract_base	access:protected	signature:(size_t __refs = 0)
std::__codecvt_abstract_base::always_noconv	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      always_noconv() const throw()$/;"	f	line:214	class:std::__codecvt_abstract_base	access:public	signature:() const
std::__codecvt_abstract_base::encoding	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      encoding() const throw()$/;"	f	line:210	class:std::__codecvt_abstract_base	access:public	signature:() const
std::__codecvt_abstract_base::extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	line:79	class:std::__codecvt_abstract_base	access:public
std::__codecvt_abstract_base::in	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      in(state_type& __state, const extern_type* __from,$/;"	f	line:200	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __from_end, const extern_type*& __from_next, intern_type* __to, intern_type* __to_end, intern_type*& __to_next) const
std::__codecvt_abstract_base::intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	line:78	class:std::__codecvt_abstract_base	access:public
std::__codecvt_abstract_base::length	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      length(state_type& __state, const extern_type* __from,$/;"	f	line:218	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const extern_type* __from, const extern_type* __end, size_t __max) const
std::__codecvt_abstract_base::max_length	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      max_length() const throw()$/;"	f	line:223	class:std::__codecvt_abstract_base	access:public	signature:() const
std::__codecvt_abstract_base::out	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      out(state_type& __state, const intern_type* __from,$/;"	f	line:120	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, const intern_type* __from, const intern_type* __from_end, const intern_type*& __from_next, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const
std::__codecvt_abstract_base::result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	line:77	class:std::__codecvt_abstract_base	access:public
std::__codecvt_abstract_base::state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	line:80	class:std::__codecvt_abstract_base	access:public
std::__codecvt_abstract_base::unshift	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,$/;"	f	line:159	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const
std::__codecvt_abstract_base::~__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~__codecvt_abstract_base() { }$/;"	f	line:231	class:std::__codecvt_abstract_base	access:protected	signature:()
std::__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy$/;"	s	line:261	namespace:std
std::__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy<_BoolType, random_access_iterator_tag>$/;"	s	line:274	namespace:std
std::__copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy<true, random_access_iterator_tag>$/;"	s	line:292	namespace:std
std::__copy::copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(_II __first, _II __last, _OI __result)$/;"	f	line:265	struct:std::__copy	access:public	signature:(_II __first, _II __last, _OI __result)
std::__copy::copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(_II __first, _II __last, _OI __result)$/;"	f	line:278	struct:std::__copy	access:public	signature:(_II __first, _II __last, _OI __result)
std::__copy::copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        copy(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	line:296	struct:std::__copy	access:public	signature:(const _Tp* __first, const _Tp* __last, _Tp* __result)
std::__copy_aux	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    __copy_aux(_II __first, _II __last, _OI __result)$/;"	f	line:305	namespace:std	signature:(_II __first, _II __last, _OI __result)
std::__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(_CharT* __first, _CharT* __last,$/;"	f	line:301	namespace:std	signature:(_CharT* __first, _CharT* __last, ostreambuf_iterator<_CharT> __result)
std::__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(const _CharT* __first, const _CharT* __last,$/;"	f	line:313	namespace:std	signature:(const _CharT* __first, const _CharT* __last, ostreambuf_iterator<_CharT> __result)
std::__copy_aux	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    __copy_aux(istreambuf_iterator<_CharT> __first,$/;"	f	line:325	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT* __result)
std::__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward$/;"	s	line:412	namespace:std
std::__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward<_BoolType, random_access_iterator_tag>$/;"	s	line:425	namespace:std
std::__copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward<true, random_access_iterator_tag>$/;"	s	line:439	namespace:std
std::__copy_backward::__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:416	struct:std::__copy_backward	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward::__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:429	struct:std::__copy_backward	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward::__copy_b	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b(const _Tp* __first, const _Tp* __last, _Tp* __result)$/;"	f	line:443	struct:std::__copy_backward	access:public	signature:(const _Tp* __first, const _Tp* __last, _Tp* __result)
std::__copy_backward_aux	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    __copy_backward_aux(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:453	namespace:std	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal$/;"	s	line:469	namespace:std
std::__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<false, true>$/;"	s	line:488	namespace:std
std::__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, false>$/;"	s	line:478	namespace:std
std::__copy_backward_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_backward_normal<true, true>$/;"	s	line:498	namespace:std
std::__copy_backward_normal::__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:473	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward_normal::__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:482	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward_normal::__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:492	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_backward_normal::__copy_b_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_b_n(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:502	struct:std::__copy_backward_normal	access:public	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal$/;"	s	line:335	namespace:std
std::__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<false, true>$/;"	s	line:353	namespace:std
std::__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<true, false>$/;"	s	line:344	namespace:std
std::__copy_normal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __copy_normal<true, true>$/;"	s	line:362	namespace:std
std::__copy_normal::__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:339	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
std::__copy_normal::__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:348	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
std::__copy_normal::__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:357	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
std::__copy_normal::__copy_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        __copy_n(_II __first, _II __last, _OI __result)$/;"	f	line:366	struct:std::__copy_normal	access:public	signature:(_II __first, _II __last, _OI __result)
std::__cos	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __cos$/;"	s	line:74	namespace:std
std::__cos::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:77	struct:std::__cos	access:public	signature:(const _Tp& __t) const
std::__cosh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __cosh$/;"	s	line:88	namespace:std
std::__cosh::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:91	struct:std::__cosh	access:public	signature:(const _Tp& __t) const
std::__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class __ctype_abstract_base : public locale::facet, public ctype_base$/;"	c	line:146	namespace:std	inherits:locale::facet,ctype_base
std::__ctype_abstract_base::__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }$/;"	f	line:354	class:std::__ctype_abstract_base	access:protected	signature:(size_t __refs = 0)
std::__ctype_abstract_base::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT char_type;$/;"	t	line:151	class:std::__ctype_abstract_base	access:public
std::__ctype_abstract_base::is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      is(const char_type *__lo, const char_type *__hi, mask *__vec) const$/;"	f	line:181	class:std::__ctype_abstract_base	access:public	signature:(const char_type *__lo, const char_type *__hi, mask *__vec) const
std::__ctype_abstract_base::is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      is(mask __m, char_type __c) const$/;"	f	line:164	class:std::__ctype_abstract_base	access:public	signature:(mask __m, char_type __c) const
std::__ctype_abstract_base::narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	line:326	class:std::__ctype_abstract_base	access:public	signature:(char_type __c, char __dfault) const
std::__ctype_abstract_base::narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:348	class:std::__ctype_abstract_base	access:public	signature:(const char_type* __lo, const char_type* __hi, char __dfault, char *__to) const
std::__ctype_abstract_base::scan_is	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      scan_is(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	line:197	class:std::__ctype_abstract_base	access:public	signature:(mask __m, const char_type* __lo, const char_type* __hi) const
std::__ctype_abstract_base::scan_not	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      scan_not(mask __m, const char_type* __lo, const char_type* __hi) const$/;"	f	line:213	class:std::__ctype_abstract_base	access:public	signature:(mask __m, const char_type* __lo, const char_type* __hi) const
std::__ctype_abstract_base::tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	line:256	class:std::__ctype_abstract_base	access:public	signature:(char_type __c) const
std::__ctype_abstract_base::tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	line:271	class:std::__ctype_abstract_base	access:public	signature:(char_type* __lo, const char_type* __hi) const
std::__ctype_abstract_base::toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	line:242	class:std::__ctype_abstract_base	access:public	signature:(char_type *__lo, const char_type* __hi) const
std::__ctype_abstract_base::toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	line:227	class:std::__ctype_abstract_base	access:public	signature:(char_type __c) const
std::__ctype_abstract_base::widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	line:288	class:std::__ctype_abstract_base	access:public	signature:(char __c) const
std::__ctype_abstract_base::widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	line:307	class:std::__ctype_abstract_base	access:public	signature:(const char* __lo, const char* __hi, char_type* __to) const
std::__ctype_abstract_base::~__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~__ctype_abstract_base() { }$/;"	f	line:357	class:std::__ctype_abstract_base	access:protected	signature:()
std::__deque_buf_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^  __deque_buf_size(size_t __size)$/;"	f	line:84	namespace:std	signature:(size_t __size)
std::__destroy_aux	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:118	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, __false_type)
std::__destroy_aux	/home/damian/.vim/tags/cpp_src/stl_construct.h	/^    __destroy_aux(_ForwardIterator, _ForwardIterator, __true_type)$/;"	f	line:136	namespace:std	signature:(_ForwardIterator, _ForwardIterator, __true_type)
std::__distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __distance(_InputIterator __first, _InputIterator __last,$/;"	f	line:75	namespace:std	signature:(_InputIterator __first, _InputIterator __last, input_iterator_tag)
std::__distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:92	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
std::__divides	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __divides$/;"	s	line:211	namespace:std
std::__divides::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:214	struct:std::__divides	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__equal_to	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __equal_to$/;"	s	line:280	namespace:std
std::__equal_to::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:283	struct:std::__equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__exp	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __exp$/;"	s	line:137	namespace:std
std::__exp::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:140	struct:std::__exp	access:public	signature:(const _Tp& __t) const
std::__fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill$/;"	s	line:544	namespace:std
std::__fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill<true>$/;"	s	line:557	namespace:std
std::__fill::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:548	struct:std::__fill	access:public	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
std::__fill::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:561	struct:std::__fill	access:public	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
std::__fill_bvector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)$/;"	f	line:357	namespace:std	signature:(_Bit_iterator __first, _Bit_iterator __last, bool __x)
std::__fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill_n$/;"	s	line:620	namespace:std
std::__fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __fill_n<true>$/;"	s	line:633	namespace:std
std::__fill_n::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:624	struct:std::__fill_n	access:public	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
std::__fill_n::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:637	struct:std::__fill_n	access:public	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
std::__final_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2433	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::__final_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __final_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2452	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::__find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find(_InputIterator __first, _InputIterator __last,$/;"	f	line:170	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __val, input_iterator_tag)
std::__find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:200	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, const _Tp& __val, random_access_iterator_tag)
std::__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	line:5344	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, bidirectional_iterator_tag, bidirectional_iterator_tag)
std::__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_BidirectionalIterator1 __first1,$/;"	f	line:5377	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, bidirectional_iterator_tag, bidirectional_iterator_tag, _BinaryPredicate __comp)
std::__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5287	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag)
std::__find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5315	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, forward_iterator_tag, forward_iterator_tag, _BinaryPredicate __comp)
std::__find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:185	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred, input_iterator_tag)
std::__find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:252	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate __pred, random_access_iterator_tag)
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun$/;"	s	line:342	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__equal_to, _Tp>$/;"	s	line:391	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__greater, _Tp>$/;"	s	line:373	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__greater_equal, _Tp>$/;"	s	line:385	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__less, _Tp>$/;"	s	line:367	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__less_equal, _Tp>$/;"	s	line:379	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_and, _Tp>$/;"	s	line:355	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_not, _Tp>$/;"	s	line:349	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__logical_or, _Tp>$/;"	s	line:361	namespace:std
std::__fun	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^    struct __fun<__not_equal_to, _Tp>$/;"	s	line:397	namespace:std
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp result_type;$/;"	t	line:344	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:351	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:357	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:363	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:369	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:375	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:381	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:387	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:393	struct:std::__fun	access:public
std::__fun::result_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef bool result_type;$/;"	t	line:399	struct:std::__fun	access:public
std::__gcd	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)$/;"	f	line:1738	namespace:std	signature:(_EuclideanRingElement __m, _EuclideanRingElement __n)
std::__greater	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __greater$/;"	s	line:301	namespace:std
std::__greater::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:304	struct:std::__greater	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__greater_equal	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __greater_equal$/;"	s	line:315	namespace:std
std::__greater_equal::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:318	struct:std::__greater_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__heap_select	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	line:2472	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)
std::__heap_select	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __heap_select(_RandomAccessIterator __first,$/;"	f	line:2492	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)
std::__inplace_stable_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_partition(_ForwardIterator __first,$/;"	f	line:2119	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len)
std::__inplace_stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	line:3171	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::__inplace_stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __inplace_stable_sort(_RandomAccessIterator __first,$/;"	f	line:3194	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::__insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2346	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::__insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2373	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::__introselect	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:3945	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Size __depth_limit)
std::__introselect	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:3980	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Size __depth_limit, _Compare __comp)
std::__introsort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	line:2735	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Size __depth_limit)
std::__introsort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __introsort_loop(_RandomAccessIterator __first,$/;"	f	line:2771	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Size __depth_limit, _Compare __comp)
std::__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _Distance __n)$/;"	f	line:72	namespace:std	signature:(_RandomAccessIterator __first, _Distance __n)
std::__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:104	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:109	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _StrictWeakOrdering __comp)
std::__is_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __is_heap(_RandomAccessIterator __first, _StrictWeakOrdering __comp,$/;"	f	line:88	namespace:std	signature:(_RandomAccessIterator __first, _StrictWeakOrdering __comp, _Distance __n)
std::__iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __iter_swap$/;"	s	line:107	namespace:std
std::__iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    struct __iter_swap<true>$/;"	s	line:122	namespace:std
std::__iter_swap::iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:111	struct:std::__iter_swap	access:public	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
std::__iter_swap::iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:126	struct:std::__iter_swap	access:public	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
std::__iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    __iterator_category(const _Iter&)$/;"	f	line:164	namespace:std	signature:(const _Iter&)
std::__less	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __less$/;"	s	line:294	namespace:std
std::__less::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:297	struct:std::__less	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__less_equal	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __less_equal$/;"	s	line:308	namespace:std
std::__less_equal::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:311	struct:std::__less_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__lg	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __lg(_Size __n)$/;"	f	line:2512	namespace:std	signature:(_Size __n)
std::__log	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __log$/;"	s	line:144	namespace:std
std::__log10	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __log10$/;"	s	line:151	namespace:std
std::__log10::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:154	struct:std::__log10	access:public	signature:(const _Tp& __t) const
std::__log::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:147	struct:std::__log	access:public	signature:(const _Tp& __t) const
std::__logical_and	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_and$/;"	s	line:260	namespace:std
std::__logical_and::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:263	struct:std::__logical_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__logical_not	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_not$/;"	s	line:274	namespace:std
std::__logical_not::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x) const { return !__x; }$/;"	f	line:277	struct:std::__logical_not	access:public	signature:(const _Tp& __x) const
std::__logical_or	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __logical_or$/;"	s	line:267	namespace:std
std::__logical_or::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:270	struct:std::__logical_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__median	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c)$/;"	f	line:87	namespace:std	signature:(const _Tp& __a, const _Tp& __b, const _Tp& __c)
std::__median	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __median(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)$/;"	f	line:121	namespace:std	signature:(const _Tp& __a, const _Tp& __b, const _Tp& __c, _Compare __comp)
std::__merge_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	line:3582	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Pointer __buffer, _Distance __buffer_size)
std::__merge_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_adaptive(_BidirectionalIterator __first,$/;"	f	line:3641	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Pointer __buffer, _Distance __buffer_size, _Compare __comp)
std::__merge_backward	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_backward(_BidirectionalIterator1 __first1,$/;"	f	line:3467	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, _BidirectionalIterator3 __result)
std::__merge_backward	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_backward(_BidirectionalIterator1 __first1,$/;"	f	line:3506	namespace:std	signature:(_BidirectionalIterator1 __first1, _BidirectionalIterator1 __last1, _BidirectionalIterator2 __first2, _BidirectionalIterator2 __last2, _BidirectionalIterator3 __result, _Compare __comp)
std::__merge_sort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	line:3333	namespace:std	signature:(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _RandomAccessIterator2 __result, _Distance __step_size)
std::__merge_sort_loop	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_loop(_RandomAccessIterator1 __first,$/;"	f	line:3356	namespace:std	signature:(_RandomAccessIterator1 __first, _RandomAccessIterator1 __last, _RandomAccessIterator2 __result, _Distance __step_size, _Compare __comp)
std::__merge_sort_with_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	line:3411	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer)
std::__merge_sort_with_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_sort_with_buffer(_RandomAccessIterator __first,$/;"	f	line:3435	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Compare __comp)
std::__merge_without_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	line:3073	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2)
std::__merge_without_buffer	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __merge_without_buffer(_BidirectionalIterator __first,$/;"	f	line:3121	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Distance __len1, _Distance __len2, _Compare __comp)
std::__minus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __minus$/;"	s	line:197	namespace:std
std::__minus::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:200	struct:std::__minus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__modulus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __modulus$/;"	s	line:218	namespace:std
std::__modulus::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:221	struct:std::__modulus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __moneypunct_cache : public locale::facet$/;"	s	line:3548	namespace:std	inherits:locale::facet
std::__moneypunct_cache::_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:3570	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_atoms	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms[money_base::_S_end];$/;"	m	line:3568	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_curr_symbol;$/;"	m	line:3555	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_curr_symbol_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_curr_symbol_size;$/;"	m	line:3556	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	line:3553	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      int				_M_frac_digits;$/;"	m	line:3561	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	line:3550	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_grouping_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	line:3551	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_base::pattern	        _M_neg_format;$/;"	m	line:3563	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_negative_sign;$/;"	m	line:3559	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_negative_sign_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_negative_sign_size;$/;"	m	line:3560	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_base::pattern		_M_pos_format;$/;"	m	line:3562	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_positive_sign;$/;"	m	line:3557	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_positive_sign_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_positive_sign_size;$/;"	m	line:3558	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	line:3554	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::_M_use_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	line:3552	struct:std::__moneypunct_cache	access:public
std::__moneypunct_cache::__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __moneypunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:3572	struct:std::__moneypunct_cache	access:public	signature:(size_t __refs = 0)
std::__moneypunct_cache::~__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()$/;"	f	line:3597	class:std::__moneypunct_cache	signature:()
std::__multiplies	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __multiplies$/;"	s	line:204	namespace:std
std::__multiplies::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:207	struct:std::__multiplies	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__negate	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __negate$/;"	s	line:176	namespace:std
std::__negate::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:179	struct:std::__negate	access:public	signature:(const _Tp& __t) const
std::__not_equal_to	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __not_equal_to$/;"	s	line:287	namespace:std
std::__not_equal_to::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      bool operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:290	struct:std::__not_equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__num_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class __num_base$/;"	c	line:1541	namespace:std
std::__num_base::_S_atoms_in	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms_in;$/;"	m	line:1570	class:std::__num_base	access:public
std::__num_base::_S_atoms_out	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms_out;$/;"	m	line:1566	class:std::__num_base	access:public
std::__num_base::_S_iE	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iE = _S_izero + 20,$/;"	e	line:1580	enum:std::__num_base::__anon4
std::__num_base::_S_iX	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iX,$/;"	e	line:1577	enum:std::__num_base::__anon4
std::__num_base::_S_ie	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_ie = _S_izero + 14,$/;"	e	line:1579	enum:std::__num_base::__anon4
std::__num_base::_S_iend	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iend = 26$/;"	e	line:1581	enum:std::__num_base::__anon4
std::__num_base::_S_iminus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iminus,$/;"	e	line:1574	enum:std::__num_base::__anon4
std::__num_base::_S_iplus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_iplus,$/;"	e	line:1575	enum:std::__num_base::__anon4
std::__num_base::_S_ix	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_ix,$/;"	e	line:1576	enum:std::__num_base::__anon4
std::__num_base::_S_izero	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_izero,$/;"	e	line:1578	enum:std::__num_base::__anon4
std::__num_base::_S_oE	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oE = _S_oudigits + 14, \/\/ For scientific notation, 'E'$/;"	e	line:1557	enum:std::__num_base::__anon3
std::__num_base::_S_oX	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oX,$/;"	e	line:1551	enum:std::__num_base::__anon3
std::__num_base::_S_odigits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_odigits,$/;"	e	line:1552	enum:std::__num_base::__anon3
std::__num_base::_S_odigits_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_odigits_end = _S_odigits + 16,$/;"	e	line:1553	enum:std::__num_base::__anon3
std::__num_base::_S_oe	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oe = _S_odigits + 14,  \/\/ For scientific notation, 'e'$/;"	e	line:1556	enum:std::__num_base::__anon3
std::__num_base::_S_oend	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^	_S_oend = _S_oudigits_end$/;"	e	line:1558	enum:std::__num_base::__anon3
std::__num_base::_S_ominus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_ominus,$/;"	e	line:1548	enum:std::__num_base::__anon3
std::__num_base::_S_oplus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oplus,$/;"	e	line:1549	enum:std::__num_base::__anon3
std::__num_base::_S_oudigits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oudigits = _S_odigits_end,$/;"	e	line:1554	enum:std::__num_base::__anon3
std::__num_base::_S_oudigits_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_oudigits_end = _S_oudigits + 16,$/;"	e	line:1555	enum:std::__num_base::__anon3
std::__num_base::_S_ox	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _S_ox,$/;"	e	line:1550	enum:std::__num_base::__anon3
std::__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __numpunct_cache : public locale::facet$/;"	s	line:1591	namespace:std	inherits:locale::facet
std::__numpunct_cache::_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:1615	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_atoms_in	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms_in[__num_base::_S_iend];$/;"	m	line:1613	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_atoms_out	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_atoms_out[__num_base::_S_oend];$/;"	m	line:1607	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_decimal_point;$/;"	m	line:1600	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_falsename;$/;"	m	line:1598	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_falsename_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_falsename_size;$/;"	m	line:1599	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_grouping;$/;"	m	line:1593	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_grouping_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_grouping_size;$/;"	m	line:1594	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _CharT				_M_thousands_sep;$/;"	m	line:1601	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_truename;$/;"	m	line:1596	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_truename_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      size_t                            _M_truename_size;$/;"	m	line:1597	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::_M_use_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_use_grouping;$/;"	m	line:1595	struct:std::__numpunct_cache	access:public
std::__numpunct_cache::__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __numpunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:1617	struct:std::__numpunct_cache	access:public	signature:(size_t __refs = 0)
std::__numpunct_cache::~__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __numpunct_cache<_CharT>::~__numpunct_cache()$/;"	f	line:1638	class:std::__numpunct_cache	signature:()
std::__ostream_fill	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_fill(basic_ostream<_CharT, _Traits>& __out, streamsize __n)$/;"	f	line:59	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, streamsize __n)
std::__ostream_insert	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_insert(basic_ostream<_CharT, _Traits>& __out,$/;"	f	line:78	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s, streamsize __n)
std::__ostream_write	/home/damian/.vim/tags/cpp_src/ostream_insert.h	/^    __ostream_write(basic_ostream<_CharT, _Traits>& __out,$/;"	f	line:46	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s, streamsize __n)
std::__pad	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __pad$/;"	s	line:89	namespace:std
std::__partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:2055	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Predicate __pred, bidirectional_iterator_tag)
std::__partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2025	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, forward_iterator_tag)
std::__plus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __plus$/;"	s	line:190	namespace:std
std::__plus::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:193	struct:std::__plus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:232	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator __result, _Tp __value)
std::__pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:296	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomAccessIterator __result, _Tp __value, _Compare __comp)
std::__pow	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __pow$/;"	s	line:330	namespace:std
std::__pow::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:333	struct:std::__pow	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first, _Distance __holeIndex,$/;"	f	line:162	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __topIndex, _Tp __value, _Compare __comp)
std::__push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    __push_heap(_RandomAccessIterator __first,$/;"	f	line:117	namespace:std	signature:(_RandomAccessIterator __first, _Distance __holeIndex, _Distance __topIndex, _Tp __value)
std::__reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:1635	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, bidirectional_iterator_tag)
std::__reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:1657	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
std::__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_BidirectionalIterator __first,$/;"	f	line:1796	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, bidirectional_iterator_tag)
std::__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_ForwardIterator __first,$/;"	f	line:1756	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, forward_iterator_tag)
std::__rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate(_RandomAccessIterator __first,$/;"	f	line:1830	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, random_access_iterator_tag)
std::__rotate_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __rotate_adaptive(_BidirectionalIterator1 __first,$/;"	f	line:3546	namespace:std	signature:(_BidirectionalIterator1 __first, _BidirectionalIterator1 __middle, _BidirectionalIterator1 __last, _Distance __len1, _Distance __len2, _BidirectionalIterator2 __buffer, _Distance __buffer_size)
std::__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:630	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, std::forward_iterator_tag)
std::__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:750	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, std::forward_iterator_tag)
std::__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	line:664	namespace:std	signature:(_RandomAccessIter __first, _RandomAccessIter __last, _Integer __count, const _Tp& __val, std::random_access_iterator_tag)
std::__search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __search_n(_RandomAccessIter __first, _RandomAccessIter __last,$/;"	f	line:790	namespace:std	signature:(_RandomAccessIter __first, _RandomAccessIter __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred, std::random_access_iterator_tag)
std::__shift_left	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __shift_left$/;"	s	line:246	namespace:std
std::__shift_left::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:249	struct:std::__shift_left	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__shift_right	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __shift_right$/;"	s	line:253	namespace:std
std::__shift_right::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:256	struct:std::__shift_right	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::__sin	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sin$/;"	s	line:95	namespace:std
std::__sin::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:98	struct:std::__sin	access:public	signature:(const _Tp& __t) const
std::__sinh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sinh$/;"	s	line:109	namespace:std
std::__sinh::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:112	struct:std::__sinh	access:public	signature:(const _Tp& __t) const
std::__sqrt	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __sqrt$/;"	s	line:158	namespace:std
std::__sqrt::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:161	struct:std::__sqrt	access:public	signature:(const _Tp& __t) const
std::__stable_partition_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_partition_adaptive(_ForwardIterator __first,$/;"	f	line:2148	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, _Distance __len, _Pointer __buffer, _Distance __buffer_size)
std::__stable_sort_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	line:3805	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Distance __buffer_size)
std::__stable_sort_adaptive	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __stable_sort_adaptive(_RandomAccessIterator __first,$/;"	f	line:3832	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Pointer __buffer, _Distance __buffer_size, _Compare __comp)
std::__tan	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __tan$/;"	s	line:116	namespace:std
std::__tan::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:119	struct:std::__tan	access:public	signature:(const _Tp& __t) const
std::__tanh	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __tanh$/;"	s	line:130	namespace:std
std::__tanh::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:133	struct:std::__tanh	access:public	signature:(const _Tp& __t) const
std::__timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class __timepunct : public locale::facet$/;"	c	line:2870	namespace:std	inherits:locale::facet
std::__timepunct::_M_am_pm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_am_pm(const _CharT** __ampm) const$/;"	f	line:2941	class:std::__timepunct	access:public	signature:(const _CharT** __ampm) const
std::__timepunct::_M_am_pm_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_am_pm_format(const _CharT* __ampm) const$/;"	f	line:2937	class:std::__timepunct	access:public	signature:(const _CharT* __ampm) const
std::__timepunct::_M_c_locale_timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_timepunct;$/;"	m	line:2880	class:std::__timepunct	access:protected
std::__timepunct::_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:2879	class:std::__timepunct	access:protected
std::__timepunct::_M_date_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_date_formats(const _CharT** __date) const$/;"	f	line:2913	class:std::__timepunct	access:public	signature:(const _CharT** __date) const
std::__timepunct::_M_date_time_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_date_time_formats(const _CharT** __dt) const$/;"	f	line:2929	class:std::__timepunct	access:public	signature:(const _CharT** __dt) const
std::__timepunct::_M_days	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_days(const _CharT** __days) const$/;"	f	line:2948	class:std::__timepunct	access:public	signature:(const _CharT** __days) const
std::__timepunct::_M_days_abbreviated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_days_abbreviated(const _CharT** __days) const$/;"	f	line:2960	class:std::__timepunct	access:public	signature:(const _CharT** __days) const
std::__timepunct::_M_months	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_months(const _CharT** __months) const$/;"	f	line:2972	class:std::__timepunct	access:public	signature:(const _CharT** __months) const
std::__timepunct::_M_months_abbreviated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_months_abbreviated(const _CharT** __months) const$/;"	f	line:2989	class:std::__timepunct	access:public	signature:(const _CharT** __months) const
std::__timepunct::_M_name_timepunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_name_timepunct;$/;"	m	line:2881	class:std::__timepunct	access:protected
std::__timepunct::_M_time_formats	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_time_formats(const _CharT** __time) const$/;"	f	line:2921	class:std::__timepunct	access:public	signature:(const _CharT** __time) const
std::__timepunct::__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __timepunct_cache<_CharT>	__cache_type;$/;"	t	line:2876	class:std::__timepunct	access:public
std::__timepunct::__char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			__char_type;$/;"	t	line:2874	class:std::__timepunct	access:public
std::__timepunct::__string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	line:2875	class:std::__timepunct	access:public
std::__timepunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:2885	class:std::__timepunct	access:public
std::__timepunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id __timepunct<_CharT>::id;$/;"	m	line:3015	class:std::__timepunct
std::__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct __timepunct_cache : public locale::facet$/;"	s	line:2752	namespace:std	inherits:locale::facet
std::__timepunct_cache::_M_aday1	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday1;$/;"	m	line:2777	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday2	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday2;$/;"	m	line:2778	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday3	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday3;$/;"	m	line:2779	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday4	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday4;$/;"	m	line:2780	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday5	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday5;$/;"	m	line:2781	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday6	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday6;$/;"	m	line:2782	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_aday7	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_aday7;$/;"	m	line:2783	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_allocated	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool				_M_allocated;$/;"	m	line:2813	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_am	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_am;$/;"	m	line:2763	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_am_pm_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_am_pm_format;$/;"	m	line:2765	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth01	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth01;$/;"	m	line:2800	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth02	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth02;$/;"	m	line:2801	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth03	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth03;$/;"	m	line:2802	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth04	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth04;$/;"	m	line:2803	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth05	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth05;$/;"	m	line:2804	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth06	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth06;$/;"	m	line:2805	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth07	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth07;$/;"	m	line:2806	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth08	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth08;$/;"	m	line:2807	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth09	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth09;$/;"	m	line:2808	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth10	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth10;$/;"	m	line:2809	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth11	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth11;$/;"	m	line:2810	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_amonth12	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_amonth12;$/;"	m	line:2811	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_date_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_era_format;$/;"	m	line:2758	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_date_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_format;$/;"	m	line:2757	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_date_time_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_era_format;$/;"	m	line:2762	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_date_time_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_date_time_format;$/;"	m	line:2761	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day1	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day1;$/;"	m	line:2768	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day2	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day2;$/;"	m	line:2769	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day3	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day3;$/;"	m	line:2770	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day4	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day4;$/;"	m	line:2771	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day5	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day5;$/;"	m	line:2772	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day6	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day6;$/;"	m	line:2773	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_day7	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_day7;$/;"	m	line:2774	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month01	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month01;$/;"	m	line:2786	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month02	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month02;$/;"	m	line:2787	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month03	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month03;$/;"	m	line:2788	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month04	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month04;$/;"	m	line:2789	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month05	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month05;$/;"	m	line:2790	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month06	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month06;$/;"	m	line:2791	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month07	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month07;$/;"	m	line:2792	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month08	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month08;$/;"	m	line:2793	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month09	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month09;$/;"	m	line:2794	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month10	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month10;$/;"	m	line:2795	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month11	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month11;$/;"	m	line:2796	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_month12	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_month12;$/;"	m	line:2797	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_pm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_pm;$/;"	m	line:2764	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_time_era_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_time_era_format;$/;"	m	line:2760	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_M_time_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const _CharT*			_M_time_format;$/;"	m	line:2759	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const _CharT*		_S_timezones[14];$/;"	m	line:2755	struct:std::__timepunct_cache	access:public
std::__timepunct_cache::_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<char>::_S_timezones[14];$/;"	m	line:2857	class:std::__timepunct_cache
std::__timepunct_cache::_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<wchar_t>::_S_timezones[14];$/;"	m	line:2862	class:std::__timepunct_cache
std::__timepunct_cache::_S_timezones	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const _CharT* __timepunct_cache<_CharT>::_S_timezones[14];$/;"	m	line:2867	class:std::__timepunct_cache
std::__timepunct_cache::__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __timepunct_cache(size_t __refs = 0) : facet(__refs),$/;"	f	line:2815	struct:std::__timepunct_cache	access:public	signature:(size_t __refs = 0)
std::__timepunct_cache::~__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<_CharT>::~__timepunct_cache()$/;"	f	line:2846	class:std::__timepunct_cache	signature:()
std::__unary_plus	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^  struct __unary_plus$/;"	s	line:169	namespace:std
std::__unary_plus::operator ()	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      _Tp operator()(const _Tp& __t) const$/;"	f	line:172	struct:std::__unary_plus	access:public	signature:(const _Tp& __t) const
std::__unguarded_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2399	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::__unguarded_insertion_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_insertion_sort(_RandomAccessIterator __first,$/;"	f	line:2416	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::__unguarded_linear_insert	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val)$/;"	f	line:2305	namespace:std	signature:(_RandomAccessIterator __last, _Tp __val)
std::__unguarded_linear_insert	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_linear_insert(_RandomAccessIterator __last, _Tp __val,$/;"	f	line:2325	namespace:std	signature:(_RandomAccessIterator __last, _Tp __val, _Compare __comp)
std::__unguarded_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	line:2248	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Tp __pivot)
std::__unguarded_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unguarded_partition(_RandomAccessIterator __first,$/;"	f	line:2272	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Tp __pivot, _Compare __comp)
std::__uninitialized_copy_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	line:231	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator __alloc)
std::__uninitialized_copy_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,$/;"	f	line:251	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp>)
std::__uninitialized_copy_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:72	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, __true_type)
std::__uninitialized_copy_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:79	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, __false_type)
std::__uninitialized_copy_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_copy(_InputIterator1 __first1,$/;"	f	line:321	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator __alloc)
std::__uninitialized_copy_fill	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_copy_fill(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:371	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp& __x, _Allocator __alloc)
std::__uninitialized_fill_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:258	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, _Allocator __alloc)
std::__uninitialized_fill_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:276	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, allocator<_Tp2>)
std::__uninitialized_fill_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:143	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, __false_type)
std::__uninitialized_fill_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_aux(_ForwardIterator __first,$/;"	f	line:136	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x, __true_type)
std::__uninitialized_fill_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_copy(_ForwardIterator __result, _ForwardIterator __mid,$/;"	f	line:348	namespace:std	signature:(_ForwardIterator __result, _ForwardIterator __mid, const _Tp& __x, _InputIterator __first, _InputIterator __last, _Allocator __alloc)
std::__uninitialized_fill_n_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, $/;"	f	line:283	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, _Allocator __alloc)
std::__uninitialized_fill_n_a	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, $/;"	f	line:303	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, allocator<_Tp2>)
std::__uninitialized_fill_n_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,$/;"	f	line:182	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, __true_type)
std::__uninitialized_fill_n_aux	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    __uninitialized_fill_n_aux(_ForwardIterator __first, _Size __n,$/;"	f	line:188	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x, __false_type)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1314	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, forward_iterator_tag, output_iterator_tag)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1387	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred, forward_iterator_tag, output_iterator_tag)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1339	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, input_iterator_tag, output_iterator_tag)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1364	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, input_iterator_tag, forward_iterator_tag)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1418	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred, input_iterator_tag, output_iterator_tag)
std::__unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    __unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1449	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _BinaryPredicate __binary_pred, input_iterator_tag, forward_iterator_tag)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)$/;"	f	line:474	namespace:std	signature:(_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:488	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, _Array<_Tp> __b, size_t __n)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)$/;"	f	line:462	namespace:std	signature:(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b,$/;"	f	line:495	namespace:std	signature:(_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, _Array<size_t> __i)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)$/;"	f	line:468	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __a, size_t __n, size_t __s1,$/;"	f	line:481	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s1, _Array<_Tp> __b, size_t __s2)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(_Array<_Tp> __src, size_t __n, _Array<size_t> __i,$/;"	f	line:503	namespace:std	signature:(_Array<_Tp> __src, size_t __n, _Array<size_t> __i, _Array<_Tp> __dst, _Array<size_t> __j)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, _Tp* __restrict__ __b,$/;"	f	line:295	namespace:std	signature:(const _Tp* __restrict__ __a, _Tp* __restrict__ __b, size_t __n, size_t __s)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n, size_t __s,$/;"	f	line:285	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, size_t __s, _Tp* __restrict__ __b)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:276	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:327	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b, const size_t* __restrict__ __i)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __a,$/;"	f	line:316	namespace:std	signature:(const _Tp* __restrict__ __a, const size_t* __restrict__ __i, _Tp* __restrict__ __b, size_t __n)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n, size_t __s1,$/;"	f	line:306	namespace:std	signature:(const _Tp* __restrict__ __src, size_t __n, size_t __s1, _Tp* __restrict__ __dst, size_t __s2)
std::__valarray_copy	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy(const _Tp* __restrict__ __src, size_t __n,$/;"	f	line:338	namespace:std	signature:(const _Tp* __restrict__ __src, size_t __n, const size_t* __restrict__ __i, _Tp* __restrict__ __dst, const size_t* __restrict__ __j)
std::__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a, size_t __n,$/;"	f	line:178	namespace:std	signature:(const _Tp* __restrict__ __a, size_t __n, size_t __s, _Tp* __restrict__ __o)
std::__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct (const _Tp* __restrict__ __a,$/;"	f	line:198	namespace:std	signature:(const _Tp* __restrict__ __a, const size_t* __restrict__ __i, _Tp* __restrict__ __o, size_t __n)
std::__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:431	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, _Array<_Tp> __b, size_t __n)
std::__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(_Array<_Tp> __a, size_t __n, size_t __s,$/;"	f	line:439	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)
std::__valarray_copy_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_copy_construct(const _Tp* __restrict__ __b,$/;"	f	line:168	namespace:std	signature:(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e, _Tp* __restrict__ __o)
std::__valarray_default_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_default_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:99	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
std::__valarray_destroy_elements	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_destroy_elements(_Tp* __restrict__ __b, _Tp* __restrict__ __e)$/;"	f	line:213	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill (_Array<_Tp> __a, size_t __n, const _Tp& __t)$/;"	f	line:445	namespace:std	signature:(_Array<_Tp> __a, size_t __n, const _Tp& __t)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, _Array<size_t> __i,$/;"	f	line:455	namespace:std	signature:(_Array<_Tp> __a, _Array<size_t> __i, size_t __n, const _Tp& __t)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)$/;"	f	line:450	namespace:std	signature:(_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, const size_t* __restrict__ __i,$/;"	f	line:245	namespace:std	signature:(_Tp* __restrict__ __a, const size_t* __restrict__ __i, size_t __n, const _Tp& __t)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n, const _Tp& __t)$/;"	f	line:226	namespace:std	signature:(_Tp* __restrict__ __a, size_t __n, const _Tp& __t)
std::__valarray_fill	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill(_Tp* __restrict__ __a, size_t __n,$/;"	f	line:235	namespace:std	signature:(_Tp* __restrict__ __a, size_t __n, size_t __s, const _Tp& __t)
std::__valarray_fill_construct	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_fill_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e,$/;"	f	line:133	namespace:std	signature:(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)
std::__valarray_get_memory	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^  __valarray_get_memory(size_t __n)$/;"	f	line:57	namespace:std	signature:(size_t __n)
std::__valarray_get_storage	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_get_storage(size_t __n)$/;"	f	line:62	namespace:std	signature:(size_t __n)
std::__valarray_max	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_max(const _Ta& __a)$/;"	f	line:394	namespace:std	signature:(const _Ta& __a)
std::__valarray_min	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_min(const _Ta& __a)$/;"	f	line:378	namespace:std	signature:(const _Ta& __a)
std::__valarray_product	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_product(const _Tp* __restrict__ __f,$/;"	f	line:366	namespace:std	signature:(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)
std::__valarray_release_memory	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^  __valarray_release_memory(void* __p)$/;"	f	line:70	namespace:std	signature:(void* __p)
std::__valarray_sum	/home/damian/.vim/tags/cpp_src/valarray_array.h	/^    __valarray_sum(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)$/;"	f	line:355	namespace:std	signature:(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)
std::__write	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __write(_OutIter __s, const _CharT* __ws, int __len)$/;"	f	line:124	namespace:std	signature:(_OutIter __s, const _CharT* __ws, int __len)
std::__write	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)$/;"	f	line:114	namespace:std	signature:(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
std::accumulate	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init)$/;"	f	line:81	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Tp __init)
std::accumulate	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    accumulate(_InputIterator __first, _InputIterator __last, _Tp __init,$/;"	f	line:107	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Tp __init, _BinaryOperation __binary_op)
std::adjacent_difference	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first, _InputIterator __last,$/;"	f	line:313	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryOperation __binary_op)
std::adjacent_difference	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    adjacent_difference(_InputIterator __first,$/;"	f	line:274	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
std::adjacent_find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:362	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::adjacent_find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:393	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)
std::advance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    advance(_InputIterator& __i, _Distance __n)$/;"	f	line:173	namespace:std	signature:(_InputIterator& __i, _Distance __n)
std::allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^    class allocator: public __glibcxx_base_allocator<_Tp>$/;"	c	line:85	namespace:std	inherits:__glibcxx_base_allocator
std::allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^    class allocator<void>$/;"	c	line:64	namespace:std
std::allocator::allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^        allocator(const allocator<_Tp1>&) throw() { }$/;"	f	line:106	class:std::allocator	access:public	signature:(const allocator<_Tp1>&)
std::allocator::allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      allocator() throw() { }$/;"	f	line:100	class:std::allocator	access:public	signature:()
std::allocator::allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      allocator(const allocator& __a) throw()$/;"	f	line:102	class:std::allocator	access:public	signature:(const allocator& __a)
std::allocator::const_pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const _Tp* const_pointer;$/;"	t	line:91	class:std::allocator	access:public
std::allocator::const_pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const void* const_pointer;$/;"	t	line:70	class:std::allocator	access:public
std::allocator::const_reference	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef const _Tp& const_reference;$/;"	t	line:93	class:std::allocator	access:public
std::allocator::difference_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef ptrdiff_t   difference_type;$/;"	t	line:68	class:std::allocator	access:public
std::allocator::difference_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef ptrdiff_t  difference_type;$/;"	t	line:89	class:std::allocator	access:public
std::allocator::pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp*       pointer;$/;"	t	line:90	class:std::allocator	access:public
std::allocator::pointer	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef void*       pointer;$/;"	t	line:69	class:std::allocator	access:public
std::allocator::rebind	/home/damian/.vim/tags/cpp_src/allocator.h	/^        struct rebind$/;"	s	line:74	class:std::allocator	access:public
std::allocator::rebind	/home/damian/.vim/tags/cpp_src/allocator.h	/^        struct rebind$/;"	s	line:97	class:std::allocator	access:public
std::allocator::rebind::other	/home/damian/.vim/tags/cpp_src/allocator.h	/^        { typedef allocator<_Tp1> other; };$/;"	t	line:75	struct:std::allocator::rebind	access:public
std::allocator::rebind::other	/home/damian/.vim/tags/cpp_src/allocator.h	/^        { typedef allocator<_Tp1> other; };$/;"	t	line:98	struct:std::allocator::rebind	access:public
std::allocator::reference	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp&       reference;$/;"	t	line:92	class:std::allocator	access:public
std::allocator::size_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef size_t      size_type;$/;"	t	line:67	class:std::allocator	access:public
std::allocator::size_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef size_t     size_type;$/;"	t	line:88	class:std::allocator	access:public
std::allocator::value_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp        value_type;$/;"	t	line:94	class:std::allocator	access:public
std::allocator::value_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef void        value_type;$/;"	t	line:71	class:std::allocator	access:public
std::allocator::~allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      ~allocator() throw() { }$/;"	f	line:108	class:std::allocator	access:public	signature:()
std::back_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class back_insert_iterator$/;"	c	line:385	namespace:std	inherits:iterator
std::back_insert_iterator::back_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      back_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	line:397	class:std::back_insert_iterator	access:public	signature:(_Container& __x)
std::back_insert_iterator::container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:389	class:std::back_insert_iterator	access:protected
std::back_insert_iterator::container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:393	class:std::back_insert_iterator	access:public
std::back_insert_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:419	class:std::back_insert_iterator	access:public	signature:()
std::back_insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:424	class:std::back_insert_iterator	access:public	signature:()
std::back_insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:429	class:std::back_insert_iterator	access:public	signature:(int)
std::back_insert_iterator::operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	line:411	class:std::back_insert_iterator	access:public	signature:(typename _Container::const_reference __value)
std::back_inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    back_inserter(_Container& __x)$/;"	f	line:446	namespace:std	signature:(_Container& __x)
std::basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^    class basic_ios : public ios_base$/;"	c	line:56	namespace:std	inherits:ios_base
std::basic_ios::_M_ctype	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __ctype_type*                            _M_ctype;$/;"	m	line:93	class:std::basic_ios	access:protected
std::basic_ios::_M_fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      mutable char_type                              _M_fill;$/;"	m	line:88	class:std::basic_ios	access:protected
std::basic_ios::_M_fill_init	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      mutable bool                                   _M_fill_init;$/;"	m	line:89	class:std::basic_ios	access:protected
std::basic_ios::_M_num_get	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __num_get_type*                          _M_num_get;$/;"	m	line:97	class:std::basic_ios	access:protected
std::basic_ios::_M_num_put	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      const __num_put_type*                          _M_num_put;$/;"	m	line:95	class:std::basic_ios	access:protected
std::basic_ios::_M_setstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      _M_setstate(iostate __state)$/;"	f	line:150	class:std::basic_ios	access:public	signature:(iostate __state)
std::basic_ios::_M_streambuf	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_streambuf<_CharT, _Traits>*              _M_streambuf;$/;"	m	line:90	class:std::basic_ios	access:protected
std::basic_ios::_M_tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ostream<_CharT, _Traits>*                _M_tie;$/;"	m	line:87	class:std::basic_ios	access:protected
std::basic_ios::__ctype_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef ctype<_CharT>                          __ctype_type;$/;"	t	line:78	class:std::basic_ios	access:public
std::basic_ios::__num_get_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^						     __num_get_type;$/;"	t	line:82	class:std::basic_ios	access:public
std::basic_ios::__num_put_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^						     __num_put_type;$/;"	t	line:80	class:std::basic_ios	access:public
std::basic_ios::bad	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      bad() const$/;"	f	line:197	class:std::basic_ios	access:public	signature:() const
std::basic_ios::basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ios()$/;"	f	line:444	class:std::basic_ios	access:protected	signature:()
std::basic_ios::basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      basic_ios(basic_streambuf<_CharT, _Traits>* __sb)$/;"	f	line:256	class:std::basic_ios	access:public	signature:(basic_streambuf<_CharT, _Traits>* __sb)
std::basic_ios::char_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef _CharT                                 char_type;$/;"	t	line:65	class:std::basic_ios	access:public
std::basic_ios::eof	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      eof() const$/;"	f	line:176	class:std::basic_ios	access:public	signature:() const
std::basic_ios::exceptions	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      exceptions() const$/;"	f	line:208	class:std::basic_ios	access:public	signature:() const
std::basic_ios::exceptions	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      exceptions(iostate __except)$/;"	f	line:243	class:std::basic_ios	access:public	signature:(iostate __except)
std::basic_ios::fail	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fail() const$/;"	f	line:187	class:std::basic_ios	access:public	signature:() const
std::basic_ios::fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fill() const$/;"	f	line:356	class:std::basic_ios	access:public	signature:() const
std::basic_ios::fill	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      fill(char_type __ch)$/;"	f	line:376	class:std::basic_ios	access:public	signature:(char_type __ch)
std::basic_ios::good	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      good() const$/;"	f	line:166	class:std::basic_ios	access:public	signature:() const
std::basic_ios::int_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::int_type             int_type;$/;"	t	line:66	class:std::basic_ios	access:public
std::basic_ios::off_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::off_type             off_type;$/;"	t	line:68	class:std::basic_ios	access:public
std::basic_ios::operator !	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      operator!() const$/;"	f	line:111	class:std::basic_ios	access:public	signature:() const
std::basic_ios::operator void*	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      operator void*() const$/;"	f	line:107	class:std::basic_ios	access:public	signature:() const
std::basic_ios::pos_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef typename _Traits::pos_type             pos_type;$/;"	t	line:67	class:std::basic_ios	access:public
std::basic_ios::rdbuf	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      rdbuf() const$/;"	f	line:307	class:std::basic_ios	access:public	signature:() const
std::basic_ios::rdstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      rdstate() const$/;"	f	line:123	class:std::basic_ios	access:public	signature:() const
std::basic_ios::setstate	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      setstate(iostate __state)$/;"	f	line:143	class:std::basic_ios	access:public	signature:(iostate __state)
std::basic_ios::tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      tie() const$/;"	f	line:281	class:std::basic_ios	access:public	signature:() const
std::basic_ios::tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      tie(basic_ostream<_CharT, _Traits>* __tiestr)$/;"	f	line:293	class:std::basic_ios	access:public	signature:(basic_ostream<_CharT, _Traits>* __tiestr)
std::basic_ios::traits_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef _Traits                                traits_type;$/;"	t	line:69	class:std::basic_ios	access:public
std::basic_ios::~basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      ~basic_ios() { }$/;"	f	line:268	class:std::basic_ios	access:public	signature:()
std::basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    class basic_string$/;"	c	line:111	namespace:std
std::basic_string::_Alloc_hider	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Alloc_hider : _Alloc$/;"	s	line:259	class:std::basic_string	inherits:_Alloc	access:private
std::basic_string::_Alloc_hider::_Alloc_hider	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_Alloc_hider(_CharT* __dat, const _Alloc& __a)$/;"	f	line:261	struct:std::basic_string::_Alloc_hider	access:public	signature:(_CharT* __dat, const _Alloc& __a)
std::basic_string::_Alloc_hider::_M_p	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_CharT* _M_p; \/\/ The actual data.$/;"	m	line:264	struct:std::basic_string::_Alloc_hider	access:public
std::basic_string::_CharT_alloc_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;$/;"	t	line:113	class:std::basic_string	access:private
std::basic_string::_M_assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_assign(_CharT* __d, size_type __n, _CharT __c)$/;"	f	line:359	class:std::basic_string	access:private	signature:(_CharT* __d, size_type __n, _CharT __c)
std::basic_string::_M_check	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_check(size_type __pos, const char* __s) const$/;"	f	line:308	class:std::basic_string	access:private	signature:(size_type __pos, const char* __s) const
std::basic_string::_M_check_length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_check_length(size_type __n1, size_type __n2, const char* __s) const$/;"	f	line:316	class:std::basic_string	access:private	signature:(size_type __n1, size_type __n2, const char* __s) const
std::basic_string::_M_copy	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_copy(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	line:341	class:std::basic_string	access:private	signature:(_CharT* __d, const _CharT* __s, size_type __n)
std::basic_string::_M_data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_data() const$/;"	f	line:279	class:std::basic_string	access:private	signature:() const
std::basic_string::_M_data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_data(_CharT* __p)$/;"	f	line:283	class:std::basic_string	access:private	signature:(_CharT* __p)
std::basic_string::_M_dataplus	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      mutable _Alloc_hider	_M_dataplus;$/;"	m	line:276	class:std::basic_string	access:private
std::basic_string::_M_disjunct	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_disjunct(const _CharT* __s) const$/;"	f	line:332	class:std::basic_string	access:private	signature:(const _CharT* __s) const
std::basic_string::_M_ibegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_ibegin() const$/;"	f	line:293	class:std::basic_string	access:private	signature:() const
std::basic_string::_M_iend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_iend() const$/;"	f	line:297	class:std::basic_string	access:private	signature:() const
std::basic_string::_M_leak	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_leak()    \/\/ for use in begin() & non-const op[]$/;"	f	line:301	class:std::basic_string	access:private	signature:()
std::basic_string::_M_limit	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_limit(size_type __pos, size_type __off) const$/;"	f	line:324	class:std::basic_string	access:private	signature:(size_type __pos, size_type __off) const
std::basic_string::_M_move	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_move(_CharT* __d, const _CharT* __s, size_type __n)$/;"	f	line:350	class:std::basic_string	access:private	signature:(_CharT* __d, const _CharT* __s, size_type __n)
std::basic_string::_M_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _M_rep() const$/;"	f	line:287	class:std::basic_string	access:private	signature:() const
std::basic_string::_M_replace_dispatch	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,$/;"	f	line:1429	class:std::basic_string	access:private	signature:(iterator __i1, iterator __i2, _Integer __n, _Integer __val, __true_type)
std::basic_string::_Rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Rep : _Rep_base$/;"	s	line:154	class:std::basic_string	inherits:_Rep_base	access:private
std::basic_string::_Rep::_M_dispose	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_dispose(const _Alloc& __a)$/;"	f	line:231	struct:std::basic_string::_Rep	access:public	signature:(const _Alloc& __a)
std::basic_string::_Rep::_M_grab	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)$/;"	f	line:220	struct:std::basic_string::_Rep	access:public	signature:(const _Alloc& __alloc1, const _Alloc& __alloc2)
std::basic_string::_Rep::_M_is_leaked	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_is_leaked() const$/;"	f	line:190	struct:std::basic_string::_Rep	access:public	signature:() const
std::basic_string::_Rep::_M_is_shared	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_is_shared() const$/;"	f	line:194	struct:std::basic_string::_Rep	access:public	signature:() const
std::basic_string::_Rep::_M_refcopy	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_refcopy() throw()$/;"	f	line:245	struct:std::basic_string::_Rep	access:public	signature:()
std::basic_string::_Rep::_M_refdata	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_refdata() throw()$/;"	f	line:216	struct:std::basic_string::_Rep	access:public	signature:()
std::basic_string::_Rep::_M_set_leaked	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_leaked()$/;"	f	line:198	struct:std::basic_string::_Rep	access:public	signature:()
std::basic_string::_Rep::_M_set_length_and_sharable	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_length_and_sharable(size_type __n)$/;"	f	line:206	struct:std::basic_string::_Rep	access:public	signature:(size_type __n)
std::basic_string::_Rep::_M_set_sharable	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_M_set_sharable()$/;"	f	line:202	struct:std::basic_string::_Rep	access:public	signature:()
std::basic_string::_Rep::_Raw_bytes_alloc	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;$/;"	t	line:157	struct:std::basic_string::_Rep	access:public
std::basic_string::_Rep::_S_empty_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_empty_rep()$/;"	f	line:180	struct:std::basic_string::_Rep	access:public	signature:()
std::basic_string::_Rep::_S_empty_rep_storage	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        static size_type _S_empty_rep_storage[];$/;"	m	line:177	struct:std::basic_string::_Rep	access:public
std::basic_string::_Rep::_S_max_size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	static const size_type	_S_max_size;$/;"	m	line:172	struct:std::basic_string::_Rep	access:public
std::basic_string::_Rep::_S_terminal	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	static const _CharT	_S_terminal;$/;"	m	line:173	struct:std::basic_string::_Rep	access:public
std::basic_string::_Rep_base	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      struct _Rep_base$/;"	s	line:147	class:std::basic_string	access:private
std::basic_string::_Rep_base::_M_capacity	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	size_type		_M_capacity;$/;"	m	line:150	struct:std::basic_string::_Rep_base	access:public
std::basic_string::_Rep_base::_M_length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	size_type		_M_length;$/;"	m	line:149	struct:std::basic_string::_Rep_base	access:public
std::basic_string::_Rep_base::_M_refcount	/home/damian/.vim/tags/cpp_src/basic_string.h	/^	_Atomic_word		_M_refcount;$/;"	m	line:151	struct:std::basic_string::_Rep_base	access:public
std::basic_string::_S_construct	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)$/;"	f	line:1466	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a)
std::basic_string::_S_construct_aux	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	line:1450	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a, __false_type)
std::basic_string::_S_construct_aux	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_construct_aux(_InIterator __beg, _InIterator __end,$/;"	f	line:1459	class:std::basic_string	access:private	signature:(_InIterator __beg, _InIterator __end, const _Alloc& __a, __true_type)
std::basic_string::_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)$/;"	f	line:371	class:std::basic_string	access:private	signature:(_CharT* __p, _Iterator __k1, _Iterator __k2)
std::basic_string::_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)$/;"	f	line:386	class:std::basic_string	access:private	signature:(_CharT* __p, _CharT* __k1, _CharT* __k2)
std::basic_string::_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)$/;"	f	line:390	class:std::basic_string	access:private	signature:(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
std::basic_string::_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)$/;"	f	line:382	class:std::basic_string	access:private	signature:(_CharT* __p, const_iterator __k1, const_iterator __k2)
std::basic_string::_S_copy_chars	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)$/;"	f	line:378	class:std::basic_string	access:private	signature:(_CharT* __p, iterator __k1, iterator __k2)
std::basic_string::_S_empty_rep	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      _S_empty_rep()$/;"	f	line:400	class:std::basic_string	access:private	signature:()
std::basic_string::allocator_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef _Alloc					    allocator_type;$/;"	t	line:119	class:std::basic_string	access:public
std::basic_string::append	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        append(_InputIterator __first, _InputIterator __last)$/;"	f	line:851	class:std::basic_string	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::basic_string::append	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      append(const _CharT* __s)$/;"	f	line:824	class:std::basic_string	access:public	signature:(const _CharT* __s)
std::basic_string::assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:946	class:std::basic_string	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::basic_string::assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(const _CharT* __s)$/;"	f	line:917	class:std::basic_string	access:public	signature:(const _CharT* __s)
std::basic_string::assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(const basic_string& __str, size_type __pos, size_type __n)$/;"	f	line:889	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos, size_type __n)
std::basic_string::assign	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      assign(size_type __n, _CharT __c)$/;"	f	line:933	class:std::basic_string	access:public	signature:(size_type __n, _CharT __c)
std::basic_string::at	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      at(size_type __n) const$/;"	f	line:728	class:std::basic_string	access:public	signature:(size_type __n) const
std::basic_string::at	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      at(size_type __n)$/;"	f	line:747	class:std::basic_string	access:public	signature:(size_type __n)
std::basic_string::basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    basic_string()$/;"	f	line:2055	class:std::basic_string	signature:()
std::basic_string::begin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      begin() const$/;"	f	line:532	class:std::basic_string	access:public	signature:() const
std::basic_string::begin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      begin()$/;"	f	line:521	class:std::basic_string	access:public	signature:()
std::basic_string::c_str	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      c_str() const$/;"	f	line:1522	class:std::basic_string	access:public	signature:() const
std::basic_string::capacity	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      capacity() const$/;"	f	line:641	class:std::basic_string	access:public	signature:() const
std::basic_string::clear	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      clear()$/;"	f	line:668	class:std::basic_string	access:public	signature:()
std::basic_string::compare	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      compare(const basic_string& __str) const$/;"	f	line:1929	class:std::basic_string	access:public	signature:(const basic_string& __str) const
std::basic_string::const_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^                                                            const_iterator;$/;"	t	line:128	class:std::basic_string	access:public
std::basic_string::const_pointer	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_pointer	    const_pointer;$/;"	t	line:125	class:std::basic_string	access:public
std::basic_string::const_reference	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::const_reference   const_reference;$/;"	t	line:123	class:std::basic_string	access:public
std::basic_string::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;$/;"	t	line:129	class:std::basic_string	access:public
std::basic_string::data	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      data() const$/;"	f	line:1532	class:std::basic_string	access:public	signature:() const
std::basic_string::difference_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::difference_type   difference_type;$/;"	t	line:121	class:std::basic_string	access:public
std::basic_string::empty	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      empty() const$/;"	f	line:675	class:std::basic_string	access:public	signature:() const
std::basic_string::end	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      end() const$/;"	f	line:551	class:std::basic_string	access:public	signature:() const
std::basic_string::end	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      end()$/;"	f	line:540	class:std::basic_string	access:public	signature:()
std::basic_string::erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:1156	class:std::basic_string	access:public	signature:(iterator __first, iterator __last)
std::basic_string::erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(iterator __position)$/;"	f	line:1136	class:std::basic_string	access:public	signature:(iterator __position)
std::basic_string::erase	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      erase(size_type __pos = 0, size_type __n = npos)$/;"	f	line:1120	class:std::basic_string	access:public	signature:(size_type __pos = 0, size_type __n = npos)
std::basic_string::find	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1581	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
std::basic_string::find	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1567	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
std::basic_string::find_first_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_not_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1820	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
std::basic_string::find_first_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_not_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1791	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
std::basic_string::find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(_CharT __c, size_type __pos = 0) const$/;"	f	line:1716	class:std::basic_string	access:public	signature:(_CharT __c, size_type __pos = 0) const
std::basic_string::find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(const _CharT* __s, size_type __pos = 0) const$/;"	f	line:1697	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = 0) const
std::basic_string::find_first_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_first_of(const basic_string& __str, size_type __pos = 0) const$/;"	f	line:1669	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = 0) const
std::basic_string::find_last_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_not_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1879	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
std::basic_string::find_last_not_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_not_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1850	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
std::basic_string::find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(_CharT __c, size_type __pos = npos) const$/;"	f	line:1777	class:std::basic_string	access:public	signature:(_CharT __c, size_type __pos = npos) const
std::basic_string::find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1758	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
std::basic_string::find_last_of	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      find_last_of(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1730	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
std::basic_string::get_allocator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      get_allocator() const$/;"	f	line:1539	class:std::basic_string	access:public	signature:() const
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        insert(iterator __p, _InputIterator __beg, _InputIterator __end)$/;"	f	line:978	class:std::basic_string	access:public	signature:(iterator __p, _InputIterator __beg, _InputIterator __end)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(iterator __p, _CharT __c)$/;"	f	line:1096	class:std::basic_string	access:public	signature:(iterator __p, _CharT __c)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(iterator __p, size_type __n, _CharT __c)$/;"	f	line:962	class:std::basic_string	access:public	signature:(iterator __p, size_type __n, _CharT __c)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos, const _CharT* __s)$/;"	f	line:1056	class:std::basic_string	access:public	signature:(size_type __pos, const _CharT* __s)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos, size_type __n, _CharT __c)$/;"	f	line:1079	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n, _CharT __c)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str)$/;"	f	line:993	class:std::basic_string	access:public	signature:(size_type __pos1, const basic_string& __str)
std::basic_string::insert	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      insert(size_type __pos1, const basic_string& __str,$/;"	f	line:1015	class:std::basic_string	access:public	signature:(size_type __pos1, const basic_string& __str, size_type __pos2, size_type __n)
std::basic_string::iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;$/;"	t	line:126	class:std::basic_string	access:public
std::basic_string::length	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      length() const$/;"	f	line:601	class:std::basic_string	access:public	signature:() const
std::basic_string::max_size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      max_size() const$/;"	f	line:606	class:std::basic_string	access:public	signature:() const
std::basic_string::npos	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      static const size_type	npos = static_cast<size_type>(-1);$/;"	m	line:272	class:std::basic_string	access:public
std::basic_string::operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(_CharT __c)$/;"	f	line:780	class:std::basic_string	access:public	signature:(_CharT __c)
std::basic_string::operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(const _CharT* __s)$/;"	f	line:771	class:std::basic_string	access:public	signature:(const _CharT* __s)
std::basic_string::operator +=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator+=(const basic_string& __str)$/;"	f	line:762	class:std::basic_string	access:public	signature:(const basic_string& __str)
std::basic_string::operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(_CharT __c) $/;"	f	line:509	class:std::basic_string	access:public	signature:(_CharT __c)
std::basic_string::operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(const _CharT* __s) $/;"	f	line:498	class:std::basic_string	access:public	signature:(const _CharT* __s)
std::basic_string::operator =	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator=(const basic_string& __str) $/;"	f	line:490	class:std::basic_string	access:public	signature:(const basic_string& __str)
std::basic_string::operator []	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator[] (size_type __pos) const$/;"	f	line:690	class:std::basic_string	access:public	signature:(size_type __pos) const
std::basic_string::operator []	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      operator[](size_type __pos)$/;"	f	line:707	class:std::basic_string	access:public	signature:(size_type __pos)
std::basic_string::pointer	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::pointer	    pointer;$/;"	t	line:124	class:std::basic_string	access:public
std::basic_string::push_back	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      push_back(_CharT __c)$/;"	f	line:859	class:std::basic_string	access:public	signature:(_CharT __c)
std::basic_string::rbegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rbegin() const$/;"	f	line:569	class:std::basic_string	access:public	signature:() const
std::basic_string::rbegin	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rbegin()$/;"	f	line:560	class:std::basic_string	access:public	signature:()
std::basic_string::reference	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::reference	    reference;$/;"	t	line:122	class:std::basic_string	access:public
std::basic_string::rend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rend() const$/;"	f	line:587	class:std::basic_string	access:public	signature:() const
std::basic_string::rend	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rend()$/;"	f	line:578	class:std::basic_string	access:public	signature:()
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^        replace(iterator __i1, iterator __i2,$/;"	f	line:1372	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)$/;"	f	line:1385	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s)$/;"	f	line:1328	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __s)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)$/;"	f	line:1307	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, const basic_string& __str)$/;"	f	line:1289	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const basic_string& __str)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)$/;"	f	line:1406	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)$/;"	f	line:1349	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, size_type __n, _CharT __c)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2,$/;"	f	line:1395	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const _CharT* __k1, const _CharT* __k2)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(iterator __i1, iterator __i2,$/;"	f	line:1416	class:std::basic_string	access:public	signature:(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n, const basic_string& __str)$/;"	f	line:1183	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n, const basic_string& __str)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, const _CharT* __s)$/;"	f	line:1248	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n1, const _CharT* __s)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)$/;"	f	line:1271	class:std::basic_string	access:public	signature:(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
std::basic_string::replace	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      replace(size_type __pos1, size_type __n1, const basic_string& __str,$/;"	f	line:1205	class:std::basic_string	access:public	signature:(size_type __pos1, size_type __n1, const basic_string& __str, size_type __pos2, size_type __n2)
std::basic_string::resize	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      resize(size_type __n)$/;"	f	line:633	class:std::basic_string	access:public	signature:(size_type __n)
std::basic_string::reverse_iterator	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef std::reverse_iterator<iterator>		    reverse_iterator;$/;"	t	line:130	class:std::basic_string	access:public
std::basic_string::rfind	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rfind(const _CharT* __s, size_type __pos = npos) const$/;"	f	line:1639	class:std::basic_string	access:public	signature:(const _CharT* __s, size_type __pos = npos) const
std::basic_string::rfind	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      rfind(const basic_string& __str, size_type __pos = npos) const$/;"	f	line:1611	class:std::basic_string	access:public	signature:(const basic_string& __str, size_type __pos = npos) const
std::basic_string::size	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      size() const$/;"	f	line:595	class:std::basic_string	access:public	signature:() const
std::basic_string::size_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _CharT_alloc_type::size_type	    size_type;$/;"	t	line:120	class:std::basic_string	access:public
std::basic_string::substr	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      substr(size_type __pos = 0, size_type __n = npos) const$/;"	f	line:1911	class:std::basic_string	access:public	signature:(size_type __pos = 0, size_type __n = npos) const
std::basic_string::traits_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef _Traits					    traits_type;$/;"	t	line:117	class:std::basic_string	access:public
std::basic_string::value_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _Traits::char_type		    value_type;$/;"	t	line:118	class:std::basic_string	access:public
std::basic_string::~basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      ~basic_string()$/;"	f	line:482	class:std::basic_string	access:public	signature:()
std::bidirectional_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct bidirectional_iterator_tag : public forward_iterator_tag {};$/;"	s	line:87	namespace:std	inherits:forward_iterator_tag
std::binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct binary_function$/;"	s	line:114	namespace:std
std::binary_function::first_argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg1 first_argument_type;   \/\/\/< the type of the first argument$/;"	t	line:116	struct:std::binary_function	access:public
std::binary_function::result_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Result result_type;         \/\/\/< type of the return type$/;"	t	line:120	struct:std::binary_function	access:public
std::binary_function::second_argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg2 second_argument_type;  \/\/\/< the type of the second argument$/;"	t	line:119	struct:std::binary_function	access:public
std::binary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binary_negate$/;"	c	line:334	namespace:std	inherits:binary_function
std::binary_negate::_M_pred	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	line:340	class:std::binary_negate	access:protected
std::binary_negate::binary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binary_negate(const _Predicate& __x)$/;"	f	line:343	class:std::binary_negate	access:public	signature:(const _Predicate& __x)
std::binary_negate::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Predicate::first_argument_type& __x,$/;"	f	line:347	class:std::binary_negate	access:public	signature:(const typename _Predicate::first_argument_type& __x, const typename _Predicate::second_argument_type& __y) const
std::binary_search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4228	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
std::binary_search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    binary_search(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4260	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
std::bind1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    bind1st(const _Operation& __fn, const _Tp& __x)$/;"	f	line:418	namespace:std	signature:(const _Operation& __fn, const _Tp& __x)
std::bind2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    bind2nd(const _Operation& __fn, const _Tp& __x)$/;"	f	line:452	namespace:std	signature:(const _Operation& __fn, const _Tp& __x)
std::binder1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binder1st$/;"	c	line:392	namespace:std	inherits:unary_function
std::binder1st::binder1st	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binder1st(const _Operation& __x,$/;"	f	line:400	class:std::binder1st	access:public	signature:(const _Operation& __x, const typename _Operation::first_argument_type& __y)
std::binder1st::op	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Operation op;$/;"	m	line:397	class:std::binder1st	access:protected
std::binder1st::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Operation::second_argument_type& __x) const$/;"	f	line:405	class:std::binder1st	access:public	signature:(const typename _Operation::second_argument_type& __x) const
std::binder1st::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(typename _Operation::second_argument_type& __x) const$/;"	f	line:411	class:std::binder1st	access:public	signature:(typename _Operation::second_argument_type& __x) const
std::binder1st::value	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typename _Operation::first_argument_type value;$/;"	m	line:398	class:std::binder1st	access:protected
std::binder2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class binder2nd$/;"	c	line:426	namespace:std	inherits:unary_function
std::binder2nd::binder2nd	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      binder2nd(const _Operation& __x,$/;"	f	line:434	class:std::binder2nd	access:public	signature:(const _Operation& __x, const typename _Operation::second_argument_type& __y)
std::binder2nd::op	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Operation op;$/;"	m	line:431	class:std::binder2nd	access:protected
std::binder2nd::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Operation::first_argument_type& __x) const$/;"	f	line:439	class:std::binder2nd	access:public	signature:(const typename _Operation::first_argument_type& __x) const
std::binder2nd::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(typename _Operation::first_argument_type& __x) const$/;"	f	line:445	class:std::binder2nd	access:public	signature:(typename _Operation::first_argument_type& __x) const
std::binder2nd::value	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typename _Operation::second_argument_type value;$/;"	m	line:432	class:std::binder2nd	access:protected
std::boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  boolalpha(ios_base& __base)$/;"	f	line:788	namespace:std	signature:(ios_base& __base)
std::codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt$/;"	c	line:273	namespace:std	inherits:__codecvt_abstract_base
std::codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt<char, char, mbstate_t>$/;"	c	line:335	namespace:std	inherits:__codecvt_abstract_base
std::codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt<wchar_t, char, mbstate_t>$/;"	c	line:393	namespace:std	inherits:__codecvt_abstract_base
std::codecvt::_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:284	class:std::codecvt	access:protected
std::codecvt::_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:345	class:std::codecvt	access:protected
std::codecvt::_M_c_locale_codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      __c_locale			_M_c_locale_codecvt;$/;"	m	line:403	class:std::codecvt	access:protected
std::codecvt::codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      codecvt(size_t __refs = 0)$/;"	f	line:290	class:std::codecvt	access:public	signature:(size_t __refs = 0)
std::codecvt::extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _ExternT			extern_type;$/;"	t	line:280	class:std::codecvt	access:public
std::codecvt::extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			extern_type;$/;"	t	line:341	class:std::codecvt	access:public
std::codecvt::extern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			extern_type;$/;"	t	line:399	class:std::codecvt	access:public
std::codecvt::id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id			id;$/;"	m	line:287	class:std::codecvt	access:public
std::codecvt::id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id			id;$/;"	m	line:406	class:std::codecvt	access:public
std::codecvt::id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      static locale::id id;$/;"	m	line:348	class:std::codecvt	access:public
std::codecvt::id	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    locale::id codecvt<_InternT, _ExternT, _StateT>::id;$/;"	m	line:331	class:std::codecvt
std::codecvt::intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _InternT			intern_type;$/;"	t	line:279	class:std::codecvt	access:public
std::codecvt::intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef char			intern_type;$/;"	t	line:340	class:std::codecvt	access:public
std::codecvt::intern_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef wchar_t			intern_type;$/;"	t	line:398	class:std::codecvt	access:public
std::codecvt::result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef codecvt_base::result	result;$/;"	t	line:278	class:std::codecvt	access:public
std::codecvt::state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef _StateT			state_type;$/;"	t	line:281	class:std::codecvt	access:public
std::codecvt::state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	line:342	class:std::codecvt	access:public
std::codecvt::state_type	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      typedef mbstate_t			state_type;$/;"	t	line:400	class:std::codecvt	access:public
std::codecvt::~codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~codecvt() { }$/;"	f	line:298	class:std::codecvt	access:protected	signature:()
std::codecvt_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^  class codecvt_base$/;"	c	line:50	namespace:std
std::codecvt_base::error	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      error,$/;"	e	line:57	enum:std::codecvt_base::result
std::codecvt_base::noconv	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      noconv$/;"	e	line:58	enum:std::codecvt_base::result
std::codecvt_base::ok	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ok,$/;"	e	line:55	enum:std::codecvt_base::result
std::codecvt_base::partial	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      partial,$/;"	e	line:56	enum:std::codecvt_base::result
std::codecvt_base::result	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    enum result$/;"	g	line:53	class:std::codecvt_base	access:public
std::codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^    class codecvt_byname : public codecvt<_InternT, _ExternT, _StateT>$/;"	c	line:453	namespace:std	inherits:codecvt
std::codecvt_byname::codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      codecvt_byname(const char* __s, size_t __refs = 0)$/;"	f	line:457	class:std::codecvt_byname	access:public	signature:(const char* __s, size_t __refs = 0)
std::codecvt_byname::~codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~codecvt_byname() { }$/;"	f	line:469	class:std::codecvt_byname	access:protected	signature:()
std::collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class collate : public locale::facet$/;"	c	line:2537	namespace:std	inherits:locale::facet
std::collate::_M_c_locale_collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_collate;$/;"	m	line:2550	class:std::collate	access:protected
std::collate::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:2543	class:std::collate	access:public
std::collate::collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate(__c_locale __cloc, size_t __refs = 0)$/;"	f	line:2578	class:std::collate	access:public	signature:(__c_locale __cloc, size_t __refs = 0)
std::collate::collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate(size_t __refs = 0)$/;"	f	line:2564	class:std::collate	access:public	signature:(size_t __refs = 0)
std::collate::compare	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      compare(const _CharT* __lo1, const _CharT* __hi1,$/;"	f	line:2595	class:std::collate	access:public	signature:(const _CharT* __lo1, const _CharT* __hi1, const _CharT* __lo2, const _CharT* __hi2) const
std::collate::hash	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      hash(const _CharT* __lo, const _CharT* __hi) const$/;"	f	line:2628	class:std::collate	access:public	signature:(const _CharT* __lo, const _CharT* __hi) const
std::collate::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:2554	class:std::collate	access:public
std::collate::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id collate<_CharT>::id;$/;"	m	line:2690	class:std::collate
std::collate::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:2544	class:std::collate	access:public
std::collate::transform	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      transform(const _CharT* __lo, const _CharT* __hi) const$/;"	f	line:2614	class:std::collate	access:public	signature:(const _CharT* __lo, const _CharT* __hi) const
std::collate::~collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~collate()$/;"	f	line:2641	class:std::collate	access:protected	signature:()
std::collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class collate_byname : public collate<_CharT>$/;"	c	line:2713	namespace:std	inherits:collate
std::collate_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT               char_type;$/;"	t	line:2718	class:std::collate_byname	access:public
std::collate_byname::collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      collate_byname(const char* __s, size_t __refs = 0)$/;"	f	line:2723	class:std::collate_byname	access:public	signature:(const char* __s, size_t __refs = 0)
std::collate_byname::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT> string_type;$/;"	t	line:2719	class:std::collate_byname	access:public
std::collate_byname::~collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~collate_byname() { }$/;"	f	line:2735	class:std::collate_byname	access:protected	signature:()
std::const_mem_fun1_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	line:695	namespace:std	inherits:binary_function
std::const_mem_fun1_ref_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	line:706	class:std::const_mem_fun1_ref_t	access:private
std::const_mem_fun1_ref_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	line:699	class:std::const_mem_fun1_ref_t	access:public	signature:(_Tp::*__pf) const
std::const_mem_fun1_ref_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __r, _Arg __x) const$/;"	f	line:703	class:std::const_mem_fun1_ref_t	access:public	signature:(const _Tp& __r, _Arg __x) const
std::const_mem_fun1_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun1_t : public binary_function<const _Tp*, _Arg, _Ret>$/;"	c	line:663	namespace:std	inherits:binary_function
std::const_mem_fun1_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg) const;$/;"	m	line:674	class:std::const_mem_fun1_t	access:private
std::const_mem_fun1_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const)$/;"	f	line:667	class:std::const_mem_fun1_t	access:public	signature:(_Tp::*__pf) const
std::const_mem_fun1_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp* __p, _Arg __x) const$/;"	f	line:671	class:std::const_mem_fun1_t	access:public	signature:(const _Tp* __p, _Arg __x) const
std::const_mem_fun_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	line:631	namespace:std	inherits:unary_function
std::const_mem_fun_ref_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	line:642	class:std::const_mem_fun_ref_t	access:private
std::const_mem_fun_ref_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun_ref_t(_Ret (_Tp::*__pf)() const)$/;"	f	line:635	class:std::const_mem_fun_ref_t	access:public	signature:(_Tp::*__pf) const
std::const_mem_fun_ref_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __r) const$/;"	f	line:639	class:std::const_mem_fun_ref_t	access:public	signature:(const _Tp& __r) const
std::const_mem_fun_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class const_mem_fun_t : public unary_function<const _Tp*, _Ret>$/;"	c	line:599	namespace:std	inherits:unary_function
std::const_mem_fun_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)() const;$/;"	m	line:610	class:std::const_mem_fun_t	access:private
std::const_mem_fun_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      const_mem_fun_t(_Ret (_Tp::*__pf)() const)$/;"	f	line:603	class:std::const_mem_fun_t	access:public	signature:(_Tp::*__pf) const
std::const_mem_fun_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp* __p) const$/;"	f	line:607	class:std::const_mem_fun_t	access:public	signature:(const _Tp* __p) const
std::copy	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:389	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
std::copy	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    copy(istreambuf_iterator<_CharT> __first,$/;"	f	line:284	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result)
std::copy_backward	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)$/;"	f	line:526	namespace:std	signature:(_BI1 __first, _BI1 __last, _BI2 __result)
std::count	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)$/;"	f	line:424	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __value)
std::count_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)$/;"	f	line:448	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred)
std::ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype : public __ctype_abstract_base<_CharT>$/;"	c	line:607	namespace:std	inherits:__ctype_abstract_base
std::ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype<char> : public locale::facet, public ctype_base$/;"	c	line:676	namespace:std	inherits:locale::facet,ctype_base
std::ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype<wchar_t> : public __ctype_abstract_base<wchar_t>$/;"	c	line:1214	namespace:std	inherits:__ctype_abstract_base
std::ctype::_M_bit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mask                      _M_bit[16];$/;"	m	line:1231	class:std::ctype	access:protected
std::ctype::_M_c_locale_ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	line:1223	class:std::ctype	access:protected
std::ctype::_M_c_locale_ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale		_M_c_locale_ctype;$/;"	m	line:685	class:std::ctype	access:protected
std::ctype::_M_del	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool			_M_del;$/;"	m	line:686	class:std::ctype	access:protected
std::ctype::_M_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      char                      _M_narrow[128];$/;"	m	line:1227	class:std::ctype	access:protected
std::ctype::_M_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];$/;"	m	line:692	class:std::ctype	access:protected
std::ctype::_M_narrow_init	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      void _M_narrow_init() const$/;"	f	line:1175	class:std::ctype	access:private	signature:() const
std::ctype::_M_narrow_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      bool                      _M_narrow_ok;$/;"	m	line:1226	class:std::ctype	access:protected
std::ctype::_M_narrow_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_narrow_ok;	\/\/ 0 uninitialized, 1 init,$/;"	m	line:693	class:std::ctype	access:protected
std::ctype::_M_table	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const mask*		_M_table;$/;"	m	line:689	class:std::ctype	access:protected
std::ctype::_M_tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __to_type			_M_tolower;$/;"	m	line:688	class:std::ctype	access:protected
std::ctype::_M_toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __to_type			_M_toupper;$/;"	m	line:687	class:std::ctype	access:protected
std::ctype::_M_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	line:691	class:std::ctype	access:protected
std::ctype::_M_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      wint_t                    _M_widen[1 + static_cast<unsigned char>(-1)];$/;"	m	line:1228	class:std::ctype	access:protected
std::ctype::_M_widen_init	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      void _M_widen_init() const$/;"	f	line:1159	class:std::ctype	access:private	signature:() const
std::ctype::_M_widen_ok	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      mutable char		_M_widen_ok;$/;"	m	line:690	class:std::ctype	access:protected
std::ctype::_M_wmask	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __wmask_type              _M_wmask[16];$/;"	m	line:1232	class:std::ctype	access:protected
std::ctype::__wmask_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef wctype_t		__wmask_type;$/;"	t	line:1220	class:std::ctype	access:public
std::ctype::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:611	class:std::ctype	access:public
std::ctype::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef char		char_type;$/;"	t	line:681	class:std::ctype	access:public
std::ctype::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef wchar_t		char_type;$/;"	t	line:1219	class:std::ctype	access:public
std::ctype::ctype	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }$/;"	f	line:618	class:std::ctype	access:public	signature:(size_t __refs = 0)
std::ctype::do_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_narrow(char_type __c, char) const$/;"	f	line:1124	class:std::ctype	access:protected	signature:(char_type __c, char) const
std::ctype::do_narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:1150	class:std::ctype	access:protected	signature:(const char_type* __lo, const char_type* __hi, char, char* __dest) const
std::ctype::do_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_widen(char __c) const$/;"	f	line:1075	class:std::ctype	access:protected	signature:(char __c) const
std::ctype::do_widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_widen(const char* __lo, const char* __hi, char_type* __dest) const$/;"	f	line:1098	class:std::ctype	access:protected	signature:(const char* __lo, const char* __hi, char_type* __dest) const
std::ctype::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:615	class:std::ctype	access:public
std::ctype::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	line:1237	class:std::ctype	access:public
std::ctype::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id        id;$/;"	m	line:698	class:std::ctype	access:public
std::ctype::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id ctype<_CharT>::id;$/;"	m	line:664	class:std::ctype
std::ctype::mask	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef typename __ctype_abstract_base<_CharT>::mask mask;$/;"	t	line:612	class:std::ctype	access:public
std::ctype::narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(char_type __c, char __dfault) const$/;"	f	line:925	class:std::ctype	access:public	signature:(char_type __c, char __dfault) const
std::ctype::narrow	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      narrow(const char_type* __lo, const char_type* __hi,$/;"	f	line:958	class:std::ctype	access:public	signature:(const char_type* __lo, const char_type* __hi, char __dfault, char *__to) const
std::ctype::table	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      table() const throw()$/;"	f	line:975	class:std::ctype	access:protected	signature:() const
std::ctype::table_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const size_t      table_size = 1 + static_cast<unsigned char>(-1);$/;"	m	line:700	class:std::ctype	access:public
std::ctype::tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	line:830	class:std::ctype	access:public	signature:(char_type __c) const
std::ctype::tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	line:847	class:std::ctype	access:public	signature:(char_type* __lo, const char_type* __hi) const
std::ctype::toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	line:814	class:std::ctype	access:public	signature:(char_type *__lo, const char_type* __hi) const
std::ctype::toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	line:797	class:std::ctype	access:public	signature:(char_type __c) const
std::ctype::widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	line:867	class:std::ctype	access:public	signature:(char __c) const
std::ctype::widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	line:894	class:std::ctype	access:public	signature:(const char* __lo, const char* __hi, char_type* __to) const
std::ctype_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class ctype_byname : public ctype<_CharT>$/;"	c	line:1510	namespace:std	inherits:ctype
std::ctype_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	line:1513	class:std::ctype_byname	access:public
std::ctype_byname::~ctype_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~ctype_byname() { };$/;"	f	line:1520	class:std::ctype_byname	access:protected	signature:()
std::dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  dec(ios_base& __base)$/;"	f	line:926	namespace:std	signature:(ios_base& __base)
std::deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    class deque : protected _Deque_base<_Tp, _Alloc>$/;"	c	line:629	namespace:std	inherits:_Deque_base
std::deque::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Alloc::value_type        _Alloc_value_type;$/;"	t	line:632	class:std::deque	access:private
std::deque::_Base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Deque_base<_Tp, _Alloc>           _Base;$/;"	t	line:636	class:std::deque	access:private
std::deque::_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1316	class:std::deque	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
std::deque::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1299	class:std::deque	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::deque::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:1290	class:std::deque	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
std::deque::_M_destroy_data	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_destroy_data(iterator __first, iterator __last, const _Alloc1&)$/;"	f	line:1438	class:std::deque	access:protected	signature:(iterator __first, iterator __last, const _Alloc1&)
std::deque::_M_destroy_data	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data(iterator __first, iterator __last,$/;"	f	line:1442	class:std::deque	access:protected	signature:(iterator __first, iterator __last, const std::allocator<_Tp>&)
std::deque::_M_destroy_data_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator __first, iterator __last, __false_type)$/;"	f	line:1431	class:std::deque	access:protected	signature:(iterator __first, iterator __last, __false_type)
std::deque::_M_destroy_data_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_destroy_data_dispatch(iterator, iterator, __true_type) { }$/;"	f	line:1428	class:std::deque	access:protected	signature:(iterator, iterator, __true_type)
std::deque::_M_erase_at_begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_erase_at_begin(iterator __pos)$/;"	f	line:1452	class:std::deque	access:protected	signature:(iterator __pos)
std::deque::_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_erase_at_end(iterator __pos)$/;"	f	line:1462	class:std::deque	access:protected	signature:(iterator __pos)
std::deque::_M_fill_assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_fill_assign(size_type __n, const value_type& __val)$/;"	f	line:1334	class:std::deque	access:protected	signature:(size_type __n, const value_type& __val)
std::deque::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1235	class:std::deque	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::deque::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:1226	class:std::deque	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
std::deque::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_insert_dispatch(iterator __pos,$/;"	f	line:1369	class:std::deque	access:protected	signature:(iterator __pos, _Integer __n, _Integer __x, __true_type)
std::deque::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        _M_insert_dispatch(iterator __pos,$/;"	f	line:1379	class:std::deque	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
std::deque::_M_range_check	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_range_check(size_type __n) const$/;"	f	line:938	class:std::deque	access:protected	signature:(size_type __n) const
std::deque::_M_reserve_elements_at_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_elements_at_back(size_type __n)$/;"	f	line:1488	class:std::deque	access:protected	signature:(size_type __n)
std::deque::_M_reserve_elements_at_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_elements_at_front(size_type __n)$/;"	f	line:1478	class:std::deque	access:protected	signature:(size_type __n)
std::deque::_M_reserve_map_at_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_map_at_back(size_type __nodes_to_add = 1)$/;"	f	line:1516	class:std::deque	access:protected	signature:(size_type __nodes_to_add = 1)
std::deque::_M_reserve_map_at_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      _M_reserve_map_at_front(size_type __nodes_to_add = 1)$/;"	f	line:1524	class:std::deque	access:protected	signature:(size_type __nodes_to_add = 1)
std::deque::_Map_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef pointer*                           _Map_pointer;$/;"	t	line:654	class:std::deque	access:protected
std::deque::_S_buffer_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      static size_t _S_buffer_size()$/;"	f	line:656	class:std::deque	access:protected	signature:()
std::deque::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::_Tp_alloc_type	 _Tp_alloc_type;$/;"	t	line:637	class:std::deque	access:private
std::deque::allocator_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Alloc                             allocator_type;$/;"	t	line:651	class:std::deque	access:public
std::deque::assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:782	class:std::deque	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::deque::assign	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:765	class:std::deque	access:public	signature:(size_type __n, const value_type& __val)
std::deque::at	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      at(size_type __n) const$/;"	f	line:975	class:std::deque	access:public	signature:(size_type __n) const
std::deque::at	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      at(size_type __n)$/;"	f	line:957	class:std::deque	access:public	signature:(size_type __n)
std::deque::back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      back() const$/;"	f	line:1014	class:std::deque	access:public	signature:() const
std::deque::back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      back()$/;"	f	line:1002	class:std::deque	access:public	signature:()
std::deque::begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      begin() const$/;"	f	line:807	class:std::deque	access:public	signature:() const
std::deque::begin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      begin()$/;"	f	line:799	class:std::deque	access:public	signature:()
std::deque::clear	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      clear()$/;"	f	line:1217	class:std::deque	access:public	signature:()
std::deque::const_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::const_iterator             const_iterator;$/;"	t	line:646	class:std::deque	access:public
std::deque::const_pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:642	class:std::deque	access:public
std::deque::const_reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:644	class:std::deque	access:public
std::deque::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	line:647	class:std::deque	access:public
std::deque::deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        deque(_InputIterator __first, _InputIterator __last,$/;"	f	line:727	class:std::deque	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
std::deque::deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(const allocator_type& __a = allocator_type())$/;"	f	line:683	class:std::deque	access:public	signature:(const allocator_type& __a = allocator_type())
std::deque::deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(const deque& __x)$/;"	f	line:706	class:std::deque	access:public	signature:(const deque& __x)
std::deque::deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      deque(size_type __n, const value_type& __value = value_type(),$/;"	f	line:694	class:std::deque	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
std::deque::difference_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef ptrdiff_t                          difference_type;$/;"	t	line:650	class:std::deque	access:public
std::deque::empty	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      empty() const$/;"	f	line:901	class:std::deque	access:public	signature:() const
std::deque::end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      end() const$/;"	f	line:825	class:std::deque	access:public	signature:() const
std::deque::end	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      end()$/;"	f	line:816	class:std::deque	access:public	signature:()
std::deque::front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      front() const$/;"	f	line:994	class:std::deque	access:public	signature:() const
std::deque::front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      front()$/;"	f	line:986	class:std::deque	access:public	signature:()
std::deque::get_allocator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      get_allocator() const$/;"	f	line:790	class:std::deque	access:public	signature:() const
std::deque::insert	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:1144	class:std::deque	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
std::deque::insert	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:1129	class:std::deque	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
std::deque::iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Base::iterator                   iterator;$/;"	t	line:645	class:std::deque	access:public
std::deque::max_size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      max_size() const$/;"	f	line:872	class:std::deque	access:public	signature:() const
std::deque::operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](size_type __n) const$/;"	f	line:932	class:std::deque	access:public	signature:(size_type __n) const
std::deque::operator []	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      operator[](size_type __n)$/;"	f	line:917	class:std::deque	access:public	signature:(size_type __n)
std::deque::pointer	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:641	class:std::deque	access:public
std::deque::pop_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      pop_back()$/;"	f	line:1095	class:std::deque	access:public	signature:()
std::deque::pop_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      pop_front()$/;"	f	line:1074	class:std::deque	access:public	signature:()
std::deque::push_back	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      push_back(const value_type& __x)$/;"	f	line:1053	class:std::deque	access:public	signature:(const value_type& __x)
std::deque::push_front	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      push_front(const value_type& __x)$/;"	f	line:1032	class:std::deque	access:public	signature:(const value_type& __x)
std::deque::rbegin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rbegin() const$/;"	f	line:843	class:std::deque	access:public	signature:() const
std::deque::rbegin	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rbegin()$/;"	f	line:834	class:std::deque	access:public	signature:()
std::deque::reference	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:643	class:std::deque	access:public
std::deque::rend	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rend() const$/;"	f	line:861	class:std::deque	access:public	signature:() const
std::deque::rend	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      rend()$/;"	f	line:852	class:std::deque	access:public	signature:()
std::deque::resize	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	line:887	class:std::deque	access:public	signature:(size_type __new_size, value_type __x = value_type())
std::deque::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	line:648	class:std::deque	access:public
std::deque::size	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      size() const$/;"	f	line:867	class:std::deque	access:public	signature:() const
std::deque::size_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef size_t                             size_type;$/;"	t	line:649	class:std::deque	access:public
std::deque::swap	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      swap(deque& __x)$/;"	f	line:1197	class:std::deque	access:public	signature:(deque& __x)
std::deque::value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp                                        value_type;$/;"	t	line:640	class:std::deque	access:public
std::deque::~deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      ~deque()$/;"	f	line:741	class:std::deque	access:public	signature:()
std::distance	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	/^    distance(_InputIterator __first, _InputIterator __last)$/;"	f	line:115	namespace:std	signature:(_InputIterator __first, _InputIterator __last)
std::divides	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct divides : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:161	namespace:std	inherits:binary_function
std::divides::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:164	struct:std::divides	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::equal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    equal(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:771	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2)
std::equal	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    equal(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:804	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred)
std::equal_range	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4109	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
std::equal_range	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    equal_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
std::equal_to	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	line:196	namespace:std	inherits:binary_function
std::equal_to::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:199	struct:std::equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)$/;"	f	line:583	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
std::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(char* __first, char* __last, const char& __c)$/;"	f	line:612	namespace:std	signature:(char* __first, char* __last, const char& __c)
std::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(signed char* __first, signed char* __last, const signed char& __c)$/;"	f	line:604	namespace:std	signature:(signed char* __first, signed char* __last, const signed char& __c)
std::fill	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  fill(unsigned char* __first, unsigned char* __last, const unsigned char& __c)$/;"	f	line:596	namespace:std	signature:(unsigned char* __first, unsigned char* __last, const unsigned char& __c)
std::fill	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  fill(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)$/;"	f	line:364	namespace:std	signature:(_Bit_iterator __first, _Bit_iterator __last, const bool& __x)
std::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(_OutputIterator __first, _Size __n, const _Tp& __value)$/;"	f	line:659	namespace:std	signature:(_OutputIterator __first, _Size __n, const _Tp& __value)
std::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(char* __first, _Size __n, const char& __c)$/;"	f	line:686	namespace:std	signature:(char* __first, _Size __n, const char& __c)
std::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(signed char* __first, _Size __n, const signed char& __c)$/;"	f	line:678	namespace:std	signature:(signed char* __first, _Size __n, const signed char& __c)
std::fill_n	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    fill_n(unsigned char* __first, _Size __n, const unsigned char& __c)$/;"	f	line:670	namespace:std	signature:(unsigned char* __first, _Size __n, const unsigned char& __c)
std::find	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find(_InputIterator __first, _InputIterator __last,$/;"	f	line:318	namespace:std	signature:(_InputIterator __first, _InputIterator __last, const _Tp& __val)
std::find	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    find(istreambuf_iterator<_CharT> __first,$/;"	f	line:360	namespace:std	signature:(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT& __val)
std::find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5437	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)
std::find_end	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:5483	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __comp)
std::find_first_of	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:5221	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2)
std::find_first_of	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_first_of(_InputIterator __first1, _InputIterator __last1,$/;"	f	line:5258	namespace:std	signature:(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, _BinaryPredicate __comp)
std::find_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    find_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:340	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Predicate __pred)
std::fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  fixed(ios_base& __base)$/;"	f	line:951	namespace:std	signature:(ios_base& __base)
std::for_each	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    for_each(_InputIterator __first, _InputIterator __last, _Function __f)$/;"	f	line:153	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _Function __f)
std::forward_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct forward_iterator_tag : public input_iterator_tag {};$/;"	s	line:84	namespace:std	inherits:input_iterator_tag
std::fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^    class fpos$/;"	c	line:95	namespace:std
std::fpos::_M_off	/home/damian/.vim/tags/cpp_src/postypes.h	/^      streamoff	                _M_off;$/;"	m	line:98	class:std::fpos	access:private
std::fpos::_M_state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      _StateT			_M_state;$/;"	m	line:99	class:std::fpos	access:private
std::fpos::fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^      fpos()$/;"	f	line:106	class:std::fpos	access:public	signature:()
std::fpos::fpos	/home/damian/.vim/tags/cpp_src/postypes.h	/^      fpos(streamoff __off)$/;"	f	line:116	class:std::fpos	access:public	signature:(streamoff __off)
std::fpos::operator +	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator+(streamoff __off) const$/;"	f	line:161	class:std::fpos	access:public	signature:(streamoff __off) const
std::fpos::operator +=	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator+=(streamoff __off)$/;"	f	line:137	class:std::fpos	access:public	signature:(streamoff __off)
std::fpos::operator -	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-(const fpos& __other) const$/;"	f	line:188	class:std::fpos	access:public	signature:(const fpos& __other) const
std::fpos::operator -	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-(streamoff __off) const$/;"	f	line:175	class:std::fpos	access:public	signature:(streamoff __off) const
std::fpos::operator -=	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator-=(streamoff __off)$/;"	f	line:148	class:std::fpos	access:public	signature:(streamoff __off)
std::fpos::operator streamoff	/home/damian/.vim/tags/cpp_src/postypes.h	/^      operator streamoff() const { return _M_off; }$/;"	f	line:120	class:std::fpos	access:public	signature:() const
std::fpos::state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      state() const$/;"	f	line:129	class:std::fpos	access:public	signature:() const
std::fpos::state	/home/damian/.vim/tags/cpp_src/postypes.h	/^      state(_StateT __st)$/;"	f	line:124	class:std::fpos	access:public	signature:(_StateT __st)
std::front_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class front_insert_iterator$/;"	c	line:460	namespace:std	inherits:iterator
std::front_insert_iterator::container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:464	class:std::front_insert_iterator	access:protected
std::front_insert_iterator::container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:468	class:std::front_insert_iterator	access:public
std::front_insert_iterator::front_insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      explicit front_insert_iterator(_Container& __x) : container(&__x) { }$/;"	f	line:471	class:std::front_insert_iterator	access:public	signature:(_Container& __x)
std::front_insert_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:493	class:std::front_insert_iterator	access:public	signature:()
std::front_insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:498	class:std::front_insert_iterator	access:public	signature:()
std::front_insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:503	class:std::front_insert_iterator	access:public	signature:(int)
std::front_insert_iterator::operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(typename _Container::const_reference __value)$/;"	f	line:485	class:std::front_insert_iterator	access:public	signature:(typename _Container::const_reference __value)
std::front_inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    front_inserter(_Container& __x)$/;"	f	line:520	namespace:std	signature:(_Container& __x)
std::generate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    generate(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1125	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Generator __gen)
std::generate_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)$/;"	f	line:1151	namespace:std	signature:(_OutputIterator __first, _Size __n, _Generator __gen)
std::getline	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    getline(basic_istream<_CharT, _Traits>& __is,$/;"	f	line:2439	namespace:std	signature:(basic_istream<_CharT, _Traits>& __is, basic_string<_CharT, _Traits, _Alloc>& __str)
std::greater	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct greater : public binary_function<_Tp, _Tp, bool>$/;"	s	line:214	namespace:std	inherits:binary_function
std::greater::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:217	struct:std::greater	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::greater_equal	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct greater_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	line:232	namespace:std	inherits:binary_function
std::greater_equal::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:235	struct:std::greater_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  class gslice$/;"	c	line:63	namespace:std
std::gslice::_Indexer	/home/damian/.vim/tags/cpp_src/gslice.h	/^    struct _Indexer$/;"	s	line:104	class:std::gslice	access:private
std::gslice::_Indexer::_M_count	/home/damian/.vim/tags/cpp_src/gslice.h	/^      size_t _M_count;$/;"	m	line:106	struct:std::gslice::_Indexer	access:public
std::gslice::_Indexer::_M_decrement_use	/home/damian/.vim/tags/cpp_src/gslice.h	/^      _M_decrement_use()$/;"	f	line:118	struct:std::gslice::_Indexer	access:public	signature:()
std::gslice::_Indexer::_M_increment_use	/home/damian/.vim/tags/cpp_src/gslice.h	/^      _M_increment_use()$/;"	f	line:114	struct:std::gslice::_Indexer	access:public	signature:()
std::gslice::_Indexer::_M_index	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_index; \/\/ Linear array of referenced indices$/;"	m	line:110	struct:std::gslice::_Indexer	access:public
std::gslice::_Indexer::_M_size	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_size;$/;"	m	line:108	struct:std::gslice::_Indexer	access:public
std::gslice::_Indexer::_M_start	/home/damian/.vim/tags/cpp_src/gslice.h	/^      size_t _M_start;$/;"	m	line:107	struct:std::gslice::_Indexer	access:public
std::gslice::_Indexer::_M_stride	/home/damian/.vim/tags/cpp_src/gslice.h	/^      valarray<size_t> _M_stride;$/;"	m	line:109	struct:std::gslice::_Indexer	access:public
std::gslice::_M_index	/home/damian/.vim/tags/cpp_src/gslice.h	/^    _Indexer* _M_index;$/;"	m	line:122	class:std::gslice	access:private
std::gslice::gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::gslice(const gslice& __g) : _M_index(__g._M_index)$/;"	f	line:147	class:std::gslice	signature:(const gslice& __g)
std::gslice::gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::gslice(size_t __o, const valarray<size_t>& __l,$/;"	f	line:142	class:std::gslice	signature:(size_t __o, const valarray<size_t>& __l, const valarray<size_t>& __s)
std::gslice::gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  inline gslice::gslice () : _M_index(0) {}$/;"	f	line:139	class:std::gslice	signature:()
std::gslice::operator =	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::operator= (const gslice& __g)$/;"	f	line:158	class:std::gslice	signature:(const gslice& __g)
std::gslice::size	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::size () const$/;"	f	line:132	class:std::gslice	signature:() const
std::gslice::start	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::start () const$/;"	f	line:128	class:std::gslice	signature:() const
std::gslice::stride	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::stride () const$/;"	f	line:136	class:std::gslice	signature:() const
std::gslice::~gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::~gslice()$/;"	f	line:151	class:std::gslice	signature:()
std::gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    class gslice_array$/;"	c	line:59	namespace:std
std::gslice_array::_M_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      _Array<_Tp>    _M_array;$/;"	m	line:123	class:std::gslice_array	access:private
std::gslice_array::_M_index	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      const valarray<size_t>& _M_index;$/;"	m	line:124	class:std::gslice_array	access:private
std::gslice_array::gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(_Array<_Tp> __a,$/;"	f	line:136	class:std::gslice_array	signature:(_Array<_Tp> __a, const valarray<size_t>& __i)
std::gslice_array::gslice_array	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::gslice_array(const gslice_array<_Tp>& __a)$/;"	f	line:142	class:std::gslice_array	signature:(const gslice_array<_Tp>& __a)
std::gslice_array::operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      gslice_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	line:174	class:std::gslice_array	signature:(const _Expr<_Dom, _Tp>& __e) const
std::gslice_array::operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:157	class:std::gslice_array	signature:(const _Tp& __t) const
std::gslice_array::operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const gslice_array<_Tp>& __a)$/;"	f	line:147	class:std::gslice_array	signature:(const gslice_array<_Tp>& __a)
std::gslice_array::operator =	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^    gslice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:165	class:std::gslice_array	signature:(const valarray<_Tp>& __v) const
std::gslice_array::value_type	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      typedef _Tp value_type;$/;"	t	line:62	class:std::gslice_array	access:public
std::hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  hex(ios_base& __base)$/;"	f	line:934	namespace:std	signature:(ios_base& __base)
std::includes	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4299	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)
std::includes	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    includes(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4348	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
std::indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    class indirect_array$/;"	c	line:61	namespace:std
std::indirect_array::_M_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const _Array<_Tp>	 _M_array;$/;"	m	line:134	class:std::indirect_array	access:private
std::indirect_array::_M_index	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const _Array<size_t> _M_index;$/;"	m	line:133	class:std::indirect_array	access:private
std::indirect_array::_M_sz	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      const size_t	 _M_sz;$/;"	m	line:132	class:std::indirect_array	access:private
std::indirect_array::indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(_Array<_Tp> __a, size_t __s,$/;"	f	line:147	class:std::indirect_array	signature:(_Array<_Tp> __a, size_t __s, _Array<size_t> __i)
std::indirect_array::indirect_array	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::indirect_array(const indirect_array<_Tp>& __a)$/;"	f	line:142	class:std::indirect_array	signature:(const indirect_array<_Tp>& __a)
std::indirect_array::operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      indirect_array<_Tp>::operator=(const _Expr<_Dom, _Tp>& __e) const$/;"	f	line:173	class:std::indirect_array	signature:(const _Expr<_Dom, _Tp>& __e) const
std::indirect_array::operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:162	class:std::indirect_array	signature:(const _Tp& __t) const
std::indirect_array::operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const indirect_array<_Tp>& __a)$/;"	f	line:153	class:std::indirect_array	signature:(const indirect_array<_Tp>& __a)
std::indirect_array::operator =	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^    indirect_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:167	class:std::indirect_array	signature:(const valarray<_Tp>& __v) const
std::indirect_array::value_type	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      typedef _Tp value_type;$/;"	t	line:64	class:std::indirect_array	access:public
std::inner_product	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    inner_product(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:135	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _Tp __init)
std::inner_product	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    inner_product(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:167	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _Tp __init, _BinaryOperation1 __binary_op1, _BinaryOperation2 __binary_op2)
std::inplace_merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	line:3713	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last)
std::inplace_merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    inplace_merge(_BidirectionalIterator __first,$/;"	f	line:3767	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __middle, _BidirectionalIterator __last, _Compare __comp)
std::input_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct input_iterator_tag {};$/;"	s	line:80	namespace:std
std::insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class insert_iterator$/;"	c	line:538	namespace:std	inherits:iterator
std::insert_iterator::container	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Container* container;$/;"	m	line:542	class:std::insert_iterator	access:protected
std::insert_iterator::container_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Container          container_type;$/;"	t	line:547	class:std::insert_iterator	access:public
std::insert_iterator::insert_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      insert_iterator(_Container& __x, typename _Container::iterator __i)$/;"	f	line:553	class:std::insert_iterator	access:public	signature:(_Container& __x, typename _Container::iterator __i)
std::insert_iterator::iter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typename _Container::iterator iter;$/;"	m	line:543	class:std::insert_iterator	access:protected
std::insert_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*()$/;"	f	line:589	class:std::insert_iterator	access:public	signature:()
std::insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:594	class:std::insert_iterator	access:public	signature:()
std::insert_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:599	class:std::insert_iterator	access:public	signature:(int)
std::insert_iterator::operator =	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator=(const typename _Container::const_reference __value)$/;"	f	line:580	class:std::insert_iterator	access:public	signature:(const typename _Container::const_reference __value)
std::inserter	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    inserter(_Container& __x, _Iterator __i)$/;"	f	line:616	namespace:std	signature:(_Container& __x, _Iterator __i)
std::internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  internal(ios_base& __base)$/;"	f	line:901	namespace:std	signature:(ios_base& __base)
std::ios_base	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  class ios_base$/;"	c	line:201	namespace:std
std::ios_base::Init	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    class Init$/;"	c	line:530	class:std::ios_base	access:public
std::ios_base::Init::_S_refcount	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      static _Atomic_word	_S_refcount;$/;"	m	line:538	class:std::ios_base::Init	access:private
std::ios_base::Init::_S_synced_with_stdio	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      static bool		_S_synced_with_stdio;$/;"	m	line:539	class:std::ios_base::Init	access:private
std::ios_base::_Callback_list	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    struct _Callback_list$/;"	s	line:466	class:std::ios_base	access:protected
std::ios_base::_Callback_list::_Callback_list	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Callback_list(ios_base::event_callback __fn, int __index,$/;"	f	line:474	struct:std::ios_base::_Callback_list	access:public	signature:(ios_base::event_callback __fn, int __index, _Callback_list* __cb)
std::ios_base::_Callback_list::_M_add_reference	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }$/;"	f	line:479	struct:std::ios_base::_Callback_list	access:public	signature:()
std::ios_base::_Callback_list::_M_fn	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      ios_base::event_callback	_M_fn;$/;"	m	line:470	struct:std::ios_base::_Callback_list	access:public
std::ios_base::_Callback_list::_M_index	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      int			_M_index;$/;"	m	line:471	struct:std::ios_base::_Callback_list	access:public
std::ios_base::_Callback_list::_M_next	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Callback_list*		_M_next;$/;"	m	line:469	struct:std::ios_base::_Callback_list	access:public
std::ios_base::_Callback_list::_M_refcount	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Atomic_word		_M_refcount;  \/\/ 0 means one reference.$/;"	m	line:472	struct:std::ios_base::_Callback_list	access:public
std::ios_base::_Callback_list::_M_remove_reference	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _M_remove_reference() $/;"	f	line:483	struct:std::ios_base::_Callback_list	access:public	signature:()
std::ios_base::_M_callbacks	/home/damian/.vim/tags/cpp_src/ios_base.h	/^     _Callback_list*	_M_callbacks;$/;"	m	line:487	class:std::ios_base	access:protected
std::ios_base::_M_exception	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iostate		_M_exception;$/;"	m	line:460	class:std::ios_base	access:protected
std::ios_base::_M_flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    fmtflags		_M_flags;$/;"	m	line:459	class:std::ios_base	access:protected
std::ios_base::_M_getloc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _M_getloc() const { return _M_ios_locale; }$/;"	f	line:700	class:std::ios_base	access:public	signature:() const
std::ios_base::_M_ios_locale	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    locale		_M_ios_locale;$/;"	m	line:519	class:std::ios_base	access:protected
std::ios_base::_M_local_word	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words		_M_local_word[_S_local_word_size];$/;"	m	line:509	class:std::ios_base	access:protected
std::ios_base::_M_precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    streamsize		_M_precision;$/;"	m	line:457	class:std::ios_base	access:protected
std::ios_base::_M_streambuf_state	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iostate		_M_streambuf_state;$/;"	m	line:461	class:std::ios_base	access:protected
std::ios_base::_M_width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    streamsize		_M_width;$/;"	m	line:458	class:std::ios_base	access:protected
std::ios_base::_M_word	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words*		_M_word;$/;"	m	line:513	class:std::ios_base	access:protected
std::ios_base::_M_word_size	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    int			_M_word_size;$/;"	m	line:512	class:std::ios_base	access:protected
std::ios_base::_M_word_zero	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    _Words		_M_word_zero;$/;"	m	line:504	class:std::ios_base	access:protected
std::ios_base::_S_local_word_size	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    enum { _S_local_word_size = 8 };$/;"	e	line:508	enum:std::ios_base::__anon6
std::ios_base::_Words	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    struct _Words$/;"	s	line:496	class:std::ios_base	access:protected
std::ios_base::_Words::_M_iword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      long	_M_iword;$/;"	m	line:499	struct:std::ios_base::_Words	access:public
std::ios_base::_Words::_M_pword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      void*	_M_pword;$/;"	m	line:498	struct:std::ios_base::_Words	access:public
std::ios_base::_Words::_Words	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      _Words() : _M_pword(0), _M_iword(0) { }$/;"	f	line:500	struct:std::ios_base::_Words	access:public	signature:()
std::ios_base::adjustfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags adjustfield = _S_adjustfield;$/;"	m	line:308	class:std::ios_base	access:public
std::ios_base::app	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode app =		_S_app;$/;"	m	line:362	class:std::ios_base	access:public
std::ios_base::ate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode ate =		_S_ate;$/;"	m	line:365	class:std::ios_base	access:public
std::ios_base::badbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate badbit =	_S_badbit;$/;"	m	line:332	class:std::ios_base	access:public
std::ios_base::basefield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags basefield =   _S_basefield;$/;"	m	line:311	class:std::ios_base	access:public
std::ios_base::beg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir beg =		_S_beg;$/;"	m	line:395	class:std::ios_base	access:public
std::ios_base::binary	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode binary =	_S_bin;$/;"	m	line:371	class:std::ios_base	access:public
std::ios_base::boolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags boolalpha =   _S_boolalpha;$/;"	m	line:256	class:std::ios_base	access:public
std::ios_base::copyfmt_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      copyfmt_event$/;"	e	line:422	enum:std::ios_base::event
std::ios_base::cur	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir cur =		_S_cur;$/;"	m	line:398	class:std::ios_base	access:public
std::ios_base::dec	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags dec =         _S_dec;$/;"	m	line:259	class:std::ios_base	access:public
std::ios_base::end	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const seekdir end =		_S_end;$/;"	m	line:401	class:std::ios_base	access:public
std::ios_base::eofbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate eofbit =	_S_eofbit;$/;"	m	line:335	class:std::ios_base	access:public
std::ios_base::erase_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      erase_event,$/;"	e	line:420	enum:std::ios_base::event
std::ios_base::event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    enum event$/;"	g	line:418	class:std::ios_base	access:public
std::ios_base::event_callback	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef void (*event_callback) (event, ios_base&, int);$/;"	t	line:435	class:std::ios_base	access:public
std::ios_base::failbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate failbit =	_S_failbit;$/;"	m	line:340	class:std::ios_base	access:public
std::ios_base::failure	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    class failure : public exception$/;"	c	line:207	class:std::ios_base	inherits:exception	access:public
std::ios_base::failure::_M_msg	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      string _M_msg;$/;"	m	line:224	class:std::ios_base::failure	access:private
std::ios_base::fixed	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags fixed =       _S_fixed;$/;"	m	line:262	class:std::ios_base	access:public
std::ios_base::flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    flags() const { return _M_flags; }$/;"	f	line:548	class:std::ios_base	access:public	signature:() const
std::ios_base::flags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    flags(fmtflags __fmtfl)$/;"	f	line:558	class:std::ios_base	access:public	signature:(fmtflags __fmtfl)
std::ios_base::floatfield	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags floatfield =  _S_floatfield;$/;"	m	line:314	class:std::ios_base	access:public
std::ios_base::fmtflags	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Fmtflags fmtflags;$/;"	t	line:253	class:std::ios_base	access:public
std::ios_base::getloc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    getloc() const { return _M_ios_locale; }$/;"	f	line:690	class:std::ios_base	access:public	signature:() const
std::ios_base::goodbit	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const iostate goodbit =	_S_goodbit;$/;"	m	line:343	class:std::ios_base	access:public
std::ios_base::hex	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags hex =         _S_hex;$/;"	m	line:265	class:std::ios_base	access:public
std::ios_base::imbue_event	/home/damian/.vim/tags/cpp_src/ios_base.h	/^      imbue_event,$/;"	e	line:421	enum:std::ios_base::event
std::ios_base::in	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode in =		_S_in;$/;"	m	line:374	class:std::ios_base	access:public
std::ios_base::internal	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags internal =    _S_internal;$/;"	m	line:270	class:std::ios_base	access:public
std::ios_base::io_state	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int io_state;$/;"	t	line:404	class:std::ios_base	access:public
std::ios_base::iostate	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Iostate iostate;$/;"	t	line:328	class:std::ios_base	access:public
std::ios_base::iword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    iword(int __ix)$/;"	f	line:734	class:std::ios_base	access:public	signature:(int __ix)
std::ios_base::left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags left =        _S_left;$/;"	m	line:274	class:std::ios_base	access:public
std::ios_base::oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags oct =         _S_oct;$/;"	m	line:277	class:std::ios_base	access:public
std::ios_base::open_mode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int open_mode;$/;"	t	line:405	class:std::ios_base	access:public
std::ios_base::openmode	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Openmode openmode;$/;"	t	line:359	class:std::ios_base	access:public
std::ios_base::out	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode out =		_S_out;$/;"	m	line:377	class:std::ios_base	access:public
std::ios_base::precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    precision() const { return _M_precision; }$/;"	f	line:618	class:std::ios_base	access:public	signature:() const
std::ios_base::precision	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    precision(streamsize __prec)$/;"	f	line:626	class:std::ios_base	access:public	signature:(streamsize __prec)
std::ios_base::pword	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    pword(int __ix)$/;"	f	line:755	class:std::ios_base	access:public	signature:(int __ix)
std::ios_base::right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags right =       _S_right;$/;"	m	line:281	class:std::ios_base	access:public
std::ios_base::scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags scientific =  _S_scientific;$/;"	m	line:284	class:std::ios_base	access:public
std::ios_base::seek_dir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef int seek_dir;$/;"	t	line:406	class:std::ios_base	access:public
std::ios_base::seekdir	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef _Ios_Seekdir seekdir;$/;"	t	line:392	class:std::ios_base	access:public
std::ios_base::setf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl)$/;"	f	line:574	class:std::ios_base	access:public	signature:(fmtflags __fmtfl)
std::ios_base::setf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    setf(fmtflags __fmtfl, fmtflags __mask)$/;"	f	line:591	class:std::ios_base	access:public	signature:(fmtflags __fmtfl, fmtflags __mask)
std::ios_base::showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showbase =    _S_showbase;$/;"	m	line:288	class:std::ios_base	access:public
std::ios_base::showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showpoint =   _S_showpoint;$/;"	m	line:292	class:std::ios_base	access:public
std::ios_base::showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags showpos =     _S_showpos;$/;"	m	line:295	class:std::ios_base	access:public
std::ios_base::skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags skipws =      _S_skipws;$/;"	m	line:298	class:std::ios_base	access:public
std::ios_base::streamoff	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef std::streamoff streamoff;$/;"	t	line:409	class:std::ios_base	access:public
std::ios_base::streampos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef std::streampos streampos;$/;"	t	line:408	class:std::ios_base	access:public
std::ios_base::trunc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode trunc =	_S_trunc;$/;"	m	line:380	class:std::ios_base	access:public
std::ios_base::unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags unitbuf =     _S_unitbuf;$/;"	m	line:301	class:std::ios_base	access:public
std::ios_base::unsetf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    unsetf(fmtflags __mask) { _M_flags &= ~__mask; }$/;"	f	line:606	class:std::ios_base	access:public	signature:(fmtflags __mask)
std::ios_base::uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags uppercase =   _S_uppercase;$/;"	m	line:305	class:std::ios_base	access:public
std::ios_base::width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    width() const { return _M_width; }$/;"	f	line:640	class:std::ios_base	access:public	signature:() const
std::ios_base::width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    width(streamsize __wide)$/;"	f	line:648	class:std::ios_base	access:public	signature:(streamsize __wide)
std::isalnum	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isalnum(_CharT __c, const locale& __loc)$/;"	f	line:4665	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isalpha	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isalpha(_CharT __c, const locale& __loc)$/;"	f	line:4641	namespace:std	signature:(_CharT __c, const locale& __loc)
std::iscntrl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    iscntrl(_CharT __c, const locale& __loc)$/;"	f	line:4623	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isdigit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isdigit(_CharT __c, const locale& __loc)$/;"	f	line:4647	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isgraph	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isgraph(_CharT __c, const locale& __loc)$/;"	f	line:4671	namespace:std	signature:(_CharT __c, const locale& __loc)
std::islower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    islower(_CharT __c, const locale& __loc)$/;"	f	line:4635	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isprint	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isprint(_CharT __c, const locale& __loc)$/;"	f	line:4617	namespace:std	signature:(_CharT __c, const locale& __loc)
std::ispunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    ispunct(_CharT __c, const locale& __loc)$/;"	f	line:4653	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isspace	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isspace(_CharT __c, const locale& __loc)$/;"	f	line:4611	namespace:std	signature:(_CharT __c, const locale& __loc)
std::istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    class istream_iterator$/;"	c	line:47	namespace:std	inherits:iterator
std::istream_iterator::_M_equal	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _M_equal(const istream_iterator& __x) const$/;"	f	line:109	class:std::istream_iterator	access:public	signature:(const istream_iterator& __x) const
std::istream_iterator::_M_ok	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      bool		_M_ok;$/;"	m	line:58	class:std::istream_iterator	access:private
std::istream_iterator::_M_read	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _M_read()$/;"	f	line:114	class:std::istream_iterator	access:private	signature:()
std::istream_iterator::_M_stream	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_type*	_M_stream;$/;"	m	line:56	class:std::istream_iterator	access:private
std::istream_iterator::_M_value	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      _Tp		_M_value;$/;"	m	line:57	class:std::istream_iterator	access:private
std::istream_iterator::char_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	line:51	class:std::istream_iterator	access:public
std::istream_iterator::istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator()$/;"	f	line:62	class:std::istream_iterator	access:public	signature:()
std::istream_iterator::istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator(const istream_iterator& __obj)$/;"	f	line:70	class:std::istream_iterator	access:public	signature:(const istream_iterator& __obj)
std::istream_iterator::istream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      istream_iterator(istream_type& __s)$/;"	f	line:66	class:std::istream_iterator	access:public	signature:(istream_type& __s)
std::istream_iterator::istream_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef basic_istream<_CharT, _Traits> istream_type;$/;"	t	line:53	class:std::istream_iterator	access:public
std::istream_iterator::operator *	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator*() const$/;"	f	line:76	class:std::istream_iterator	access:public	signature:() const
std::istream_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++()$/;"	f	line:88	class:std::istream_iterator	access:public	signature:()
std::istream_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	line:98	class:std::istream_iterator	access:public	signature:(int)
std::istream_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator->() const { return &(operator*()); }$/;"	f	line:85	class:std::istream_iterator	access:public	signature:() const
std::istream_iterator::traits_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	line:52	class:std::istream_iterator	access:public
std::istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    class istreambuf_iterator$/;"	c	line:49	namespace:std	inherits:iterator
std::istreambuf_iterator::_M_at_eof	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_at_eof() const$/;"	f	line:186	class:std::istreambuf_iterator	access:private	signature:() const
std::istreambuf_iterator::_M_c	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      mutable int_type		_M_c;$/;"	m	line:91	class:std::istreambuf_iterator	access:private
std::istreambuf_iterator::_M_get	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_get() const$/;"	f	line:168	class:std::istreambuf_iterator	access:private	signature:() const
std::istreambuf_iterator::_M_sbuf	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      mutable streambuf_type*	_M_sbuf;$/;"	m	line:90	class:std::istreambuf_iterator	access:private
std::istreambuf_iterator::char_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _CharT					char_type;$/;"	t	line:57	class:std::istreambuf_iterator	access:public
std::istreambuf_iterator::equal	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      equal(const istreambuf_iterator& __b) const$/;"	f	line:159	class:std::istreambuf_iterator	access:public	signature:(const istreambuf_iterator& __b) const
std::istreambuf_iterator::int_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef typename _Traits::int_type		int_type;$/;"	t	line:59	class:std::istreambuf_iterator	access:public
std::istreambuf_iterator::istream_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_istream<_CharT, _Traits>		istream_type;$/;"	t	line:61	class:std::istreambuf_iterator	access:public
std::istreambuf_iterator::istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator() throw()$/;"	f	line:95	class:std::istreambuf_iterator	access:public	signature:()
std::istreambuf_iterator::istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(istream_type& __s) throw()$/;"	f	line:99	class:std::istreambuf_iterator	access:public	signature:(istream_type& __s)
std::istreambuf_iterator::istreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      istreambuf_iterator(streambuf_type* __s) throw()$/;"	f	line:103	class:std::istreambuf_iterator	access:public	signature:(streambuf_type* __s)
std::istreambuf_iterator::operator *	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator*() const$/;"	f	line:110	class:std::istreambuf_iterator	access:public	signature:() const
std::istreambuf_iterator::operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	line:124	class:std::istreambuf_iterator	access:public	signature:()
std::istreambuf_iterator::operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	line:139	class:std::istreambuf_iterator	access:public	signature:(int)
std::istreambuf_iterator::streambuf_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;$/;"	t	line:60	class:std::istreambuf_iterator	access:public
std::istreambuf_iterator::traits_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _Traits					traits_type;$/;"	t	line:58	class:std::istreambuf_iterator	access:public
std::isupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isupper(_CharT __c, const locale& __loc)$/;"	f	line:4629	namespace:std	signature:(_CharT __c, const locale& __loc)
std::isxdigit	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    isxdigit(_CharT __c, const locale& __loc)$/;"	f	line:4659	namespace:std	signature:(_CharT __c, const locale& __loc)
std::iter_swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)$/;"	f	line:143	namespace:std	signature:(_ForwardIterator1 __a, _ForwardIterator2 __b)
std::iterator	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator$/;"	s	line:106	namespace:std
std::iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Distance  difference_type;$/;"	t	line:113	struct:std::iterator	access:public
std::iterator::iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Category  iterator_category;$/;"	t	line:109	struct:std::iterator	access:public
std::iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Pointer   pointer;$/;"	t	line:115	struct:std::iterator	access:public
std::iterator::reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Reference reference;$/;"	t	line:117	struct:std::iterator	access:public
std::iterator::value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp        value_type;$/;"	t	line:111	struct:std::iterator	access:public
std::iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits$/;"	s	line:127	namespace:std
std::iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<_Tp*>$/;"	s	line:137	namespace:std
std::iterator_traits	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^    struct iterator_traits<const _Tp*>$/;"	s	line:147	namespace:std
std::iterator_traits::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	line:141	struct:std::iterator_traits	access:public
std::iterator_traits::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef ptrdiff_t                   difference_type;$/;"	t	line:151	struct:std::iterator_traits	access:public
std::iterator_traits::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::difference_type   difference_type;$/;"	t	line:131	struct:std::iterator_traits	access:public
std::iterator_traits::iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	line:139	struct:std::iterator_traits	access:public
std::iterator_traits::iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef random_access_iterator_tag iterator_category;$/;"	t	line:149	struct:std::iterator_traits	access:public
std::iterator_traits::iterator_category	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::iterator_category iterator_category;$/;"	t	line:129	struct:std::iterator_traits	access:public
std::iterator_traits::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp*                        pointer;$/;"	t	line:142	struct:std::iterator_traits	access:public
std::iterator_traits::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp*                  pointer;$/;"	t	line:152	struct:std::iterator_traits	access:public
std::iterator_traits::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::pointer           pointer;$/;"	t	line:132	struct:std::iterator_traits	access:public
std::iterator_traits::reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp&                        reference;$/;"	t	line:143	struct:std::iterator_traits	access:public
std::iterator_traits::reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef const _Tp&                  reference;$/;"	t	line:153	struct:std::iterator_traits	access:public
std::iterator_traits::reference	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::reference         reference;$/;"	t	line:133	struct:std::iterator_traits	access:public
std::iterator_traits::value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	line:140	struct:std::iterator_traits	access:public
std::iterator_traits::value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	line:150	struct:std::iterator_traits	access:public
std::iterator_traits::value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::value_type        value_type;$/;"	t	line:130	struct:std::iterator_traits	access:public
std::left	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  left(ios_base& __base)$/;"	f	line:909	namespace:std	signature:(ios_base& __base)
std::less	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct less : public binary_function<_Tp, _Tp, bool>$/;"	s	line:223	namespace:std	inherits:binary_function
std::less::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:226	struct:std::less	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::less_equal	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct less_equal : public binary_function<_Tp, _Tp, bool>$/;"	s	line:241	namespace:std	inherits:binary_function
std::less_equal::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:244	struct:std::less_equal	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:835	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)
std::lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    lexicographical_compare(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:876	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)
std::lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  lexicographical_compare(const char* __first1, const char* __last1,$/;"	f	line:914	namespace:std	signature:(const char* __first1, const char* __last1, const char* __first2, const char* __last2)
std::lexicographical_compare	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^  lexicographical_compare(const unsigned char* __first1,$/;"	f	line:898	namespace:std	signature:(const unsigned char* __first1, const unsigned char* __last1, const unsigned char* __first2, const unsigned char* __last2)
std::list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    class list : protected _List_base<_Tp, _Alloc>$/;"	c	line:407	namespace:std	inherits:_List_base
std::list::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	line:410	class:std::list	access:private
std::list::_Base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_base<_Tp, _Alloc>                    _Base;$/;"	t	line:414	class:std::list	access:private
std::list::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:1134	class:std::list	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
std::list::_M_check_equal_allocators	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_check_equal_allocators(list& __x)$/;"	f	line:1177	class:std::list	access:protected	signature:(list& __x)
std::list::_M_create_node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_create_node(const value_type& __x)$/;"	f	line:450	class:std::list	access:protected	signature:(const value_type& __x)
std::list::_M_erase	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_erase(iterator __position)$/;"	f	line:1167	class:std::list	access:protected	signature:(iterator __position)
std::list::_M_fill_initialize	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_fill_initialize(size_type __n, const value_type& __x)$/;"	f	line:1122	class:std::list	access:protected	signature:(size_type __n, const value_type& __x)
std::list::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:1112	class:std::list	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::list::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:1103	class:std::list	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
std::list::_M_insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_insert(iterator __position, const value_type& __x)$/;"	f	line:1159	class:std::list	access:protected	signature:(iterator __position, const value_type& __x)
std::list::_M_transfer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      _M_transfer(iterator __position, iterator __first, iterator __last)$/;"	f	line:1154	class:std::list	access:protected	signature:(iterator __position, iterator __first, iterator __last)
std::list::_Node	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_node<_Tp>				 _Node;$/;"	t	line:434	class:std::list	access:protected
std::list::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	line:415	class:std::list	access:private
std::list::allocator_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Alloc                                     allocator_type;$/;"	t	line:429	class:std::list	access:public
std::list::assign	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:564	class:std::list	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::list::assign	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:547	class:std::list	access:public	signature:(size_type __n, const value_type& __val)
std::list::back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      back() const$/;"	f	line:714	class:std::list	access:public	signature:() const
std::list::back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      back()$/;"	f	line:702	class:std::list	access:public	signature:()
std::list::begin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      begin() const$/;"	f	line:591	class:std::list	access:public	signature:() const
std::list::begin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      begin()$/;"	f	line:582	class:std::list	access:public	signature:()
std::list::clear	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      clear()$/;"	f	line:907	class:std::list	access:public	signature:()
std::list::const_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_const_iterator<_Tp>                  const_iterator;$/;"	t	line:424	class:std::list	access:public
std::list::const_pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:420	class:std::list	access:public
std::list::const_reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:422	class:std::list	access:public
std::list::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;$/;"	t	line:425	class:std::list	access:public
std::list::difference_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef ptrdiff_t                                  difference_type;$/;"	t	line:428	class:std::list	access:public
std::list::empty	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      empty() const$/;"	f	line:654	class:std::list	access:public	signature:() const
std::list::end	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      end() const$/;"	f	line:609	class:std::list	access:public	signature:() const
std::list::end	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      end()$/;"	f	line:600	class:std::list	access:public	signature:()
std::list::erase	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:873	class:std::list	access:public	signature:(iterator __first, iterator __last)
std::list::front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      front() const$/;"	f	line:694	class:std::list	access:public	signature:() const
std::list::front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      front()$/;"	f	line:686	class:std::list	access:public	signature:()
std::list::get_allocator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      get_allocator() const$/;"	f	line:573	class:std::list	access:public	signature:() const
std::list::insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:829	class:std::list	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
std::list::insert	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:808	class:std::list	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
std::list::iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _List_iterator<_Tp>                        iterator;$/;"	t	line:423	class:std::list	access:public
std::list::list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^        list(_InputIterator __first, _InputIterator __last,$/;"	f	line:509	class:std::list	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
std::list::list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(const allocator_type& __a = allocator_type())$/;"	f	line:472	class:std::list	access:public	signature:(const allocator_type& __a = allocator_type())
std::list::list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(const list& __x)$/;"	f	line:495	class:std::list	access:public	signature:(const list& __x)
std::list::list	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      list(size_type __n, const value_type& __value = value_type(),$/;"	f	line:483	class:std::list	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
std::list::max_size	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      max_size() const$/;"	f	line:664	class:std::list	access:public	signature:() const
std::list::pointer	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:419	class:std::list	access:public
std::list::pop_back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      pop_back()$/;"	f	line:778	class:std::list	access:public	signature:()
std::list::pop_front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      pop_front()$/;"	f	line:749	class:std::list	access:public	signature:()
std::list::push_back	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      push_back(const value_type& __x)$/;"	f	line:763	class:std::list	access:public	signature:(const value_type& __x)
std::list::push_front	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      push_front(const value_type& __x)$/;"	f	line:733	class:std::list	access:public	signature:(const value_type& __x)
std::list::rbegin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rbegin() const$/;"	f	line:627	class:std::list	access:public	signature:() const
std::list::rbegin	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rbegin()$/;"	f	line:618	class:std::list	access:public	signature:()
std::list::reference	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:421	class:std::list	access:public
std::list::rend	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rend() const$/;"	f	line:645	class:std::list	access:public	signature:() const
std::list::rend	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      rend()$/;"	f	line:636	class:std::list	access:public	signature:()
std::list::reverse	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      reverse()$/;"	f	line:1075	class:std::list	access:public	signature:()
std::list::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef std::reverse_iterator<iterator>            reverse_iterator;$/;"	t	line:426	class:std::list	access:public
std::list::size	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      size() const$/;"	f	line:659	class:std::list	access:public	signature:() const
std::list::size_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef size_t                                     size_type;$/;"	t	line:427	class:std::list	access:public
std::list::splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x)$/;"	f	line:926	class:std::list	access:public	signature:(iterator __position, list& __x)
std::list::splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __first, iterator __last)$/;"	f	line:972	class:std::list	access:public	signature:(iterator __position, list& __x, iterator __first, iterator __last)
std::list::splice	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      splice(iterator __position, list& __x, iterator __i)$/;"	f	line:946	class:std::list	access:public	signature:(iterator __position, list& __x, iterator __i)
std::list::swap	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      swap(list& __x)$/;"	f	line:890	class:std::list	access:public	signature:(list& __x)
std::list::value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                        value_type;$/;"	t	line:418	class:std::list	access:public
std::locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale$/;"	c	line:66	namespace:std
std::locale::_Impl	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::_Impl$/;"	c	line:472	class:std::locale
std::locale::_Impl::_M_add_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_add_reference() throw()$/;"	f	line:506	class:std::locale::_Impl	access:private	signature:()
std::locale::_Impl::_M_caches	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    const facet**			_M_caches;$/;"	m	line:495	class:std::locale::_Impl	access:private
std::locale::_Impl::_M_check_same_name	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_check_same_name()$/;"	f	line:533	class:std::locale::_Impl	access:private	signature:()
std::locale::_Impl::_M_facets	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    const facet**			_M_facets;$/;"	m	line:493	class:std::locale::_Impl	access:private
std::locale::_Impl::_M_facets_size	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    size_t				_M_facets_size;$/;"	m	line:494	class:std::locale::_Impl	access:private
std::locale::_Impl::_M_init_facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^      _M_init_facet(_Facet* __facet)$/;"	f	line:557	class:std::locale::_Impl	access:private	signature:(_Facet* __facet)
std::locale::_Impl::_M_names	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    char**				_M_names;$/;"	m	line:496	class:std::locale::_Impl	access:private
std::locale::_Impl::_M_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _Atomic_word			_M_refcount;$/;"	m	line:492	class:std::locale::_Impl	access:private
std::locale::_Impl::_M_remove_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_remove_reference() throw()$/;"	f	line:510	class:std::locale::_Impl	access:private	signature:()
std::locale::_Impl::locale::_S_facet_categories	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const* const _S_facet_categories[];$/;"	m	line:503	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_collate	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_collate[];$/;"	m	line:499	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_ctype	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_ctype[];$/;"	m	line:497	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_messages	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_messages[];$/;"	m	line:502	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_monetary	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_monetary[];$/;"	m	line:501	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_numeric	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_numeric[];$/;"	m	line:498	class:std::locale::_Impl::locale	access:private
std::locale::_Impl::locale::_S_id_time	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const locale::id* const	_S_id_time[];$/;"	m	line:500	class:std::locale::_Impl::locale	access:private
std::locale::_M_impl	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _Impl*		_M_impl;$/;"	m	line:285	class:std::locale	access:private
std::locale::_S_categories	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const char* const* const _S_categories;$/;"	m	line:297	class:std::locale	access:private
std::locale::_S_categories_size	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    enum { _S_categories_size = 6 + _GLIBCXX_NUM_CATEGORIES };$/;"	e	line:309	enum:std::locale::__anon2
std::locale::_S_classic	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Impl*       _S_classic;$/;"	m	line:288	class:std::locale	access:private
std::locale::_S_global	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Impl*	_S_global;$/;"	m	line:291	class:std::locale	access:private
std::locale::_S_once	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __gthread_once_t _S_once;$/;"	m	line:312	class:std::locale	access:private
std::locale::all	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category all		= (ctype | numeric | collate |$/;"	m	line:111	class:std::locale	access:public
std::locale::category	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    typedef int	category;$/;"	t	line:71	class:std::locale	access:public
std::locale::collate	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category collate	= 1L << 2;$/;"	m	line:107	class:std::locale	access:public
std::locale::ctype	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category ctype		= 1L << 0;$/;"	m	line:105	class:std::locale	access:public
std::locale::facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::facet$/;"	c	line:342	class:std::locale
std::locale::facet::_M_add_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_add_reference() const throw()$/;"	f	line:401	class:std::locale::facet	access:private	signature:() const
std::locale::facet::_M_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    mutable _Atomic_word		_M_refcount;$/;"	m	line:348	class:std::locale::facet	access:private
std::locale::facet::_M_remove_reference	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    _M_remove_reference() const throw()$/;"	f	line:405	class:std::locale::facet	access:private	signature:() const
std::locale::facet::_S_c_locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __c_locale                   _S_c_locale;$/;"	m	line:351	class:std::locale::facet	access:private
std::locale::facet::_S_c_name	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const char			_S_c_name[2];$/;"	m	line:354	class:std::locale::facet	access:private
std::locale::facet::_S_once	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static __gthread_once_t		_S_once;$/;"	m	line:357	class:std::locale::facet	access:private
std::locale::facet::facet	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    facet(size_t __refs = 0) throw() : _M_refcount(__refs ? 1 : 0)$/;"	f	line:374	class:std::locale::facet	access:protected	signature:(size_t __refs = 0)
std::locale::id	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^  class locale::id$/;"	c	line:433	class:std::locale
std::locale::id::_M_index	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    mutable size_t		_M_index;$/;"	m	line:450	class:std::locale::id	access:private
std::locale::id::_S_refcount	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static _Atomic_word		_S_refcount;$/;"	m	line:453	class:std::locale::id	access:private
std::locale::id::id	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    id() { }$/;"	f	line:464	class:std::locale::id	access:public	signature:()
std::locale::locale	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    locale::locale(const locale& __other, _Facet* __f)$/;"	f	line:565	class:std::locale	signature:(const locale& __other, _Facet* __f)
std::locale::messages	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category messages	= 1L << 5;$/;"	m	line:110	class:std::locale	access:public
std::locale::monetary	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category monetary	= 1L << 4;$/;"	m	line:109	class:std::locale	access:public
std::locale::none	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category none		= 0;$/;"	m	line:104	class:std::locale	access:public
std::locale::numeric	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category numeric	= 1L << 1;$/;"	m	line:106	class:std::locale	access:public
std::locale::operator !=	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    operator!=(const locale& __other) const throw ()$/;"	f	line:240	class:std::locale	access:public	signature:(const locale& __other) const
std::locale::time	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category time		= 1L << 3;$/;"	m	line:108	class:std::locale	access:public
std::logical_and	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_and : public binary_function<_Tp, _Tp, bool>$/;"	s	line:257	namespace:std	inherits:binary_function
std::logical_and::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:260	struct:std::logical_and	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::logical_not	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_not : public unary_function<_Tp, bool>$/;"	s	line:275	namespace:std	inherits:unary_function
std::logical_not::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:278	struct:std::logical_not	access:public	signature:(const _Tp& __x) const
std::logical_or	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct logical_or : public binary_function<_Tp, _Tp, bool>$/;"	s	line:266	namespace:std	inherits:binary_function
std::logical_or::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:269	struct:std::logical_or	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::lower_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2884	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
std::lower_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    lower_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2934	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
std::make_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:344	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::make_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:384	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::make_pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    make_pair(_T1 __x, _T2 __y)$/;"	f	line:144	namespace:std	signature:(_T1 __x, _T2 __y)
std::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    class map$/;"	c	line:93	namespace:std
std::map::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:104	class:std::map	access:private
std::map::_M_t	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      _Rep_type _M_t;$/;"	m	line:135	class:std::map	access:private
std::map::_Pair_alloc_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        _Pair_alloc_type;$/;"	t	line:129	class:std::map	access:private
std::map::_Rep_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	line:132	class:std::map	access:private
std::map::allocator_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	line:100	class:std::map	access:public
std::map::at	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      at(const key_type& __k) const$/;"	f	line:373	class:std::map	access:public	signature:(const key_type& __k) const
std::map::at	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      at(const key_type& __k)$/;"	f	line:364	class:std::map	access:public	signature:(const key_type& __k)
std::map::begin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      begin() const$/;"	f	line:253	class:std::map	access:public	signature:() const
std::map::begin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      begin()$/;"	f	line:244	class:std::map	access:public	signature:()
std::map::clear	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      clear()$/;"	f	line:508	class:std::map	access:public	signature:()
std::map::const_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	line:145	class:std::map	access:public
std::map::const_pointer	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	line:141	class:std::map	access:public
std::map::const_reference	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	line:143	class:std::map	access:public
std::map::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	line:149	class:std::map	access:public
std::map::count	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      count(const key_type& __x) const$/;"	f	line:568	class:std::map	access:public	signature:(const key_type& __x) const
std::map::difference_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	line:147	class:std::map	access:public
std::map::empty	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      empty() const$/;"	f	line:315	class:std::map	access:public	signature:() const
std::map::end	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      end() const$/;"	f	line:271	class:std::map	access:public	signature:() const
std::map::end	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      end()$/;"	f	line:262	class:std::map	access:public	signature:()
std::map::equal_range	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      equal_range(const key_type& __x) const$/;"	f	line:656	class:std::map	access:public	signature:(const key_type& __x) const
std::map::equal_range	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      equal_range(const key_type& __x)$/;"	f	line:637	class:std::map	access:public	signature:(const key_type& __x)
std::map::erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(const key_type& __x)$/;"	f	line:468	class:std::map	access:public	signature:(const key_type& __x)
std::map::erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:483	class:std::map	access:public	signature:(iterator __first, iterator __last)
std::map::erase	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      erase(iterator __position)$/;"	f	line:453	class:std::map	access:public	signature:(iterator __position)
std::map::find	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      find(const key_type& __x) const$/;"	f	line:556	class:std::map	access:public	signature:(const key_type& __x) const
std::map::find	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      find(const key_type& __x)$/;"	f	line:541	class:std::map	access:public	signature:(const key_type& __x)
std::map::get_allocator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      get_allocator() const$/;"	f	line:234	class:std::map	access:public	signature:() const
std::map::insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:439	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::map::insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      insert(const value_type& __x)$/;"	f	line:399	class:std::map	access:public	signature:(const value_type& __x)
std::map::insert	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:426	class:std::map	access:public	signature:(iterator __position, const value_type& __x)
std::map::iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	line:144	class:std::map	access:public
std::map::key_comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      key_comp() const$/;"	f	line:517	class:std::map	access:public	signature:() const
std::map::key_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Compare                                      key_compare;$/;"	t	line:99	class:std::map	access:public
std::map::key_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Key                                          key_type;$/;"	t	line:96	class:std::map	access:public
std::map::lower_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:598	class:std::map	access:public	signature:(const key_type& __x) const
std::map::lower_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      lower_bound(const key_type& __x)$/;"	f	line:583	class:std::map	access:public	signature:(const key_type& __x)
std::map::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last)$/;"	f	line:188	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::map::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^        map(_InputIterator __first, _InputIterator __last,$/;"	f	line:204	class:std::map	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
std::map::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map()$/;"	f	line:157	class:std::map	access:public	signature:()
std::map::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map(const _Compare& __comp, const allocator_type& __a = allocator_type())$/;"	f	line:165	class:std::map	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
std::map::map	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      map(const map& __x)$/;"	f	line:175	class:std::map	access:public	signature:(const map& __x)
std::map::mapped_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef _Tp                                           mapped_type;$/;"	t	line:97	class:std::map	access:public
std::map::max_size	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      max_size() const$/;"	f	line:325	class:std::map	access:public	signature:() const
std::map::operator =	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      operator=(const map& __x)$/;"	f	line:226	class:std::map	access:public	signature:(const map& __x)
std::map::operator []	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      operator[](const key_type& __k)$/;"	f	line:342	class:std::map	access:public	signature:(const key_type& __k)
std::map::pointer	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	line:140	class:std::map	access:public
std::map::rbegin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rbegin() const$/;"	f	line:289	class:std::map	access:public	signature:() const
std::map::rbegin	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rbegin()$/;"	f	line:280	class:std::map	access:public	signature:()
std::map::reference	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	line:142	class:std::map	access:public
std::map::rend	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rend() const$/;"	f	line:307	class:std::map	access:public	signature:() const
std::map::rend	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      rend()$/;"	f	line:298	class:std::map	access:public	signature:()
std::map::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	line:148	class:std::map	access:public
std::map::size	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      size() const$/;"	f	line:320	class:std::map	access:public	signature:() const
std::map::size_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	line:146	class:std::map	access:public
std::map::swap	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      swap(map& __x)$/;"	f	line:498	class:std::map	access:public	signature:(map& __x)
std::map::upper_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:618	class:std::map	access:public	signature:(const key_type& __x) const
std::map::upper_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      upper_bound(const key_type& __x)$/;"	f	line:608	class:std::map	access:public	signature:(const key_type& __x)
std::map::value_comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      value_comp() const$/;"	f	line:525	class:std::map	access:public	signature:() const
std::map::value_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      class value_compare$/;"	c	line:111	class:std::map	inherits:std::binary_function	access:public
std::map::value_compare::comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	_Compare comp;$/;"	m	line:116	class:std::map::value_compare	access:protected
std::map::value_compare::operator ()	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	line:122	class:std::map::value_compare	access:public	signature:(const value_type& __x, const value_type& __y) const
std::map::value_compare::value_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	value_compare(_Compare __c)$/;"	f	line:118	class:std::map::value_compare	access:protected	signature:(_Compare __c)
std::map::value_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	line:98	class:std::map	access:public
std::mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    class mask_array$/;"	c	line:61	namespace:std
std::mask_array::_M_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const _Array<_Tp>  _M_array;$/;"	m	line:131	class:std::mask_array	access:private
std::mask_array::_M_mask	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const _Array<bool> _M_mask;$/;"	m	line:130	class:std::mask_array	access:private
std::mask_array::_M_sz	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      const size_t       _M_sz;$/;"	m	line:129	class:std::mask_array	access:private
std::mask_array::mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    inline mask_array<_Tp>::mask_array(const mask_array<_Tp>& a)$/;"	f	line:138	class:std::mask_array	signature:(const mask_array<_Tp>& a)
std::mask_array::mask_array	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::mask_array(_Array<_Tp> __a, size_t __s, _Array<bool> __m)$/;"	f	line:143	class:std::mask_array	signature:(_Array<_Tp> __a, size_t __s, _Array<bool> __m)
std::mask_array::operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      mask_array<_Tp>::operator=(const _Expr<_Ex, _Tp>& __e) const$/;"	f	line:168	class:std::mask_array	signature:(const _Expr<_Ex, _Tp>& __e) const
std::mask_array::operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:157	class:std::mask_array	signature:(const _Tp& __t) const
std::mask_array::operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const mask_array<_Tp>& __a)$/;"	f	line:148	class:std::mask_array	signature:(const mask_array<_Tp>& __a)
std::mask_array::operator =	/home/damian/.vim/tags/cpp_src/mask_array.h	/^    mask_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:162	class:std::mask_array	signature:(const valarray<_Tp>& __v) const
std::mask_array::value_type	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      typedef _Tp value_type;$/;"	t	line:64	class:std::mask_array	access:public
std::max	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b)$/;"	f	line:204	namespace:std	signature:(const _Tp& __a, const _Tp& __b)
std::max	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    max(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	line:246	namespace:std	signature:(const _Tp& __a, const _Tp& __b, _Compare __comp)
std::max_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:4881	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::max_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    max_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4908	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)
std::mem_fun1_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret>$/;"	c	line:679	namespace:std	inherits:binary_function
std::mem_fun1_ref_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	line:690	class:std::mem_fun1_ref_t	access:private
std::mem_fun1_ref_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	line:683	class:std::mem_fun1_ref_t	access:public	signature:(_Tp::*__pf)
std::mem_fun1_ref_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __r, _Arg __x) const$/;"	f	line:687	class:std::mem_fun1_ref_t	access:public	signature:(_Tp& __r, _Arg __x) const
std::mem_fun1_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun1_t : public binary_function<_Tp*, _Arg, _Ret>$/;"	c	line:647	namespace:std	inherits:binary_function
std::mem_fun1_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)(_Arg);$/;"	m	line:658	class:std::mem_fun1_t	access:private
std::mem_fun1_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun1_t(_Ret (_Tp::*__pf)(_Arg))$/;"	f	line:651	class:std::mem_fun1_t	access:public	signature:(_Tp::*__pf)
std::mem_fun1_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp* __p, _Arg __x) const$/;"	f	line:655	class:std::mem_fun1_t	access:public	signature:(_Tp* __p, _Arg __x) const
std::mem_fun_ref_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun_ref_t : public unary_function<_Tp, _Ret>$/;"	c	line:615	namespace:std	inherits:unary_function
std::mem_fun_ref_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	line:626	class:std::mem_fun_ref_t	access:private
std::mem_fun_ref_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun_ref_t(_Ret (_Tp::*__pf)())$/;"	f	line:619	class:std::mem_fun_ref_t	access:public	signature:(_Tp::*__pf)
std::mem_fun_ref_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp& __r) const$/;"	f	line:623	class:std::mem_fun_ref_t	access:public	signature:(_Tp& __r) const
std::mem_fun_t	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class mem_fun_t : public unary_function<_Tp*, _Ret>$/;"	c	line:583	namespace:std	inherits:unary_function
std::mem_fun_t::_M_f	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Ret (_Tp::*_M_f)();$/;"	m	line:594	class:std::mem_fun_t	access:private
std::mem_fun_t::_Ret	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      mem_fun_t(_Ret (_Tp::*__pf)())$/;"	f	line:587	class:std::mem_fun_t	access:public	signature:(_Tp::*__pf)
std::mem_fun_t::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Tp* __p) const$/;"	f	line:591	class:std::mem_fun_t	access:public	signature:(_Tp* __p) const
std::merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:3230	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
std::merge	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    merge(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:3291	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
std::messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class messages : public locale::facet, public messages_base$/;"	c	line:4364	namespace:std	inherits:locale::facet,messages_base
std::messages::_M_c_locale_messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __c_locale			_M_c_locale_messages;$/;"	m	line:4377	class:std::messages	access:protected
std::messages::_M_convert_from_char	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_convert_from_char(char*) const$/;"	f	line:4525	class:std::messages	access:protected	signature:(char*) const
std::messages::_M_convert_to_char	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _M_convert_to_char(const string_type& __msg) const$/;"	f	line:4517	class:std::messages	access:protected	signature:(const string_type& __msg) const
std::messages::_M_name_messages	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      const char*			_M_name_messages;$/;"	m	line:4378	class:std::messages	access:protected
std::messages::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4370	class:std::messages	access:public
std::messages::close	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      close(catalog __c) const$/;"	f	line:4466	class:std::messages	access:public	signature:(catalog __c) const
std::messages::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(catalog __c, int __set, int __msgid, const string_type& __s) const$/;"	f	line:4455	class:std::messages	access:public	signature:(catalog __c, int __set, int __msgid, const string_type& __s) const
std::messages::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4382	class:std::messages	access:public
std::messages::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id messages<_CharT>::id;$/;"	m	line:4566	class:std::messages
std::messages::open	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      open(const basic_string<char>& __s, const locale& __loc) const$/;"	f	line:4419	class:std::messages	access:public	signature:(const basic_string<char>& __s, const locale& __loc) const
std::messages::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4371	class:std::messages	access:public
std::messages_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  struct messages_base$/;"	s	line:4338	namespace:std
std::messages_base::catalog	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    typedef int catalog;$/;"	t	line:4340	struct:std::messages_base	access:public
std::messages_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class messages_byname : public messages<_CharT>$/;"	c	line:4581	namespace:std	inherits:messages
std::messages_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4584	class:std::messages_byname	access:public
std::messages_byname::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4585	class:std::messages_byname	access:public
std::messages_byname::~messages_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~messages_byname()$/;"	f	line:4592	class:std::messages_byname	access:protected	signature:()
std::min	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b)$/;"	f	line:182	namespace:std	signature:(const _Tp& __a, const _Tp& __b)
std::min	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    min(const _Tp& __a, const _Tp& __b, _Compare __comp)$/;"	f	line:226	namespace:std	signature:(const _Tp& __a, const _Tp& __b, _Compare __comp)
std::min_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:4933	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::min_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    min_element(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:4960	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Compare __comp)
std::minus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct minus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:143	namespace:std	inherits:binary_function
std::minus::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:146	struct:std::minus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::mismatch	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:706	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2)
std::mismatch	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:742	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred)
std::modulus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct modulus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:170	namespace:std	inherits:binary_function
std::modulus::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:173	struct:std::modulus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::money_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class money_base$/;"	c	line:3522	namespace:std
std::money_base::_S_atoms	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const char* _S_atoms;$/;"	m	line:3539	class:std::money_base	access:public
std::money_base::_S_default_pattern	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    static const pattern _S_default_pattern;$/;"	m	line:3528	class:std::money_base	access:public
std::money_base::_S_end	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_end = 11$/;"	e	line:3534	enum:std::money_base::__anon5
std::money_base::_S_minus	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_minus,$/;"	e	line:3532	enum:std::money_base::__anon5
std::money_base::_S_zero	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      _S_zero,$/;"	e	line:3533	enum:std::money_base::__anon5
std::money_base::none	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
std::money_base::part	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	g	line:3525	class:std::money_base	access:public
std::money_base::pattern	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	s	line:3526	class:std::money_base	access:public
std::money_base::pattern::field	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    struct pattern { char field[4]; };$/;"	m	line:3526	struct:std::money_base::pattern	access:public
std::money_base::sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
std::money_base::space	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
std::money_base::symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
std::money_base::value	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
std::money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class money_get : public locale::facet$/;"	c	line:4045	namespace:std	inherits:locale::facet
std::money_get::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4051	class:std::money_get	access:public
std::money_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	line:4097	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, long double& __units) const
std::money_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io,$/;"	f	line:4127	class:std::money_get	access:public	signature:(iter_type __s, iter_type __end, bool __intl, ios_base& __io, ios_base::iostate& __err, string_type& __digits) const
std::money_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4057	class:std::money_get	access:public
std::money_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id money_get<_CharT, _InIter>::id;$/;"	m	line:4179	class:std::money_get
std::money_get::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:4052	class:std::money_get	access:public
std::money_get::money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:4067	class:std::money_get	access:public	signature:(size_t __refs = 0)
std::money_get::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4053	class:std::money_get	access:public
std::money_get::~money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~money_get() { }$/;"	f	line:4134	class:std::money_get	access:protected	signature:()
std::money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class money_put : public locale::facet$/;"	c	line:4194	namespace:std	inherits:locale::facet
std::money_put::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4199	class:std::money_put	access:public
std::money_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:4205	class:std::money_put	access:public
std::money_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id money_put<_CharT, _OutIter>::id;$/;"	m	line:4331	class:std::money_put
std::money_put::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:4200	class:std::money_put	access:public
std::money_put::money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      money_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:4215	class:std::money_put	access:public	signature:(size_t __refs = 0)
std::money_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	line:4235	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, long double __units) const
std::money_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, bool __intl, ios_base& __io,$/;"	f	line:4257	class:std::money_put	access:public	signature:(iter_type __s, bool __intl, ios_base& __io, char_type __fill, const string_type& __digits) const
std::money_put::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4201	class:std::money_put	access:public
std::money_put::~money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~money_put() { }$/;"	f	line:4264	class:std::money_put	access:protected	signature:()
std::moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class moneypunct : public locale::facet, public money_base$/;"	c	line:3615	namespace:std	inherits:locale::facet,money_base
std::moneypunct::_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:3627	class:std::moneypunct	access:private
std::moneypunct::__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __moneypunct_cache<_CharT, _Intl>     __cache_type;$/;"	t	line:3624	class:std::moneypunct	access:public
std::moneypunct::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3621	class:std::moneypunct	access:public
std::moneypunct::curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      curr_symbol() const$/;"	f	line:3740	class:std::moneypunct	access:public	signature:() const
std::moneypunct::decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	line:3685	class:std::moneypunct	access:public	signature:() const
std::moneypunct::do_curr_symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_curr_symbol()   const$/;"	f	line:3885	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	line:3847	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_frac_digits() const$/;"	f	line:3925	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	line:3872	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_neg_format() const$/;"	f	line:3953	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_negative_sign() const$/;"	f	line:3911	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_pos_format() const$/;"	f	line:3939	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_positive_sign() const$/;"	f	line:3898	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::do_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	line:3859	class:std::moneypunct	access:protected	signature:() const
std::moneypunct::frac_digits	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      frac_digits() const$/;"	f	line:3790	class:std::moneypunct	access:public	signature:() const
std::moneypunct::grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      grouping() const$/;"	f	line:3727	class:std::moneypunct	access:public	signature:() const
std::moneypunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3634	class:std::moneypunct	access:public
std::moneypunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id moneypunct<_CharT, _Intl>::id;$/;"	m	line:3963	class:std::moneypunct
std::moneypunct::intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const bool			intl = _Intl;$/;"	m	line:3632	class:std::moneypunct	access:public
std::moneypunct::intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const bool moneypunct<_CharT, _Intl>::intl;$/;"	m	line:3966	class:std::moneypunct
std::moneypunct::moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(__c_locale __cloc, const char* __s, size_t __refs = 0)$/;"	f	line:3671	class:std::moneypunct	access:public	signature:(__c_locale __cloc, const char* __s, size_t __refs = 0)
std::moneypunct::moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	line:3656	class:std::moneypunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)
std::moneypunct::moneypunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	line:3644	class:std::moneypunct	access:public	signature:(size_t __refs = 0)
std::moneypunct::neg_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      neg_format() const$/;"	f	line:3829	class:std::moneypunct	access:public	signature:() const
std::moneypunct::negative_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      negative_sign() const$/;"	f	line:3774	class:std::moneypunct	access:public	signature:() const
std::moneypunct::pos_format	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      pos_format() const$/;"	f	line:3825	class:std::moneypunct	access:public	signature:() const
std::moneypunct::positive_sign	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      positive_sign() const$/;"	f	line:3757	class:std::moneypunct	access:public	signature:() const
std::moneypunct::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:3622	class:std::moneypunct	access:public
std::moneypunct::thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	line:3698	class:std::moneypunct	access:public	signature:() const
std::moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class moneypunct_byname : public moneypunct<_CharT, _Intl>$/;"	c	line:4002	namespace:std	inherits:moneypunct
std::moneypunct_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:4005	class:std::moneypunct_byname	access:public
std::moneypunct_byname::intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const bool intl = _Intl;$/;"	m	line:4008	class:std::moneypunct_byname	access:public
std::moneypunct_byname::intl	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    const bool moneypunct_byname<_CharT, _Intl>::intl;$/;"	m	line:4029	class:std::moneypunct_byname
std::moneypunct_byname::moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      moneypunct_byname(const char* __s, size_t __refs = 0)$/;"	f	line:4011	class:std::moneypunct_byname	access:public	signature:(const char* __s, size_t __refs = 0)
std::moneypunct_byname::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4006	class:std::moneypunct_byname	access:public
std::moneypunct_byname::~moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~moneypunct_byname() { }$/;"	f	line:4025	class:std::moneypunct_byname	access:protected	signature:()
std::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    class multimap$/;"	c	line:92	namespace:std
std::multimap::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:103	class:std::multimap	access:private
std::multimap::_M_t	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      _Rep_type _M_t;$/;"	m	line:133	class:std::multimap	access:private
std::multimap::_Pair_alloc_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        _Pair_alloc_type;$/;"	t	line:128	class:std::multimap	access:private
std::multimap::_Rep_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^		       key_compare, _Pair_alloc_type> _Rep_type;$/;"	t	line:131	class:std::multimap	access:private
std::multimap::allocator_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Alloc                                        allocator_type;$/;"	t	line:99	class:std::multimap	access:public
std::multimap::begin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      begin() const$/;"	f	line:252	class:std::multimap	access:public	signature:() const
std::multimap::begin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      begin()$/;"	f	line:243	class:std::multimap	access:public	signature:()
std::multimap::clear	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      clear()$/;"	f	line:445	class:std::multimap	access:public	signature:()
std::multimap::const_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_iterator         const_iterator;$/;"	t	line:143	class:std::multimap	access:public
std::multimap::const_pointer	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_pointer   const_pointer;$/;"	t	line:139	class:std::multimap	access:public
std::multimap::const_reference	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::const_reference const_reference;$/;"	t	line:141	class:std::multimap	access:public
std::multimap::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::const_reverse_iterator const_reverse_iterator;$/;"	t	line:147	class:std::multimap	access:public
std::multimap::count	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      count(const key_type& __x) const$/;"	f	line:502	class:std::multimap	access:public	signature:(const key_type& __x) const
std::multimap::difference_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::difference_type        difference_type;$/;"	t	line:145	class:std::multimap	access:public
std::multimap::empty	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      empty() const$/;"	f	line:312	class:std::multimap	access:public	signature:() const
std::multimap::end	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      end() const$/;"	f	line:270	class:std::multimap	access:public	signature:() const
std::multimap::end	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      end()$/;"	f	line:261	class:std::multimap	access:public	signature:()
std::multimap::equal_range	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x) const$/;"	f	line:586	class:std::multimap	access:public	signature:(const key_type& __x) const
std::multimap::equal_range	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      equal_range(const key_type& __x)$/;"	f	line:569	class:std::multimap	access:public	signature:(const key_type& __x)
std::multimap::erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(const key_type& __x)$/;"	f	line:405	class:std::multimap	access:public	signature:(const key_type& __x)
std::multimap::erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:420	class:std::multimap	access:public	signature:(iterator __first, iterator __last)
std::multimap::erase	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      erase(iterator __position)$/;"	f	line:390	class:std::multimap	access:public	signature:(iterator __position)
std::multimap::find	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      find(const key_type& __x) const$/;"	f	line:493	class:std::multimap	access:public	signature:(const key_type& __x) const
std::multimap::find	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      find(const key_type& __x)$/;"	f	line:478	class:std::multimap	access:public	signature:(const key_type& __x)
std::multimap::get_allocator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      get_allocator() const$/;"	f	line:233	class:std::multimap	access:public	signature:() const
std::multimap::insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:376	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::multimap::insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      insert(const value_type& __x)$/;"	f	line:339	class:std::multimap	access:public	signature:(const value_type& __x)
std::multimap::insert	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:363	class:std::multimap	access:public	signature:(iterator __position, const value_type& __x)
std::multimap::iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::iterator               iterator;$/;"	t	line:142	class:std::multimap	access:public
std::multimap::key_comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      key_comp() const$/;"	f	line:454	class:std::multimap	access:public	signature:() const
std::multimap::key_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Compare                                      key_compare;$/;"	t	line:98	class:std::multimap	access:public
std::multimap::key_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Key                                          key_type;$/;"	t	line:95	class:std::multimap	access:public
std::multimap::lower_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:532	class:std::multimap	access:public	signature:(const key_type& __x) const
std::multimap::lower_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      lower_bound(const key_type& __x)$/;"	f	line:517	class:std::multimap	access:public	signature:(const key_type& __x)
std::multimap::mapped_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef _Tp                                           mapped_type;$/;"	t	line:96	class:std::multimap	access:public
std::multimap::max_size	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      max_size() const$/;"	f	line:322	class:std::multimap	access:public	signature:() const
std::multimap::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last)$/;"	f	line:186	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::multimap::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^        multimap(_InputIterator __first, _InputIterator __last,$/;"	f	line:202	class:std::multimap	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
std::multimap::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap()$/;"	f	line:154	class:std::multimap	access:public	signature:()
std::multimap::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap(const _Compare& __comp,$/;"	f	line:162	class:std::multimap	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
std::multimap::multimap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      multimap(const multimap& __x)$/;"	f	line:173	class:std::multimap	access:public	signature:(const multimap& __x)
std::multimap::operator =	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      operator=(const multimap& __x)$/;"	f	line:225	class:std::multimap	access:public	signature:(const multimap& __x)
std::multimap::pointer	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::pointer         pointer;$/;"	t	line:138	class:std::multimap	access:public
std::multimap::rbegin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rbegin() const$/;"	f	line:288	class:std::multimap	access:public	signature:() const
std::multimap::rbegin	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rbegin()$/;"	f	line:279	class:std::multimap	access:public	signature:()
std::multimap::reference	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Pair_alloc_type::reference       reference;$/;"	t	line:140	class:std::multimap	access:public
std::multimap::rend	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rend() const$/;"	f	line:306	class:std::multimap	access:public	signature:() const
std::multimap::rend	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      rend()$/;"	f	line:297	class:std::multimap	access:public	signature:()
std::multimap::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::reverse_iterator       reverse_iterator;$/;"	t	line:146	class:std::multimap	access:public
std::multimap::size	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      size() const$/;"	f	line:317	class:std::multimap	access:public	signature:() const
std::multimap::size_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef typename _Rep_type::size_type              size_type;$/;"	t	line:144	class:std::multimap	access:public
std::multimap::swap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      swap(multimap& __x)$/;"	f	line:435	class:std::multimap	access:public	signature:(multimap& __x)
std::multimap::upper_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:552	class:std::multimap	access:public	signature:(const key_type& __x) const
std::multimap::upper_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x)$/;"	f	line:542	class:std::multimap	access:public	signature:(const key_type& __x)
std::multimap::value_comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      value_comp() const$/;"	f	line:462	class:std::multimap	access:public	signature:() const
std::multimap::value_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      class value_compare$/;"	c	line:110	class:std::multimap	inherits:std::binary_function	access:public
std::multimap::value_compare::comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	_Compare comp;$/;"	m	line:115	class:std::multimap::value_compare	access:protected
std::multimap::value_compare::operator ()	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	bool operator()(const value_type& __x, const value_type& __y) const$/;"	f	line:121	class:std::multimap::value_compare	access:public	signature:(const value_type& __x, const value_type& __y) const
std::multimap::value_compare::value_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	value_compare(_Compare __c)$/;"	f	line:117	class:std::multimap::value_compare	access:protected	signature:(_Compare __c)
std::multimap::value_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	line:97	class:std::multimap	access:public
std::multiplies	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct multiplies : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:152	namespace:std	inherits:binary_function
std::multiplies::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:155	struct:std::multiplies	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    class multiset$/;"	c	line:90	namespace:std
std::multiset::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:93	class:std::multiset	access:private
std::multiset::_Key_alloc_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	line:109	class:std::multiset	access:private
std::multiset::_M_t	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      _Rep_type _M_t;$/;"	m	line:114	class:std::multiset	access:private
std::multiset::_Rep_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	line:112	class:std::multiset	access:private
std::multiset::allocator_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Alloc   allocator_type;$/;"	t	line:105	class:std::multiset	access:public
std::multiset::begin	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      begin() const$/;"	f	line:221	class:std::multiset	access:public	signature:() const
std::multiset::clear	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      clear()$/;"	f	line:385	class:std::multiset	access:public	signature:()
std::multiset::const_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	line:125	class:std::multiset	access:public
std::multiset::const_pointer	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	line:118	class:std::multiset	access:public
std::multiset::const_reference	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	line:120	class:std::multiset	access:public
std::multiset::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	line:127	class:std::multiset	access:public
std::multiset::count	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      count(const key_type& __x) const$/;"	f	line:396	class:std::multiset	access:public	signature:(const key_type& __x) const
std::multiset::difference_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	line:129	class:std::multiset	access:public
std::multiset::empty	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      empty() const$/;"	f	line:253	class:std::multiset	access:public	signature:() const
std::multiset::end	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      end() const$/;"	f	line:230	class:std::multiset	access:public	signature:() const
std::multiset::equal_range	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x) const$/;"	f	line:480	class:std::multiset	access:public	signature:(const key_type& __x) const
std::multiset::equal_range	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      equal_range(const key_type& __x)$/;"	f	line:476	class:std::multiset	access:public	signature:(const key_type& __x)
std::multiset::erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(const key_type& __x)$/;"	f	line:360	class:std::multiset	access:public	signature:(const key_type& __x)
std::multiset::erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:375	class:std::multiset	access:public	signature:(iterator __first, iterator __last)
std::multiset::erase	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      erase(iterator __position)$/;"	f	line:345	class:std::multiset	access:public	signature:(iterator __position)
std::multiset::find	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      find(const key_type& __x) const$/;"	f	line:418	class:std::multiset	access:public	signature:(const key_type& __x) const
std::multiset::find	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      find(const key_type& __x)$/;"	f	line:414	class:std::multiset	access:public	signature:(const key_type& __x)
std::multiset::get_allocator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      get_allocator() const$/;"	f	line:212	class:std::multiset	access:public	signature:() const
std::multiset::insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:331	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::multiset::insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      insert(const value_type& __x)$/;"	f	line:294	class:std::multiset	access:public	signature:(const value_type& __x)
std::multiset::insert	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:318	class:std::multiset	access:public	signature:(iterator __position, const value_type& __x)
std::multiset::iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	line:124	class:std::multiset	access:public
std::multiset::key_comp	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      key_comp() const$/;"	f	line:204	class:std::multiset	access:public	signature:() const
std::multiset::key_compare	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Compare key_compare;$/;"	t	line:103	class:std::multiset	access:public
std::multiset::key_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Key     key_type;$/;"	t	line:101	class:std::multiset	access:public
std::multiset::lower_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:439	class:std::multiset	access:public	signature:(const key_type& __x) const
std::multiset::lower_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      lower_bound(const key_type& __x)$/;"	f	line:435	class:std::multiset	access:public	signature:(const key_type& __x)
std::multiset::max_size	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      max_size() const$/;"	f	line:263	class:std::multiset	access:public	signature:() const
std::multiset::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last)$/;"	f	line:154	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::multiset::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^        multiset(_InputIterator __first, _InputIterator __last,$/;"	f	line:170	class:std::multiset	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
std::multiset::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset()$/;"	f	line:136	class:std::multiset	access:public	signature:()
std::multiset::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset(const _Compare& __comp,$/;"	f	line:140	class:std::multiset	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
std::multiset::multiset	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      multiset(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	line:183	class:std::multiset	access:public	signature:(const multiset<_Key,_Compare,_Alloc>& __x)
std::multiset::operator =	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      operator=(const multiset<_Key,_Compare,_Alloc>& __x)$/;"	f	line:194	class:std::multiset	access:public	signature:(const multiset<_Key,_Compare,_Alloc>& __x)
std::multiset::pointer	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	line:117	class:std::multiset	access:public
std::multiset::rbegin	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      rbegin() const$/;"	f	line:239	class:std::multiset	access:public	signature:() const
std::multiset::reference	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	line:119	class:std::multiset	access:public
std::multiset::rend	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      rend() const$/;"	f	line:248	class:std::multiset	access:public	signature:() const
std::multiset::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	line:126	class:std::multiset	access:public
std::multiset::size	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      size() const$/;"	f	line:258	class:std::multiset	access:public	signature:() const
std::multiset::size_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	line:128	class:std::multiset	access:public
std::multiset::swap	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      swap(multiset<_Key, _Compare, _Alloc>& __x)$/;"	f	line:278	class:std::multiset	access:public	signature:(multiset<_Key, _Compare, _Alloc>& __x)
std::multiset::upper_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:455	class:std::multiset	access:public	signature:(const key_type& __x) const
std::multiset::upper_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x)$/;"	f	line:451	class:std::multiset	access:public	signature:(const key_type& __x)
std::multiset::value_comp	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      value_comp() const$/;"	f	line:208	class:std::multiset	access:public	signature:() const
std::multiset::value_compare	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Compare value_compare;$/;"	t	line:104	class:std::multiset	access:public
std::multiset::value_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Key     value_type;$/;"	t	line:102	class:std::multiset	access:public
std::negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct negate : public unary_function<_Tp, _Tp>$/;"	s	line:179	namespace:std	inherits:unary_function
std::negate::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x) const$/;"	f	line:182	struct:std::negate	access:public	signature:(const _Tp& __x) const
std::next_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	line:4995	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
std::next_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    next_permutation(_BidirectionalIterator __first,$/;"	f	line:5051	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)
std::noboolalpha	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noboolalpha(ios_base& __base)$/;"	f	line:796	namespace:std	signature:(ios_base& __base)
std::noshowbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowbase(ios_base& __base)$/;"	f	line:812	namespace:std	signature:(ios_base& __base)
std::noshowpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowpoint(ios_base& __base)$/;"	f	line:828	namespace:std	signature:(ios_base& __base)
std::noshowpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noshowpos(ios_base& __base)$/;"	f	line:844	namespace:std	signature:(ios_base& __base)
std::noskipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  noskipws(ios_base& __base)$/;"	f	line:860	namespace:std	signature:(ios_base& __base)
std::not1	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    not1(const _Predicate& __pred)$/;"	f	line:329	namespace:std	signature:(const _Predicate& __pred)
std::not2	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    not2(const _Predicate& __pred)$/;"	f	line:355	namespace:std	signature:(const _Predicate& __pred)
std::not_equal_to	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct not_equal_to : public binary_function<_Tp, _Tp, bool>$/;"	s	line:205	namespace:std	inherits:binary_function
std::not_equal_to::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:208	struct:std::not_equal_to	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::nounitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  nounitbuf(ios_base& __base)$/;"	f	line:892	namespace:std	signature:(ios_base& __base)
std::nouppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  nouppercase(ios_base& __base)$/;"	f	line:876	namespace:std	signature:(ios_base& __base)
std::nth_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:4032	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last)
std::nth_element	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,$/;"	f	line:4070	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __nth, _RandomAccessIterator __last, _Compare __comp)
std::num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class num_get : public locale::facet$/;"	c	line:1932	namespace:std	inherits:locale::facet
std::num_get::_M_find	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _M_find(const _CharT2* __zero, size_t __len, _CharT2 __c) const$/;"	f	line:2158	class:std::num_get	access:protected	signature:(const _CharT2* __zero, size_t __len, _CharT2 __c) const
std::num_get::_M_find	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^        _M_find(const _CharT2*, size_t __len, _CharT2 __c) const$/;"	f	line:2135	class:std::num_get	access:protected	signature:(const _CharT2*, size_t __len, _CharT2 __c) const
std::num_get::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1938	class:std::num_get	access:public
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:1979	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, bool& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2015	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2020	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned short& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2025	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned int& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2030	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned long& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2036	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long long& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2041	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, unsigned long long& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2074	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, float& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2079	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, double& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2084	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, long double& __v) const
std::num_get::get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get(iter_type __in, iter_type __end, ios_base& __io,$/;"	f	line:2116	class:std::num_get	access:public	signature:(iter_type __in, iter_type __end, ios_base& __io, ios_base::iostate& __err, void*& __v) const
std::num_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:1943	class:std::num_get	access:public
std::num_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id num_get<_CharT, _InIter>::id;$/;"	m	line:2248	class:std::num_get
std::num_get::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:1939	class:std::num_get	access:public
std::num_get::num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      num_get(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:1953	class:std::num_get	access:public	signature:(size_t __refs = 0)
std::num_get::~num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      virtual ~num_get() { }$/;"	f	line:2122	class:std::num_get	access:protected	signature:()
std::num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class num_put : public locale::facet$/;"	c	line:2263	namespace:std	inherits:locale::facet
std::num_put::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT		char_type;$/;"	t	line:2269	class:std::num_put	access:public
std::num_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id		id;$/;"	m	line:2274	class:std::num_put	access:public
std::num_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id num_put<_CharT, _OutIter>::id;$/;"	m	line:2520	class:std::num_put
std::num_put::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter		iter_type;$/;"	t	line:2270	class:std::num_put	access:public
std::num_put::num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      num_put(size_t __refs = 0) : facet(__refs) { }$/;"	f	line:2284	class:std::num_put	access:public	signature:(size_t __refs = 0)
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, bool __v) const$/;"	f	line:2302	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, bool __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, double __v) const$/;"	f	line:2407	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, double __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long __v) const$/;"	f	line:2344	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill, long long __v) const$/;"	f	line:2354	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long long __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2348	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, unsigned long __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2358	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, unsigned long long __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2411	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, long double __v) const
std::num_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __f, char_type __fill,$/;"	f	line:2432	class:std::num_put	access:public	signature:(iter_type __s, ios_base& __f, char_type __fill, const void* __v) const
std::num_put::~num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~num_put() { };$/;"	f	line:2463	class:std::num_put	access:protected	signature:()
std::numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class numpunct : public locale::facet$/;"	c	line:1662	namespace:std	inherits:locale::facet
std::numpunct::_M_data	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      __cache_type*			_M_data;$/;"	m	line:1674	class:std::numpunct	access:protected
std::numpunct::__cache_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef __numpunct_cache<_CharT>  __cache_type;$/;"	t	line:1671	class:std::numpunct	access:public
std::numpunct::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1668	class:std::numpunct	access:public
std::numpunct::decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      decimal_point() const$/;"	f	line:1727	class:std::numpunct	access:public	signature:() const
std::numpunct::do_decimal_point	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_decimal_point() const$/;"	f	line:1814	class:std::numpunct	access:protected	signature:() const
std::numpunct::do_falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_falsename() const$/;"	f	line:1865	class:std::numpunct	access:protected	signature:() const
std::numpunct::do_grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_grouping() const$/;"	f	line:1839	class:std::numpunct	access:protected	signature:() const
std::numpunct::do_thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_thousands_sep() const$/;"	f	line:1826	class:std::numpunct	access:protected	signature:() const
std::numpunct::do_truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      do_truename() const$/;"	f	line:1852	class:std::numpunct	access:protected	signature:() const
std::numpunct::falsename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      falsename() const$/;"	f	line:1797	class:std::numpunct	access:public	signature:() const
std::numpunct::grouping	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      grouping() const$/;"	f	line:1771	class:std::numpunct	access:public	signature:() const
std::numpunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:1678	class:std::numpunct	access:public
std::numpunct::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id numpunct<_CharT>::id;$/;"	m	line:1874	class:std::numpunct
std::numpunct::numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(__c_locale __cloc, size_t __refs = 0)$/;"	f	line:1713	class:std::numpunct	access:public	signature:(__c_locale __cloc, size_t __refs = 0)
std::numpunct::numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(__cache_type* __cache, size_t __refs = 0)$/;"	f	line:1699	class:std::numpunct	access:public	signature:(__cache_type* __cache, size_t __refs = 0)
std::numpunct::numpunct	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct(size_t __refs = 0) : facet(__refs), _M_data(NULL)$/;"	f	line:1686	class:std::numpunct	access:public	signature:(size_t __refs = 0)
std::numpunct::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:1669	class:std::numpunct	access:public
std::numpunct::thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	line:1740	class:std::numpunct	access:public	signature:() const
std::numpunct::truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      truename() const$/;"	f	line:1784	class:std::numpunct	access:public	signature:() const
std::numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class numpunct_byname : public numpunct<_CharT>$/;"	c	line:1894	namespace:std	inherits:numpunct
std::numpunct_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:1897	class:std::numpunct_byname	access:public
std::numpunct_byname::numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      numpunct_byname(const char* __s, size_t __refs = 0)$/;"	f	line:1901	class:std::numpunct_byname	access:public	signature:(const char* __s, size_t __refs = 0)
std::numpunct_byname::string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:1898	class:std::numpunct_byname	access:public
std::numpunct_byname::~numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~numpunct_byname() { }$/;"	f	line:1915	class:std::numpunct_byname	access:protected	signature:()
std::oct	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  oct(ios_base& __base)$/;"	f	line:942	namespace:std	signature:(ios_base& __base)
std::operator !=	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator!=(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	line:125	namespace:std	signature:(const allocator<_T1>&, const allocator<_T2>&)
std::operator !=	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	line:130	namespace:std	signature:(const allocator<_Tp>&, const allocator<_Tp>&)
std::operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const _CharT* __lhs,$/;"	f	line:2191	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2179	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator !=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2203	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator !=	/home/damian/.vim/tags/cpp_src/postypes.h	/^    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	line:204	namespace:std	signature:(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:256	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:263	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator!=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1575	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:294	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator!=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:344	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator!=(const _List_iterator<_Val>& __x,$/;"	f	line:271	namespace:std	signature:(const _List_iterator<_Val>& __x, const _List_const_iterator<_Val>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator!=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1232	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator!=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:706	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator!=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:636	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator!=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:531	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:109	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator!=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:263	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator!=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:545	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator!=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:238	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:774	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator!=(const _Rb_tree_iterator<_Val>& __x,$/;"	f	line:304	namespace:std	signature:(const _Rb_tree_iterator<_Val>& __x, const _Rb_tree_const_iterator<_Val>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:963	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    operator!=(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	line:135	namespace:std	signature:(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x, const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y)
std::operator !=	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	line:201	namespace:std	signature:(const istreambuf_iterator<_CharT, _Traits>& __a, const istreambuf_iterator<_CharT, _Traits>& __b)
std::operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:79	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
std::operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:157	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
std::operator &	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:119	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
std::operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:95	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
std::operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:173	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
std::operator &=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:135	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
std::operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)$/;"	f	line:2124	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
std::operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2071	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator +	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2108	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)$/;"	f	line:353	namespace:std	signature:(ptrdiff_t __n, const _Bit_const_iterator& __x)
std::operator +	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator+(ptrdiff_t __n, const _Bit_iterator& __x)$/;"	f	line:267	namespace:std	signature:(ptrdiff_t __n, const _Bit_iterator& __x)
std::operator +	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)$/;"	f	line:350	namespace:std	signature:(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)
std::operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator+(typename reverse_iterator<_Iterator>::difference_type __n,$/;"	f	line:324	namespace:std	signature:(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator>& __x)
std::operator -	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  operator-(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)$/;"	f	line:182	namespace:std	signature:(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
std::operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:327	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator -	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:339	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_Iterator>& __x,$/;"	f	line:318	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator-(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:368	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const _CharT* __lhs,$/;"	f	line:2240	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2216	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator <	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2228	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:269	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:277	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1567	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_Iterator>& __x,$/;"	f	line:288	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:338	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator<(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1225	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator<(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:699	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator<(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:629	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator<(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:524	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:102	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator<(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:257	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator<(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:538	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator<(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:232	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator<(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:764	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator <	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:956	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator <<	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<<(basic_ostream<_CharT, _Traits>& __os,$/;"	f	line:2399	namespace:std	signature:(basic_ostream<_CharT, _Traits>& __os, const basic_string<_CharT, _Traits, _Alloc>& __str)
std::operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const _CharT* __lhs,$/;"	f	line:2314	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2290	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator <=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2302	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:297	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:304	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator<=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1589	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:306	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator<=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:356	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator<=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1244	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator<=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:720	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator<=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:650	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator<=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:545	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:121	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator<=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:275	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator<=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:559	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator<=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:250	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator<=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:788	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator <=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:975	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator==(const allocator<_T1>&, const allocator<_T2>&)$/;"	f	line:115	namespace:std	signature:(const allocator<_T1>&, const allocator<_T2>&)
std::operator ==	/home/damian/.vim/tags/cpp_src/allocator.h	/^    operator==(const allocator<_Tp>&, const allocator<_Tp>&)$/;"	f	line:120	namespace:std	signature:(const allocator<_Tp>&, const allocator<_Tp>&)
std::operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const _CharT* __lhs,$/;"	f	line:2154	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2142	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator ==	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2166	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator ==	/home/damian/.vim/tags/cpp_src/postypes.h	/^    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)$/;"	f	line:199	namespace:std	signature:(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:243	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:250	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator==(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1549	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_Iterator>& __x,$/;"	f	line:282	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator==(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:332	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator==(const _List_iterator<_Val>& __x,$/;"	f	line:265	namespace:std	signature:(const _List_iterator<_Val>& __x, const _List_const_iterator<_Val>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator==(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1196	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator==(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:682	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator==(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:612	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator==(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:507	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:96	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator==(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:239	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator==(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:521	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator==(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:214	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator==(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:754	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator==(const _Rb_tree_iterator<_Val>& __x,$/;"	f	line:298	namespace:std	signature:(const _Rb_tree_iterator<_Val>& __x, const _Rb_tree_const_iterator<_Val>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:939	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    operator==(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x,$/;"	f	line:128	namespace:std	signature:(const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __x, const istream_iterator<_Tp, _CharT, _Traits, _Dist>& __y)
std::operator ==	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    operator==(const istreambuf_iterator<_CharT, _Traits>& __a,$/;"	f	line:195	namespace:std	signature:(const istreambuf_iterator<_CharT, _Traits>& __a, const istreambuf_iterator<_CharT, _Traits>& __b)
std::operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const _CharT* __lhs,$/;"	f	line:2277	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2253	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator >	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2265	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:284	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:291	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1582	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_Iterator>& __x,$/;"	f	line:300	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:350	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator>(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1238	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator>(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:713	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator>(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:643	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator>(const multiset<_Key,_Compare,_Alloc>& __x,$/;"	f	line:538	namespace:std	signature:(const multiset<_Key,_Compare,_Alloc>& __x, const multiset<_Key,_Compare,_Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:115	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator>(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:269	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator>(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:552	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator>(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:244	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator>(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:781	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator >	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:969	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const _CharT* __lhs,$/;"	f	line:2351	namespace:std	signature:(const _CharT* __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2327	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::operator >=	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2339	namespace:std	signature:(const basic_string<_CharT, _Traits, _Alloc>& __lhs, const _CharT* __rhs)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,$/;"	f	line:310	namespace:std	signature:(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x, const _Deque_iterator<_Tp, _Ref, _Ptr>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,$/;"	f	line:317	namespace:std	signature:(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x, const _Deque_iterator<_Tp, _RefR, _PtrR>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    operator>=(const deque<_Tp, _Alloc>& __x,$/;"	f	line:1596	namespace:std	signature:(const deque<_Tp, _Alloc>& __x, const deque<_Tp, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_Iterator>& __x,$/;"	f	line:312	namespace:std	signature:(const reverse_iterator<_Iterator>& __x, const reverse_iterator<_Iterator>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    operator>=(const reverse_iterator<_IteratorL>& __x,$/;"	f	line:362	namespace:std	signature:(const reverse_iterator<_IteratorL>& __x, const reverse_iterator<_IteratorR>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    operator>=(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)$/;"	f	line:1250	namespace:std	signature:(const list<_Tp, _Alloc>& __x, const list<_Tp, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    operator>=(const map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:727	namespace:std	signature:(const map<_Key, _Tp, _Compare, _Alloc>& __x, const map<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    operator>=(const multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:657	namespace:std	signature:(const multimap<_Key, _Tp, _Compare, _Alloc>& __x, const multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    operator>=(const multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:552	namespace:std	signature:(const multiset<_Key, _Compare, _Alloc>& __x, const multiset<_Key, _Compare, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)$/;"	f	line:127	namespace:std	signature:(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    operator>=(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)$/;"	f	line:281	namespace:std	signature:(const queue<_Tp, _Seq>& __x, const queue<_Tp, _Seq>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    operator>=(const set<_Key, _Compare, _Alloc>& __x,$/;"	f	line:566	namespace:std	signature:(const set<_Key, _Compare, _Alloc>& __x, const set<_Key, _Compare, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    operator>=(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)$/;"	f	line:256	namespace:std	signature:(const stack<_Tp, _Seq>& __x, const stack<_Tp, _Seq>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    operator>=(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:795	namespace:std	signature:(const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, const _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::operator >=	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)$/;"	f	line:981	namespace:std	signature:(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
std::operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:87	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
std::operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:165	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
std::operator ^	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:127	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
std::operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:99	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
std::operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:177	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
std::operator ^=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:139	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
std::operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)$/;"	f	line:83	namespace:std	signature:(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
std::operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Iostate __a, _Ios_Iostate __b)$/;"	f	line:161	namespace:std	signature:(_Ios_Iostate __a, _Ios_Iostate __b)
std::operator |	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|(_Ios_Openmode __a, _Ios_Openmode __b)$/;"	f	line:123	namespace:std	signature:(_Ios_Openmode __a, _Ios_Openmode __b)
std::operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)$/;"	f	line:91	namespace:std	signature:(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
std::operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Iostate& __a, _Ios_Iostate __b)$/;"	f	line:169	namespace:std	signature:(_Ios_Iostate& __a, _Ios_Iostate __b)
std::operator |=	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)$/;"	f	line:131	namespace:std	signature:(_Ios_Openmode& __a, _Ios_Openmode __b)
std::operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Fmtflags __a)$/;"	f	line:103	namespace:std	signature:(_Ios_Fmtflags __a)
std::operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Iostate __a)$/;"	f	line:181	namespace:std	signature:(_Ios_Iostate __a)
std::operator ~	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  operator~(_Ios_Openmode __a)$/;"	f	line:143	namespace:std	signature:(_Ios_Openmode __a)
std::ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^    class ostream_iterator$/;"	c	line:152	namespace:std	inherits:iterator
std::ostream_iterator::_M_stream	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_type*	_M_stream;$/;"	m	line:164	class:std::ostream_iterator	access:private
std::ostream_iterator::_M_string	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      const _CharT*	_M_string;$/;"	m	line:165	class:std::ostream_iterator	access:private
std::ostream_iterator::char_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _CharT                         char_type;$/;"	t	line:158	class:std::ostream_iterator	access:public
std::ostream_iterator::operator *	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator*()$/;"	f	line:202	class:std::ostream_iterator	access:public	signature:()
std::ostream_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++()$/;"	f	line:206	class:std::ostream_iterator	access:public	signature:()
std::ostream_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator++(int)$/;"	f	line:210	class:std::ostream_iterator	access:public	signature:(int)
std::ostream_iterator::operator =	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      operator=(const _Tp& __value)$/;"	f	line:191	class:std::ostream_iterator	access:public	signature:(const _Tp& __value)
std::ostream_iterator::ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(const ostream_iterator& __obj)$/;"	f	line:185	class:std::ostream_iterator	access:public	signature:(const ostream_iterator& __obj)
std::ostream_iterator::ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s) : _M_stream(&__s), _M_string(0) {}$/;"	f	line:169	class:std::ostream_iterator	access:public	signature:(ostream_type& __s)
std::ostream_iterator::ostream_iterator	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      ostream_iterator(ostream_type& __s, const _CharT* __c)$/;"	f	line:181	class:std::ostream_iterator	access:public	signature:(ostream_type& __s, const _CharT* __c)
std::ostream_iterator::ostream_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef basic_ostream<_CharT, _Traits> ostream_type;$/;"	t	line:160	class:std::ostream_iterator	access:public
std::ostream_iterator::traits_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	line:159	class:std::ostream_iterator	access:public
std::ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^    class ostreambuf_iterator$/;"	c	line:207	namespace:std	inherits:iterator
std::ostreambuf_iterator::_M_failed	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      bool		_M_failed;$/;"	m	line:228	class:std::ostreambuf_iterator	access:private
std::ostreambuf_iterator::_M_put	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      _M_put(const _CharT* __ws, streamsize __len)$/;"	f	line:270	class:std::ostreambuf_iterator	access:public	signature:(const _CharT* __ws, streamsize __len)
std::ostreambuf_iterator::_M_sbuf	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      streambuf_type*	_M_sbuf;$/;"	m	line:227	class:std::ostreambuf_iterator	access:private
std::ostreambuf_iterator::char_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _CharT                           char_type;$/;"	t	line:214	class:std::ostreambuf_iterator	access:public
std::ostreambuf_iterator::failed	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      failed() const throw()$/;"	f	line:266	class:std::ostreambuf_iterator	access:public	signature:() const
std::ostreambuf_iterator::operator *	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator*()$/;"	f	line:251	class:std::ostreambuf_iterator	access:public	signature:()
std::ostreambuf_iterator::operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++()$/;"	f	line:261	class:std::ostreambuf_iterator	access:public	signature:()
std::ostreambuf_iterator::operator ++	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator++(int)$/;"	f	line:256	class:std::ostreambuf_iterator	access:public	signature:(int)
std::ostreambuf_iterator::operator =	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      operator=(_CharT __c)$/;"	f	line:241	class:std::ostreambuf_iterator	access:public	signature:(_CharT __c)
std::ostreambuf_iterator::ostream_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_ostream<_CharT, _Traits>   ostream_type;$/;"	t	line:217	class:std::ostreambuf_iterator	access:public
std::ostreambuf_iterator::ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(ostream_type& __s) throw ()$/;"	f	line:232	class:std::ostreambuf_iterator	access:public	signature:(ostream_type& __s)
std::ostreambuf_iterator::ostreambuf_iterator	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      ostreambuf_iterator(streambuf_type* __s) throw ()$/;"	f	line:236	class:std::ostreambuf_iterator	access:public	signature:(streambuf_type* __s)
std::ostreambuf_iterator::streambuf_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits> streambuf_type;$/;"	t	line:216	class:std::ostreambuf_iterator	access:public
std::ostreambuf_iterator::traits_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _Traits                          traits_type;$/;"	t	line:215	class:std::ostreambuf_iterator	access:public
std::output_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct output_iterator_tag {};$/;"	s	line:82	namespace:std
std::pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^    struct pair$/;"	s	line:68	namespace:std
std::pair::first	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      _T1 first;                 \/\/\/< @c first is a copy of the first object$/;"	m	line:73	struct:std::pair	access:public
std::pair::first_type	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      typedef _T1 first_type;    \/\/\/<  @c first_type is the first bound type$/;"	t	line:70	struct:std::pair	access:public
std::pair::pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^        pair(const pair<_U1, _U2>& __p)$/;"	f	line:89	struct:std::pair	access:public	signature:(const pair<_U1, _U2>& __p)
std::pair::pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      pair()$/;"	f	line:80	struct:std::pair	access:public	signature:()
std::pair::pair	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      pair(const _T1& __a, const _T2& __b)$/;"	f	line:84	struct:std::pair	access:public	signature:(const _T1& __a, const _T2& __b)
std::pair::second	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      _T2 second;                \/\/\/< @c second is a copy of the second object$/;"	m	line:74	struct:std::pair	access:public
std::pair::second_type	/home/damian/.vim/tags/cpp_src/stl_pair.h	/^      typedef _T2 second_type;   \/\/\/<  @c second_type is the second bound type$/;"	t	line:71	struct:std::pair	access:public
std::partial_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	line:2537	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last)
std::partial_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort(_RandomAccessIterator __first,$/;"	f	line:2575	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __middle, _RandomAccessIterator __last, _Compare __comp)
std::partial_sort_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:2614	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last)
std::partial_sort_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partial_sort_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:2679	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _RandomAccessIterator __result_first, _RandomAccessIterator __result_last, _Compare __comp)
std::partial_sum	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    partial_sum(_InputIterator __first, _InputIterator __last,$/;"	f	line:198	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
std::partial_sum	/home/damian/.vim/tags/cpp_src/stl_numeric.h	/^    partial_sum(_InputIterator __first, _InputIterator __last,$/;"	f	line:238	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryOperation __binary_op)
std::partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2097	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
std::plus	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct plus : public binary_function<_Tp, _Tp, _Tp>$/;"	s	line:134	namespace:std	inherits:binary_function
std::plus::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const _Tp& __x, const _Tp& __y) const$/;"	f	line:137	struct:std::plus	access:public	signature:(const _Tp& __x, const _Tp& __y) const
std::pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class pointer_to_binary_function$/;"	c	line:505	namespace:std	inherits:binary_function
std::pointer_to_binary_function::_M_ptr	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg1, _Arg2);$/;"	m	line:509	class:std::pointer_to_binary_function	access:protected
std::pointer_to_binary_function::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Arg1 __x, _Arg2 __y) const$/;"	f	line:518	class:std::pointer_to_binary_function	access:public	signature:(_Arg1 __x, _Arg2 __y) const
std::pointer_to_binary_function::pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_binary_function() {}$/;"	f	line:511	class:std::pointer_to_binary_function	access:public	signature:()
std::pointer_to_binary_function::pointer_to_binary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2))$/;"	f	line:514	class:std::pointer_to_binary_function	access:public	signature:(_Result (__x)_Arg1, _Arg2))
std::pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class pointer_to_unary_function : public unary_function<_Arg, _Result>$/;"	c	line:481	namespace:std	inherits:unary_function
std::pointer_to_unary_function::_M_ptr	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Result (*_M_ptr)(_Arg);$/;"	m	line:484	class:std::pointer_to_unary_function	access:protected
std::pointer_to_unary_function::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(_Arg __x) const$/;"	f	line:493	class:std::pointer_to_unary_function	access:public	signature:(_Arg __x) const
std::pointer_to_unary_function::pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_unary_function() {}$/;"	f	line:486	class:std::pointer_to_unary_function	access:public	signature:()
std::pointer_to_unary_function::pointer_to_unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      pointer_to_unary_function(_Result (*__x)(_Arg))$/;"	f	line:489	class:std::pointer_to_unary_function	access:public	signature:(_Result (__x)_Arg))
std::pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:253	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::pop_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    pop_heap(_RandomAccessIterator __first,$/;"	f	line:319	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::prev_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	line:5106	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
std::prev_permutation	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    prev_permutation(_BidirectionalIterator __first,$/;"	f	line:5162	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _Compare __comp)
std::priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    class priority_queue$/;"	c	line:322	namespace:std
std::priority_queue::_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:325	class:std::priority_queue	access:private
std::priority_queue::c	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Sequence  c;$/;"	m	line:342	class:std::priority_queue	access:protected
std::priority_queue::comp	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Compare   comp;$/;"	m	line:343	class:std::priority_queue	access:protected
std::priority_queue::const_reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:336	class:std::priority_queue	access:public
std::priority_queue::container_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:338	class:std::priority_queue	access:public
std::priority_queue::empty	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      empty() const$/;"	f	line:385	class:std::priority_queue	access:public	signature:() const
std::priority_queue::pop	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      pop()$/;"	f	line:431	class:std::priority_queue	access:public	signature:()
std::priority_queue::priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^        priority_queue(_InputIterator __first, _InputIterator __last,$/;"	f	line:371	class:std::priority_queue	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __x = _Compare(), const _Sequence& __s = _Sequence())
std::priority_queue::priority_queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      priority_queue(const _Compare& __x = _Compare(),$/;"	f	line:350	class:std::priority_queue	access:public	signature:(const _Compare& __x = _Compare(), const _Sequence& __s = _Sequence())
std::priority_queue::push	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	line:413	class:std::priority_queue	access:public	signature:(const value_type& __x)
std::priority_queue::reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:335	class:std::priority_queue	access:public
std::priority_queue::size	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      size() const$/;"	f	line:390	class:std::priority_queue	access:public	signature:() const
std::priority_queue::size_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:337	class:std::priority_queue	access:public
std::priority_queue::top	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      top() const$/;"	f	line:398	class:std::priority_queue	access:public	signature:() const
std::priority_queue::value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:334	class:std::priority_queue	access:public
std::ptr_fun	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg))$/;"	f	line:500	namespace:std	signature:(_Result (__x)_Arg))
std::ptr_fun	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    ptr_fun(_Result (*__x)(_Arg1, _Arg2))$/;"	f	line:525	namespace:std	signature:(_Result (__x)_Arg1, _Arg2))
std::push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:141	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::push_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:189	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^    class queue$/;"	c	line:95	namespace:std
std::queue::_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:98	class:std::queue	access:private
std::queue::back	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      back() const$/;"	f	line:187	class:std::queue	access:public	signature:() const
std::queue::back	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      back()$/;"	f	line:176	class:std::queue	access:public	signature:()
std::queue::c	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      _Sequence c;$/;"	m	line:128	class:std::queue	access:protected
std::queue::const_reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:115	class:std::queue	access:public
std::queue::container_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:117	class:std::queue	access:public
std::queue::empty	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      empty() const$/;"	f	line:141	class:std::queue	access:public	signature:() const
std::queue::front	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      front() const$/;"	f	line:165	class:std::queue	access:public	signature:() const
std::queue::front	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      front()$/;"	f	line:154	class:std::queue	access:public	signature:()
std::queue::pop	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      pop()$/;"	f	line:218	class:std::queue	access:public	signature:()
std::queue::push	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      push(const value_type& __x)$/;"	f	line:203	class:std::queue	access:public	signature:(const value_type& __x)
std::queue::queue	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      queue(const _Sequence& __c = _Sequence()) : c(__c) {}$/;"	f	line:135	class:std::queue	access:public	signature:(const _Sequence& __c = _Sequence())
std::queue::reference	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:114	class:std::queue	access:public
std::queue::size	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      size() const$/;"	f	line:146	class:std::queue	access:public	signature:() const
std::queue::size_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:116	class:std::queue	access:public
std::queue::value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:113	class:std::queue	access:public
std::random_access_iterator_tag	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^  struct random_access_iterator_tag : public bidirectional_iterator_tag {};$/;"	s	line:90	namespace:std	inherits:bidirectional_iterator_tag
std::random_shuffle	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:1976	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::random_shuffle	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:2003	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _RandomNumberGenerator& __rand)
std::raw_storage_iterator	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^    class raw_storage_iterator$/;"	c	line:71	namespace:std	inherits:iterator
std::raw_storage_iterator::_M_iter	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      _ForwardIterator _M_iter;$/;"	m	line:75	class:std::raw_storage_iterator	access:protected
std::raw_storage_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator*() { return *this; }$/;"	f	line:83	class:std::raw_storage_iterator	access:public	signature:()
std::raw_storage_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator++()$/;"	f	line:93	class:std::raw_storage_iterator	access:public	signature:()
std::raw_storage_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator++(int)$/;"	f	line:100	class:std::raw_storage_iterator	access:public	signature:(int)
std::raw_storage_iterator::operator =	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      operator=(const _Tp& __element)$/;"	f	line:86	class:std::raw_storage_iterator	access:public	signature:(const _Tp& __element)
std::raw_storage_iterator::raw_storage_iterator	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	/^      raw_storage_iterator(_ForwardIterator __x)$/;"	f	line:79	class:std::raw_storage_iterator	access:public	signature:(_ForwardIterator __x)
std::rel_ops	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^  namespace rel_ops$/;"	n	line:76	namespace:std
std::rel_ops::operator !=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator!=(const _Tp& __x, const _Tp& __y)$/;"	f	line:92	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
std::rel_ops::operator <=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator<=(const _Tp& __x, const _Tp& __y)$/;"	f	line:118	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
std::rel_ops::operator >	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator>(const _Tp& __x, const _Tp& __y)$/;"	f	line:105	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
std::rel_ops::operator >=	/home/damian/.vim/tags/cpp_src/stl_relops.h	/^      operator>=(const _Tp& __x, const _Tp& __y)$/;"	f	line:131	namespace:std::rel_ops	signature:(const _Tp& __x, const _Tp& __y)
std::remove	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1253	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
std::remove_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1178	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __value)
std::remove_copy_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:1215	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred)
std::remove_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    remove_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1288	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
std::replace	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:991	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __old_value, const _Tp& __new_value)
std::replace_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1055	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, const _Tp& __old_value, const _Tp& __new_value)
std::replace_copy_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_copy_if(_InputIterator __first, _InputIterator __last,$/;"	f	line:1092	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _Predicate __pred, const _Tp& __new_value)
std::replace_if	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    replace_if(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1022	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred, const _Tp& __new_value)
std::reverse	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)$/;"	f	line:1684	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last)
std::reverse_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,$/;"	f	line:1710	namespace:std	signature:(_BidirectionalIterator __first, _BidirectionalIterator __last, _OutputIterator __result)
std::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^    class reverse_iterator$/;"	c	line:94	namespace:std	inherits:iterator
std::reverse_iterator::base	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      base() const$/;"	f	line:144	class:std::reverse_iterator	access:public	signature:() const
std::reverse_iterator::current	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      _Iterator current;$/;"	m	line:102	class:std::reverse_iterator	access:protected
std::reverse_iterator::difference_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^							       difference_type;$/;"	t	line:107	class:std::reverse_iterator	access:public
std::reverse_iterator::iterator_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef _Iterator					       iterator_type;$/;"	t	line:105	class:std::reverse_iterator	access:public
std::reverse_iterator::operator *	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator*() const$/;"	f	line:153	class:std::reverse_iterator	access:public	signature:() const
std::reverse_iterator::operator +	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+(difference_type __n) const$/;"	f	line:224	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
std::reverse_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++()$/;"	f	line:174	class:std::reverse_iterator	access:public	signature:()
std::reverse_iterator::operator ++	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator++(int)$/;"	f	line:186	class:std::reverse_iterator	access:public	signature:(int)
std::reverse_iterator::operator +=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator+=(difference_type __n)$/;"	f	line:233	class:std::reverse_iterator	access:public	signature:(difference_type __n)
std::reverse_iterator::operator -	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-(difference_type __n) const$/;"	f	line:245	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
std::reverse_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--()$/;"	f	line:199	class:std::reverse_iterator	access:public	signature:()
std::reverse_iterator::operator --	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator--(int)$/;"	f	line:211	class:std::reverse_iterator	access:public	signature:(int)
std::reverse_iterator::operator -=	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator-=(difference_type __n)$/;"	f	line:254	class:std::reverse_iterator	access:public	signature:(difference_type __n)
std::reverse_iterator::operator ->	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator->() const$/;"	f	line:165	class:std::reverse_iterator	access:public	signature:() const
std::reverse_iterator::operator []	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      operator[](difference_type __n) const$/;"	f	line:266	class:std::reverse_iterator	access:public	signature:(difference_type __n) const
std::reverse_iterator::pointer	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::pointer     pointer;$/;"	t	line:109	class:std::reverse_iterator	access:public
std::reverse_iterator::reference	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::reference   reference;$/;"	t	line:108	class:std::reverse_iterator	access:public
std::reverse_iterator::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^        reverse_iterator(const reverse_iterator<_Iter>& __x)$/;"	f	line:137	class:std::reverse_iterator	access:public	signature:(const reverse_iterator<_Iter>& __x)
std::reverse_iterator::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator() : current() { }$/;"	f	line:118	class:std::reverse_iterator	access:public	signature:()
std::reverse_iterator::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator(const reverse_iterator& __x)$/;"	f	line:129	class:std::reverse_iterator	access:public	signature:(const reverse_iterator& __x)
std::reverse_iterator::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      reverse_iterator(iterator_type __x) : current(__x) { }$/;"	f	line:124	class:std::reverse_iterator	access:public	signature:(iterator_type __x)
std::right	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  right(ios_base& __base)$/;"	f	line:917	namespace:std	signature:(ios_base& __base)
std::rotate	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    rotate(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	line:1917	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last)
std::rotate_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,$/;"	f	line:1950	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __middle, _ForwardIterator __last, _OutputIterator __result)
std::scientific	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  scientific(ios_base& __base)$/;"	f	line:959	namespace:std	signature:(ios_base& __base)
std::search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:487	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2)
std::search	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:559	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2, _BinaryPredicate __predicate)
std::search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:722	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val)
std::search_n	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    search_n(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:851	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Integer __count, const _Tp& __val, _BinaryPredicate __binary_pred)
std::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    class set$/;"	c	line:93	namespace:std
std::set::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Alloc::value_type                   _Alloc_value_type;$/;"	t	line:96	class:std::set	access:private
std::set::_Key_alloc_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Alloc::template rebind<_Key>::other _Key_alloc_type;$/;"	t	line:114	class:std::set	access:private
std::set::_M_t	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      _Rep_type _M_t;  \/\/ red-black tree representing set$/;"	m	line:118	class:std::set	access:private
std::set::_Rep_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^		       key_compare, _Key_alloc_type> _Rep_type;$/;"	t	line:117	class:std::set	access:private
std::set::allocator_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Alloc   allocator_type;$/;"	t	line:110	class:std::set	access:public
std::set::begin	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      begin() const$/;"	f	line:230	class:std::set	access:public	signature:() const
std::set::clear	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      clear()$/;"	f	line:397	class:std::set	access:public	signature:()
std::set::const_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            const_iterator;$/;"	t	line:131	class:std::set	access:public
std::set::const_pointer	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_pointer       const_pointer;$/;"	t	line:124	class:std::set	access:public
std::set::const_reference	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::const_reference     const_reference;$/;"	t	line:126	class:std::set	access:public
std::set::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    const_reverse_iterator;$/;"	t	line:133	class:std::set	access:public
std::set::count	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      count(const key_type& __x) const$/;"	f	line:411	class:std::set	access:public	signature:(const key_type& __x) const
std::set::difference_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::difference_type           difference_type;$/;"	t	line:135	class:std::set	access:public
std::set::empty	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      empty() const$/;"	f	line:261	class:std::set	access:public	signature:() const
std::set::end	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      end() const$/;"	f	line:238	class:std::set	access:public	signature:() const
std::set::equal_range	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      equal_range(const key_type& __x) const$/;"	f	line:495	class:std::set	access:public	signature:(const key_type& __x) const
std::set::equal_range	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      equal_range(const key_type& __x)$/;"	f	line:491	class:std::set	access:public	signature:(const key_type& __x)
std::set::erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(const key_type& __x)$/;"	f	line:372	class:std::set	access:public	signature:(const key_type& __x)
std::set::erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(iterator __first, iterator __last)$/;"	f	line:387	class:std::set	access:public	signature:(iterator __first, iterator __last)
std::set::erase	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      erase(iterator __position)$/;"	f	line:357	class:std::set	access:public	signature:(iterator __position)
std::set::find	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      find(const key_type& __x) const$/;"	f	line:433	class:std::set	access:public	signature:(const key_type& __x) const
std::set::find	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      find(const key_type& __x)$/;"	f	line:429	class:std::set	access:public	signature:(const key_type& __x)
std::set::get_allocator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      get_allocator() const$/;"	f	line:222	class:std::set	access:public	signature:() const
std::set::insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        insert(_InputIterator __first, _InputIterator __last)$/;"	f	line:344	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::set::insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      insert(const value_type& __x)$/;"	f	line:304	class:std::set	access:public	signature:(const value_type& __x)
std::set::insert	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      insert(iterator __position, const value_type& __x)$/;"	f	line:331	class:std::set	access:public	signature:(iterator __position, const value_type& __x)
std::set::iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_iterator            iterator;$/;"	t	line:130	class:std::set	access:public
std::set::key_comp	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      key_comp() const$/;"	f	line:214	class:std::set	access:public	signature:() const
std::set::key_compare	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Compare key_compare;$/;"	t	line:108	class:std::set	access:public
std::set::key_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Key     key_type;$/;"	t	line:106	class:std::set	access:public
std::set::lower_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      lower_bound(const key_type& __x) const$/;"	f	line:454	class:std::set	access:public	signature:(const key_type& __x) const
std::set::lower_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      lower_bound(const key_type& __x)$/;"	f	line:450	class:std::set	access:public	signature:(const key_type& __x)
std::set::max_size	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      max_size() const$/;"	f	line:271	class:std::set	access:public	signature:() const
std::set::operator =	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      operator=(const set<_Key, _Compare, _Alloc>& __x)$/;"	f	line:204	class:std::set	access:public	signature:(const set<_Key, _Compare, _Alloc>& __x)
std::set::pointer	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::pointer             pointer;$/;"	t	line:123	class:std::set	access:public
std::set::rbegin	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      rbegin() const$/;"	f	line:247	class:std::set	access:public	signature:() const
std::set::reference	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Key_alloc_type::reference           reference;$/;"	t	line:125	class:std::set	access:public
std::set::rend	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      rend() const$/;"	f	line:256	class:std::set	access:public	signature:() const
std::set::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::const_reverse_iterator    reverse_iterator;$/;"	t	line:132	class:std::set	access:public
std::set::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last)$/;"	f	line:164	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::set::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^        set(_InputIterator __first, _InputIterator __last,$/;"	f	line:180	class:std::set	access:public	signature:(_InputIterator __first, _InputIterator __last, const _Compare& __comp, const allocator_type& __a = allocator_type())
std::set::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set()$/;"	f	line:140	class:std::set	access:public	signature:()
std::set::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set(const _Compare& __comp,$/;"	f	line:150	class:std::set	access:public	signature:(const _Compare& __comp, const allocator_type& __a = allocator_type())
std::set::set	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      set(const set<_Key,_Compare,_Alloc>& __x)$/;"	f	line:193	class:std::set	access:public	signature:(const set<_Key,_Compare,_Alloc>& __x)
std::set::size	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      size() const$/;"	f	line:266	class:std::set	access:public	signature:() const
std::set::size_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef typename _Rep_type::size_type                 size_type;$/;"	t	line:134	class:std::set	access:public
std::set::swap	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      swap(set<_Key,_Compare,_Alloc>& __x)$/;"	f	line:286	class:std::set	access:public	signature:(set<_Key,_Compare,_Alloc>& __x)
std::set::upper_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:470	class:std::set	access:public	signature:(const key_type& __x) const
std::set::upper_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      upper_bound(const key_type& __x)$/;"	f	line:466	class:std::set	access:public	signature:(const key_type& __x)
std::set::value_comp	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      value_comp() const$/;"	f	line:218	class:std::set	access:public	signature:() const
std::set::value_compare	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Compare value_compare;$/;"	t	line:109	class:std::set	access:public
std::set::value_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Key     value_type;$/;"	t	line:107	class:std::set	access:public
std::set_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4642	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
std::set_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4702	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
std::set_intersection	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4529	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
std::set_intersection	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4585	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
std::set_symmetric_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4759	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
std::set_symmetric_difference	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4824	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
std::set_union	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4397	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)
std::set_union	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    set_union(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:4463	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)
std::showbase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showbase(ios_base& __base)$/;"	f	line:804	namespace:std	signature:(ios_base& __base)
std::showpoint	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showpoint(ios_base& __base)$/;"	f	line:820	namespace:std	signature:(ios_base& __base)
std::showpos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  showpos(ios_base& __base)$/;"	f	line:836	namespace:std	signature:(ios_base& __base)
std::skipws	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  skipws(ios_base& __base)$/;"	f	line:852	namespace:std	signature:(ios_base& __base)
std::slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  class slice$/;"	c	line:58	namespace:std
std::slice::_M_off	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_off;                      \/\/ offset$/;"	m	line:81	class:std::slice	access:private
std::slice::_M_st	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_st;			\/\/ stride unit$/;"	m	line:83	class:std::slice	access:private
std::slice::_M_sz	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    size_t _M_sz;			\/\/ size$/;"	m	line:82	class:std::slice	access:private
std::slice::size	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::size() const$/;"	f	line:100	class:std::slice	signature:() const
std::slice::slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::slice() {}$/;"	f	line:89	class:std::slice	signature:()
std::slice::slice	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::slice(size_t __o, size_t __d, size_t __s)$/;"	f	line:92	class:std::slice	signature:(size_t __o, size_t __d, size_t __s)
std::slice::start	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::start() const$/;"	f	line:96	class:std::slice	signature:() const
std::slice::stride	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::stride() const$/;"	f	line:104	class:std::slice	signature:() const
std::slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    class slice_array$/;"	c	line:121	namespace:std
std::slice_array::_M_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const _Array<_Tp> _M_array;$/;"	m	line:191	class:std::slice_array	access:private
std::slice_array::_M_stride	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const size_t      _M_stride;$/;"	m	line:190	class:std::slice_array	access:private
std::slice_array::_M_sz	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      const size_t      _M_sz;$/;"	m	line:189	class:std::slice_array	access:private
std::slice_array::operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Expr<_Dom,_Tp>& __e) const$/;"	f	line:233	class:std::slice_array	signature:(const _Expr<_Dom,_Tp>& __e) const
std::slice_array::operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const _Tp& __t) const$/;"	f	line:222	class:std::slice_array	signature:(const _Tp& __t) const
std::slice_array::operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const slice_array<_Tp>& __a)$/;"	f	line:213	class:std::slice_array	signature:(const slice_array<_Tp>& __a)
std::slice_array::operator =	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::operator=(const valarray<_Tp>& __v) const$/;"	f	line:227	class:std::slice_array	signature:(const valarray<_Tp>& __v) const
std::slice_array::slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(_Array<_Tp> __a, const slice& __s)$/;"	f	line:199	class:std::slice_array	signature:(_Array<_Tp> __a, const slice& __s)
std::slice_array::slice_array	/home/damian/.vim/tags/cpp_src/slice_array.h	/^    slice_array<_Tp>::slice_array(const slice_array<_Tp>& a)$/;"	f	line:205	class:std::slice_array	signature:(const slice_array<_Tp>& a)
std::slice_array::value_type	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      typedef _Tp value_type;$/;"	t	line:124	class:std::slice_array	access:public
std::sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:2816	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:2851	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::sort_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:422	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::sort_heap	/home/damian/.vim/tags/cpp_src/stl_heap.h	/^    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:448	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::stable_partition	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_partition(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2208	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)
std::stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)$/;"	f	line:3876	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last)
std::stable_sort	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,$/;"	f	line:3917	namespace:std	signature:(_RandomAccessIterator __first, _RandomAccessIterator __last, _Compare __comp)
std::stack	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^    class stack$/;"	c	line:98	namespace:std
std::stack::_Sequence_value_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type _Sequence_value_type;$/;"	t	line:101	class:std::stack	access:private
std::stack::c	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      _Sequence c;$/;"	m	line:123	class:std::stack	access:protected
std::stack::const_reference	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::const_reference           const_reference;$/;"	t	line:117	class:std::stack	access:public
std::stack::container_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef          _Sequence                            container_type;$/;"	t	line:119	class:std::stack	access:public
std::stack::empty	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      empty() const$/;"	f	line:138	class:std::stack	access:public	signature:() const
std::stack::pop	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      pop()$/;"	f	line:193	class:std::stack	access:public	signature:()
std::stack::push	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      push(const value_type& __x)$/;"	f	line:178	class:std::stack	access:public	signature:(const value_type& __x)
std::stack::reference	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::reference                 reference;$/;"	t	line:116	class:std::stack	access:public
std::stack::size	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      size() const$/;"	f	line:143	class:std::stack	access:public	signature:() const
std::stack::size_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::size_type                 size_type;$/;"	t	line:118	class:std::stack	access:public
std::stack::stack	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      stack(const _Sequence& __c = _Sequence())$/;"	f	line:131	class:std::stack	access:public	signature:(const _Sequence& __c = _Sequence())
std::stack::top	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      top() const$/;"	f	line:162	class:std::stack	access:public	signature:() const
std::stack::top	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      top()$/;"	f	line:151	class:std::stack	access:public	signature:()
std::stack::value_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:115	class:std::stack	access:public
std::streamoff	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef int64_t       streamoff;$/;"	t	line:72	namespace:std
std::streampos	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef fpos<mbstate_t> streampos;$/;"	t	line:211	namespace:std
std::streamsize	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef ptrdiff_t	streamsize; \/\/ Signed integral type$/;"	t	line:78	namespace:std
std::string	/home/damian/.vim/tags/cpp_src/stringfwd.h	/^  typedef basic_string<char>    string;$/;"	t	line:60	namespace:std
std::swap	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2364	namespace:std	signature:(basic_string<_CharT, _Traits, _Alloc>& __lhs, basic_string<_CharT, _Traits, _Alloc>& __rhs)
std::swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    swap(_Tp& __a, _Tp& __b)$/;"	f	line:93	namespace:std	signature:(_Tp& __a, _Tp& __b)
std::swap	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    swap(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)$/;"	f	line:1603	namespace:std	signature:(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    swap(list<_Tp, _Alloc>& __x, list<_Tp, _Alloc>& __y)$/;"	f	line:1256	namespace:std	signature:(list<_Tp, _Alloc>& __x, list<_Tp, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    swap(map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:734	namespace:std	signature:(map<_Key, _Tp, _Compare, _Alloc>& __x, map<_Key, _Tp, _Compare, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    swap(multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:664	namespace:std	signature:(multimap<_Key, _Tp, _Compare, _Alloc>& __x, multimap<_Key, _Tp, _Compare, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    swap(multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:559	namespace:std	signature:(multiset<_Key, _Compare, _Alloc>& __x, multiset<_Key, _Compare, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    swap(set<_Key, _Compare, _Alloc>& __x, set<_Key, _Compare, _Alloc>& __y)$/;"	f	line:573	namespace:std	signature:(set<_Key, _Compare, _Alloc>& __x, set<_Key, _Compare, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:802	namespace:std	signature:(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
std::swap	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)$/;"	f	line:987	namespace:std	signature:(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)
std::swap_ranges	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:886	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)
std::time_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class time_base$/;"	c	line:2745	namespace:std
std::time_base::dateorder	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	g	line:2748	class:std::time_base	access:public
std::time_base::dmy	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
std::time_base::mdy	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
std::time_base::no_order	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
std::time_base::ydm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
std::time_base::ymd	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
std::time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_get : public locale::facet, public time_base$/;"	c	line:3057	namespace:std	inherits:locale::facet,time_base
std::time_get::__string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	__string_type;$/;"	t	line:3066	class:std::time_get	access:public
std::time_get::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3063	class:std::time_get	access:public
std::time_get::date_order	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      date_order()  const$/;"	f	line:3096	class:std::time_get	access:public	signature:() const
std::time_get::get_date	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_date(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3145	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
std::time_get::get_monthname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_monthname(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3202	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
std::time_get::get_time	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_time(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3120	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
std::time_get::get_weekday	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_weekday(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3173	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
std::time_get::get_year	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      get_year(iter_type __beg, iter_type __end, ios_base& __io,$/;"	f	line:3228	class:std::time_get	access:public	signature:(iter_type __beg, iter_type __end, ios_base& __io, ios_base::iostate& __err, tm* __tm) const
std::time_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3069	class:std::time_get	access:public
std::time_get::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id time_get<_CharT, _InIter>::id;$/;"	m	line:3366	class:std::time_get
std::time_get::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:3064	class:std::time_get	access:public
std::time_get::time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_get(size_t __refs = 0)$/;"	f	line:3079	class:std::time_get	access:public	signature:(size_t __refs = 0)
std::time_get::~time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_get() { }$/;"	f	line:3235	class:std::time_get	access:protected	signature:()
std::time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_get_byname : public time_get<_CharT, _InIter>$/;"	c	line:3370	namespace:std	inherits:time_get
std::time_get_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3374	class:std::time_get_byname	access:public
std::time_get_byname::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _InIter			iter_type;$/;"	t	line:3375	class:std::time_get_byname	access:public
std::time_get_byname::time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_get_byname(const char*, size_t __refs = 0)$/;"	f	line:3378	class:std::time_get_byname	access:public	signature:(const char*, size_t __refs = 0)
std::time_get_byname::~time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_get_byname() { }$/;"	f	line:3383	class:std::time_get_byname	access:protected	signature:()
std::time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_put : public locale::facet$/;"	c	line:3398	namespace:std	inherits:locale::facet
std::time_put::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3404	class:std::time_put	access:public
std::time_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static locale::id			id;$/;"	m	line:3409	class:std::time_put	access:public
std::time_put::id	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    locale::id time_put<_CharT, _OutIter>::id;$/;"	m	line:3490	class:std::time_put
std::time_put::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:3405	class:std::time_put	access:public
std::time_put::put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      put(iter_type __s, ios_base& __io, char_type __fill,$/;"	f	line:3458	class:std::time_put	access:public	signature:(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, char __format, char __mod = 0) const
std::time_put::time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_put(size_t __refs = 0)$/;"	f	line:3419	class:std::time_put	access:public	signature:(size_t __refs = 0)
std::time_put::~time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_put()$/;"	f	line:3465	class:std::time_put	access:protected	signature:()
std::time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_put_byname : public time_put<_CharT, _OutIter>$/;"	c	line:3494	namespace:std	inherits:time_put
std::time_put_byname::char_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _CharT			char_type;$/;"	t	line:3498	class:std::time_put_byname	access:public
std::time_put_byname::iter_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef _OutIter			iter_type;$/;"	t	line:3499	class:std::time_put_byname	access:public
std::time_put_byname::time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_put_byname(const char*, size_t __refs = 0)$/;"	f	line:3502	class:std::time_put_byname	access:public	signature:(const char*, size_t __refs = 0)
std::time_put_byname::~time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_put_byname() { }$/;"	f	line:3508	class:std::time_put_byname	access:protected	signature:()
std::tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    tolower(_CharT __c, const locale& __loc)$/;"	f	line:4683	namespace:std	signature:(_CharT __c, const locale& __loc)
std::toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    toupper(_CharT __c, const locale& __loc)$/;"	f	line:4677	namespace:std	signature:(_CharT __c, const locale& __loc)
std::transform	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    transform(_InputIterator __first, _InputIterator __last,$/;"	f	line:925	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _UnaryOperation __unary_op)
std::transform	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    transform(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:960	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _OutputIterator __result, _BinaryOperation __binary_op)
std::unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct unary_function$/;"	s	line:102	namespace:std
std::unary_function::argument_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Arg argument_type;   \/\/\/< @c argument_type is the type of the$/;"	t	line:104	struct:std::unary_function	access:public
std::unary_function::result_type	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typedef _Result result_type;  \/\/\/< @c result_type is the return type$/;"	t	line:107	struct:std::unary_function	access:public
std::unary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class unary_negate$/;"	c	line:312	namespace:std	inherits:unary_function
std::unary_negate::_M_pred	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      _Predicate _M_pred;$/;"	m	line:316	class:std::unary_negate	access:protected
std::unary_negate::operator ()	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      operator()(const typename _Predicate::argument_type& __x) const$/;"	f	line:322	class:std::unary_negate	access:public	signature:(const typename _Predicate::argument_type& __x) const
std::unary_negate::unary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      unary_negate(const _Predicate& __x) : _M_pred(__x) {}$/;"	f	line:319	class:std::unary_negate	access:public	signature:(const _Predicate& __x)
std::uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:108	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result)
std::uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const char* __first, const char* __last, char* __result)$/;"	f	line:118	namespace:std	signature:(const char* __first, const char* __last, char* __result)
std::uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const wchar_t* __first, const wchar_t* __last,$/;"	f	line:125	namespace:std	signature:(const wchar_t* __first, const wchar_t* __last, wchar_t* __result)
std::uninitialized_fill	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x)
std::uninitialized_fill_n	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)$/;"	f	line:215	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x)
std::unique	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:1562	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
std::unique	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1601	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)
std::unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1489	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
std::unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1530	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred)
std::unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  unitbuf(ios_base& __base)$/;"	f	line:884	namespace:std	signature:(ios_base& __base)
std::upper_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2981	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
std::upper_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:3031	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
std::uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  uppercase(ios_base& __base)$/;"	f	line:868	namespace:std	signature:(ios_base& __base)
std::vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>$/;"	c	line:456	namespace:std	inherits:_Bvector_base
std::vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    class vector : protected _Vector_base<_Tp, _Alloc>$/;"	c	line:159	namespace:std	inherits:_Vector_base
std::vector::_Alloc_value_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Alloc::value_type                _Alloc_value_type;$/;"	t	line:162	class:std::vector	access:private
std::vector::_Base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bvector_base<_Alloc>			 _Base;$/;"	t	line:458	class:std::vector	access:private
std::vector::_Base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Vector_base<_Tp, _Alloc>			 _Base;$/;"	t	line:166	class:std::vector	access:private
std::vector::_M_allocate_and_copy	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_allocate_and_copy(size_type __n,$/;"	f	line:760	class:std::vector	access:protected	signature:(size_type __n, _ForwardIterator __first, _ForwardIterator __last)
std::vector::_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:872	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
std::vector::_M_assign_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_aux(_InputIterator __first, _InputIterator __last,$/;"	f	line:858	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
std::vector::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:835	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:830	class:std::vector	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
std::vector::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_assign_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:844	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_assign_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)$/;"	f	line:835	class:std::vector	access:protected	signature:(_Integer __n, _Integer __val, __true_type)
std::vector::_M_copy_aligned	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_copy_aligned(const_iterator __first, const_iterator __last,$/;"	f	line:773	class:std::vector	access:protected	signature:(const_iterator __first, const_iterator __last, iterator __result)
std::vector::_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_erase_at_end(iterator __pos)$/;"	f	line:1005	class:std::vector	access:protected	signature:(iterator __pos)
std::vector::_M_erase_at_end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_erase_at_end(pointer __pos)$/;"	f	line:919	class:std::vector	access:protected	signature:(pointer __pos)
std::vector::_M_fill_assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_fill_assign(size_t __n, bool __x)$/;"	f	line:840	class:std::vector	access:protected	signature:(size_t __n, bool __x)
std::vector::_M_fill_insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_fill_insert(iterator __position, size_type __n, bool __x)$/;"	f	line:903	class:std::vector	access:protected	signature:(iterator __position, size_type __n, bool __x)
std::vector::_M_initialize	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_initialize(size_type __n)$/;"	f	line:782	class:std::vector	access:protected	signature:(size_type __n)
std::vector::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:804	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)$/;"	f	line:795	class:std::vector	access:protected	signature:(_Integer __n, _Integer __x, __true_type)
std::vector::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,$/;"	f	line:795	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_initialize_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)$/;"	f	line:783	class:std::vector	access:protected	signature:(_Integer __n, _Integer __value, __true_type)
std::vector::_M_initialize_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:820	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
std::vector::_M_initialize_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_initialize_range(_InputIterator __first, _InputIterator __last,$/;"	f	line:811	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
std::vector::_M_insert_aux	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_insert_aux(iterator __position, bool __x)$/;"	f	line:978	class:std::vector	access:protected	signature:(iterator __position, bool __x)
std::vector::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x,$/;"	f	line:890	class:std::vector	access:protected	signature:(iterator __pos, _Integer __n, _Integer __x, __true_type)
std::vector::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_dispatch(iterator __pos,$/;"	f	line:896	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _InputIterator __first,$/;"	f	line:885	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, __false_type)
std::vector::_M_insert_dispatch	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,$/;"	f	line:875	class:std::vector	access:protected	signature:(iterator __pos, _Integer __n, _Integer __val, __true_type)
std::vector::_M_insert_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __pos, _InputIterator __first, $/;"	f	line:933	class:std::vector	access:protected	signature:(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag)
std::vector::_M_insert_range	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      _M_insert_range(iterator __position, _ForwardIterator __first, $/;"	f	line:945	class:std::vector	access:protected	signature:(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
std::vector::_M_range_check	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    _M_range_check(size_type __n) const$/;"	f	line:615	class:std::vector	access:protected	signature:(size_type __n) const
std::vector::_M_range_check	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      _M_range_check(size_type __n) const$/;"	f	line:495	class:std::vector	access:protected	signature:(size_type __n) const
std::vector::_M_range_initialize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_range_initialize(_ForwardIterator __first,$/;"	f	line:816	class:std::vector	access:protected	signature:(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag)
std::vector::_M_range_initialize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        _M_range_initialize(_InputIterator __first,$/;"	f	line:806	class:std::vector	access:protected	signature:(_InputIterator __first, _InputIterator __last, std::input_iterator_tag)
std::vector::_Tp_alloc_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;$/;"	t	line:168	class:std::vector	access:private
std::vector::allocator_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Alloc                        		 allocator_type;$/;"	t	line:472	class:std::vector	access:public
std::vector::allocator_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Alloc                        		 allocator_type;$/;"	t	line:183	class:std::vector	access:public
std::vector::assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:540	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::vector::assign	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    assign(size_type __n, const bool& __x)$/;"	f	line:535	class:std::vector	access:public	signature:(size_type __n, const bool& __x)
std::vector::assign	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        assign(_InputIterator __first, _InputIterator __last)$/;"	f	line:310	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last)
std::vector::assign	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      assign(size_type __n, const value_type& __val)$/;"	f	line:293	class:std::vector	access:public	signature:(size_type __n, const value_type& __val)
std::vector::at	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    at(size_type __n) const$/;"	f	line:627	class:std::vector	access:public	signature:(size_type __n) const
std::vector::at	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    at(size_type __n)$/;"	f	line:623	class:std::vector	access:public	signature:(size_type __n)
std::vector::at	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      at(size_type __n) const$/;"	f	line:532	class:std::vector	access:public	signature:(size_type __n) const
std::vector::at	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      at(size_type __n)$/;"	f	line:514	class:std::vector	access:public	signature:(size_type __n)
std::vector::back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    back() const$/;"	f	line:660	class:std::vector	access:public	signature:() const
std::vector::back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    back()$/;"	f	line:656	class:std::vector	access:public	signature:()
std::vector::back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      back() const$/;"	f	line:567	class:std::vector	access:public	signature:() const
std::vector::back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      back()$/;"	f	line:559	class:std::vector	access:public	signature:()
std::vector::begin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    begin() const$/;"	f	line:551	class:std::vector	access:public	signature:() const
std::vector::begin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    begin()$/;"	f	line:547	class:std::vector	access:public	signature:()
std::vector::begin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      begin() const$/;"	f	line:336	class:std::vector	access:public	signature:() const
std::vector::begin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      begin()$/;"	f	line:327	class:std::vector	access:public	signature:()
std::vector::capacity	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    capacity() const$/;"	f	line:591	class:std::vector	access:public	signature:() const
std::vector::capacity	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      capacity() const$/;"	f	line:429	class:std::vector	access:public	signature:() const
std::vector::clear	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    clear()$/;"	f	line:766	class:std::vector	access:public	signature:()
std::vector::clear	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      clear()$/;"	f	line:748	class:std::vector	access:public	signature:()
std::vector::const_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_const_iterator                          const_iterator;$/;"	t	line:469	class:std::vector	access:public
std::vector::const_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      const_iterator;$/;"	t	line:178	class:std::vector	access:public
std::vector::const_pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef const bool*                                  const_pointer;$/;"	t	line:467	class:std::vector	access:public
std::vector::const_pointer	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_pointer     const_pointer;$/;"	t	line:173	class:std::vector	access:public
std::vector::const_reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                                         const_reference;$/;"	t	line:465	class:std::vector	access:public
std::vector::const_reference	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::const_reference   const_reference;$/;"	t	line:175	class:std::vector	access:public
std::vector::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<const_iterator>        const_reverse_iterator;$/;"	t	line:470	class:std::vector	access:public
std::vector::const_reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;$/;"	t	line:179	class:std::vector	access:public
std::vector::data	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    data() { }$/;"	f	line:669	class:std::vector	access:public	signature:()
std::vector::data	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      data() const$/;"	f	line:582	class:std::vector	access:public	signature:() const
std::vector::data	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      data()$/;"	f	line:578	class:std::vector	access:public	signature:()
std::vector::difference_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef ptrdiff_t                                    difference_type;$/;"	t	line:463	class:std::vector	access:public
std::vector::difference_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef ptrdiff_t					 difference_type;$/;"	t	line:182	class:std::vector	access:public
std::vector::empty	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    empty() const$/;"	f	line:596	class:std::vector	access:public	signature:() const
std::vector::empty	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      empty() const$/;"	f	line:438	class:std::vector	access:public	signature:() const
std::vector::end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    end() const$/;"	f	line:559	class:std::vector	access:public	signature:() const
std::vector::end	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    end()$/;"	f	line:555	class:std::vector	access:public	signature:()
std::vector::end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      end() const$/;"	f	line:354	class:std::vector	access:public	signature:() const
std::vector::end	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      end()$/;"	f	line:345	class:std::vector	access:public	signature:()
std::vector::erase	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    erase(iterator __first, iterator __last)$/;"	f	line:742	class:std::vector	access:public	signature:(iterator __first, iterator __last)
std::vector::erase	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    erase(iterator __position)$/;"	f	line:733	class:std::vector	access:public	signature:(iterator __position)
std::vector::flip	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    flip()$/;"	f	line:758	class:std::vector	access:public	signature:()
std::vector::front	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    front() const$/;"	f	line:652	class:std::vector	access:public	signature:() const
std::vector::front	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    front()$/;"	f	line:648	class:std::vector	access:public	signature:()
std::vector::front	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      front() const$/;"	f	line:551	class:std::vector	access:public	signature:() const
std::vector::front	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      front()$/;"	f	line:543	class:std::vector	access:public	signature:()
std::vector::get_allocator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    allocator_type get_allocator() const$/;"	f	line:474	class:std::vector	access:public	signature:() const
std::vector::insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      insert(iterator __position,$/;"	f	line:717	class:std::vector	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
std::vector::insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    insert(iterator __position, const bool& __x = bool())$/;"	f	line:704	class:std::vector	access:public	signature:(iterator __position, const bool& __x = bool())
std::vector::insert	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    insert(iterator __position, size_type __n, const bool& __x)$/;"	f	line:725	class:std::vector	access:public	signature:(iterator __position, size_type __n, const bool& __x)
std::vector::insert	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        insert(iterator __position, _InputIterator __first,$/;"	f	line:671	class:std::vector	access:public	signature:(iterator __position, _InputIterator __first, _InputIterator __last)
std::vector::insert	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      insert(iterator __position, size_type __n, const value_type& __x)$/;"	f	line:652	class:std::vector	access:public	signature:(iterator __position, size_type __n, const value_type& __x)
std::vector::iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_iterator                                iterator;$/;"	t	line:468	class:std::vector	access:public
std::vector::iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef __gnu_cxx::__normal_iterator<pointer, vector_type> iterator;$/;"	t	line:176	class:std::vector	access:public
std::vector::max_size	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    max_size() const$/;"	f	line:583	class:std::vector	access:public	signature:() const
std::vector::max_size	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      max_size() const$/;"	f	line:401	class:std::vector	access:public	signature:() const
std::vector::operator =	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator=(const vector& __x)$/;"	f	line:516	class:std::vector	access:public	signature:(const vector& __x)
std::vector::operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](size_type __n) const$/;"	f	line:607	class:std::vector	access:public	signature:(size_type __n) const
std::vector::operator []	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    operator[](size_type __n)$/;"	f	line:600	class:std::vector	access:public	signature:(size_type __n)
std::vector::operator []	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      operator[](size_type __n) const$/;"	f	line:489	class:std::vector	access:public	signature:(size_type __n) const
std::vector::operator []	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      operator[](size_type __n)$/;"	f	line:474	class:std::vector	access:public	signature:(size_type __n)
std::vector::pointer	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference*                              pointer;$/;"	t	line:466	class:std::vector	access:public
std::vector::pointer	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::pointer           pointer;$/;"	t	line:172	class:std::vector	access:public
std::vector::pop_back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    pop_back()$/;"	f	line:729	class:std::vector	access:public	signature:()
std::vector::pop_back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      pop_back()$/;"	f	line:618	class:std::vector	access:public	signature:()
std::vector::push_back	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    push_back(bool __x)$/;"	f	line:672	class:std::vector	access:public	signature:(bool __x)
std::vector::push_back	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      push_back(const value_type& __x)$/;"	f	line:597	class:std::vector	access:public	signature:(const value_type& __x)
std::vector::rbegin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rbegin() const$/;"	f	line:567	class:std::vector	access:public	signature:() const
std::vector::rbegin	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rbegin()$/;"	f	line:563	class:std::vector	access:public	signature:()
std::vector::rbegin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rbegin() const$/;"	f	line:372	class:std::vector	access:public	signature:() const
std::vector::rbegin	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rbegin()$/;"	f	line:363	class:std::vector	access:public	signature:()
std::vector::reference	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef _Bit_reference                               reference;$/;"	t	line:464	class:std::vector	access:public
std::vector::reference	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef typename _Tp_alloc_type::reference         reference;$/;"	t	line:174	class:std::vector	access:public
std::vector::rend	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rend() const$/;"	f	line:575	class:std::vector	access:public	signature:() const
std::vector::rend	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    rend()$/;"	f	line:571	class:std::vector	access:public	signature:()
std::vector::rend	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rend() const$/;"	f	line:390	class:std::vector	access:public	signature:() const
std::vector::rend	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      rend()$/;"	f	line:381	class:std::vector	access:public	signature:()
std::vector::reserve	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    reserve(size_type __n)$/;"	f	line:631	class:std::vector	access:public	signature:(size_type __n)
std::vector::resize	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    resize(size_type __new_size, bool __x = bool())$/;"	f	line:749	class:std::vector	access:public	signature:(size_type __new_size, bool __x = bool())
std::vector::resize	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      resize(size_type __new_size, value_type __x = value_type())$/;"	f	line:416	class:std::vector	access:public	signature:(size_type __new_size, value_type __x = value_type())
std::vector::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef std::reverse_iterator<iterator>              reverse_iterator;$/;"	t	line:471	class:std::vector	access:public
std::vector::reverse_iterator	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef std::reverse_iterator<iterator>		 reverse_iterator;$/;"	t	line:180	class:std::vector	access:public
std::vector::size	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    size() const$/;"	f	line:579	class:std::vector	access:public	signature:() const
std::vector::size	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      size() const$/;"	f	line:396	class:std::vector	access:public	signature:() const
std::vector::size_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef size_t                                       size_type;$/;"	t	line:462	class:std::vector	access:public
std::vector::size_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef size_t					 size_type;$/;"	t	line:181	class:std::vector	access:public
std::vector::swap	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    swap(reference __x, reference __y)$/;"	f	line:696	class:std::vector	access:public	signature:(reference __x, reference __y)
std::vector::swap	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    swap(vector<bool, _Alloc>& __x)$/;"	f	line:681	class:std::vector	access:public	signature:(vector<bool, _Alloc>& __x)
std::vector::swap	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      swap(vector& __x)$/;"	f	line:728	class:std::vector	access:public	signature:(vector& __x)
std::vector::value_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                                         value_type;$/;"	t	line:461	class:std::vector	access:public
std::vector::value_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Tp					 value_type;$/;"	t	line:171	class:std::vector	access:public
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      vector(_InputIterator __first, _InputIterator __last,$/;"	f	line:505	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(const allocator_type& __a = allocator_type())$/;"	f	line:484	class:std::vector	access:public	signature:(const allocator_type& __a = allocator_type())
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(const vector& __x)$/;"	f	line:497	class:std::vector	access:public	signature:(const vector& __x)
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(size_type __n, const bool& __value = bool(), $/;"	f	line:488	class:std::vector	access:public	signature:(size_type __n, const bool& __value = bool(), const allocator_type& __a = allocator_type())
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        vector(_InputIterator __first, _InputIterator __last,$/;"	f	line:252	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(const allocator_type& __a = allocator_type())$/;"	f	line:198	class:std::vector	access:public	signature:(const allocator_type& __a = allocator_type())
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(const vector& __x)$/;"	f	line:228	class:std::vector	access:public	signature:(const vector& __x)
std::vector::vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(size_type __n, const value_type& __value = value_type(),$/;"	f	line:210	class:std::vector	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
std::vector::vector_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef vector<_Tp, _Alloc>			 vector_type;$/;"	t	line:167	class:std::vector	access:private
std::vector::~vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    ~vector() { }$/;"	f	line:513	class:std::vector	access:public	signature:()
std::vector::~vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      ~vector()$/;"	f	line:267	class:std::vector	access:public	signature:()
std::wstreampos	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef fpos<mbstate_t> wstreampos;$/;"	t	line:213	namespace:std
std::wstring	/home/damian/.vim/tags/cpp_src/stringfwd.h	/^  typedef basic_string<wchar_t> wstring;$/;"	t	line:65	namespace:std
stl_algo.h	/home/damian/.vim/tags/cpp_src/stl_algo.h	1;"	F	line:1
stl_algobase.h	/home/damian/.vim/tags/cpp_src/stl_algobase.h	1;"	F	line:1
stl_bvector.h	/home/damian/.vim/tags/cpp_src/stl_bvector.h	1;"	F	line:1
stl_construct.h	/home/damian/.vim/tags/cpp_src/stl_construct.h	1;"	F	line:1
stl_deque.h	/home/damian/.vim/tags/cpp_src/stl_deque.h	1;"	F	line:1
stl_function.h	/home/damian/.vim/tags/cpp_src/stl_function.h	1;"	F	line:1
stl_heap.h	/home/damian/.vim/tags/cpp_src/stl_heap.h	1;"	F	line:1
stl_iterator.h	/home/damian/.vim/tags/cpp_src/stl_iterator.h	1;"	F	line:1
stl_iterator_base_funcs.h	/home/damian/.vim/tags/cpp_src/stl_iterator_base_funcs.h	1;"	F	line:1
stl_iterator_base_types.h	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	1;"	F	line:1
stl_list.h	/home/damian/.vim/tags/cpp_src/stl_list.h	1;"	F	line:1
stl_map.h	/home/damian/.vim/tags/cpp_src/stl_map.h	1;"	F	line:1
stl_multimap.h	/home/damian/.vim/tags/cpp_src/stl_multimap.h	1;"	F	line:1
stl_multiset.h	/home/damian/.vim/tags/cpp_src/stl_multiset.h	1;"	F	line:1
stl_numeric.h	/home/damian/.vim/tags/cpp_src/stl_numeric.h	1;"	F	line:1
stl_pair.h	/home/damian/.vim/tags/cpp_src/stl_pair.h	1;"	F	line:1
stl_queue.h	/home/damian/.vim/tags/cpp_src/stl_queue.h	1;"	F	line:1
stl_raw_storage_iter.h	/home/damian/.vim/tags/cpp_src/stl_raw_storage_iter.h	1;"	F	line:1
stl_relops.h	/home/damian/.vim/tags/cpp_src/stl_relops.h	1;"	F	line:1
stl_set.h	/home/damian/.vim/tags/cpp_src/stl_set.h	1;"	F	line:1
stl_stack.h	/home/damian/.vim/tags/cpp_src/stl_stack.h	1;"	F	line:1
stl_tempbuf.h	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	1;"	F	line:1
stl_tree.h	/home/damian/.vim/tags/cpp_src/stl_tree.h	1;"	F	line:1
stl_uninitialized.h	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	1;"	F	line:1
stl_vector.h	/home/damian/.vim/tags/cpp_src/stl_vector.h	1;"	F	line:1
stream_iterator.h	/home/damian/.vim/tags/cpp_src/stream_iterator.h	1;"	F	line:1
streambuf_iterator.h	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	1;"	F	line:1
streambuf_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits>		streambuf_type;$/;"	t	line:60	class:std::istreambuf_iterator	access:public
streambuf_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef basic_streambuf<_CharT, _Traits> streambuf_type;$/;"	t	line:216	class:std::ostreambuf_iterator	access:public
streamoff	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef std::streamoff streamoff;$/;"	t	line:409	class:std::ios_base	access:public
streamoff	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef int64_t       streamoff;$/;"	t	line:72	namespace:std
streampos	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    typedef std::streampos streampos;$/;"	t	line:408	class:std::ios_base	access:public
streampos	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef fpos<mbstate_t> streampos;$/;"	t	line:211	namespace:std
streamsize	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef ptrdiff_t	streamsize; \/\/ Signed integral type$/;"	t	line:78	namespace:std
stride	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::stride () const$/;"	f	line:136	class:std::gslice	signature:() const
stride	/home/damian/.vim/tags/cpp_src/slice_array.h	/^  slice::stride() const$/;"	f	line:104	class:std::slice	signature:() const
string	/home/damian/.vim/tags/cpp_src/stringfwd.h	/^  typedef basic_string<char>    string;$/;"	t	line:60	namespace:std
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:1669	class:std::numpunct	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:1898	class:std::numpunct_byname	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:2544	class:std::collate	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:3622	class:std::moneypunct	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4006	class:std::moneypunct_byname	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4053	class:std::money_get	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4201	class:std::money_put	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4371	class:std::messages	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT>	string_type;$/;"	t	line:4585	class:std::messages_byname	access:public
string_type	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      typedef basic_string<_CharT> string_type;$/;"	t	line:2719	class:std::collate_byname	access:public
stringfwd.h	/home/damian/.vim/tags/cpp_src/stringfwd.h	1;"	F	line:1
substr	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      substr(size_type __pos = 0, size_type __n = npos) const$/;"	f	line:1911	class:std::basic_string	access:public	signature:(size_type __pos = 0, size_type __n = npos) const
sum	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^    _Expr<_Clos, _Tp>::sum() const$/;"	f	line:294	class:std::_Expr	signature:() const
swap	/home/damian/.vim/tags/cpp_src/basic_string.h	/^    swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,$/;"	f	line:2364	namespace:std	signature:(basic_string<_CharT, _Traits, _Alloc>& __lhs, basic_string<_CharT, _Traits, _Alloc>& __rhs)
swap	/home/damian/.vim/tags/cpp_src/stl_algobase.h	/^    swap(_Tp& __a, _Tp& __b)$/;"	f	line:93	namespace:std	signature:(_Tp& __a, _Tp& __b)
swap	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    swap(reference __x, reference __y)$/;"	f	line:696	class:std::vector	access:public	signature:(reference __x, reference __y)
swap	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    swap(vector<bool, _Alloc>& __x)$/;"	f	line:681	class:std::vector	access:public	signature:(vector<bool, _Alloc>& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      swap(deque& __x)$/;"	f	line:1197	class:std::deque	access:public	signature:(deque& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    swap(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)$/;"	f	line:1603	namespace:std	signature:(deque<_Tp,_Alloc>& __x, deque<_Tp,_Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      swap(list& __x)$/;"	f	line:890	class:std::list	access:public	signature:(list& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_list.h	/^    swap(list<_Tp, _Alloc>& __x, list<_Tp, _Alloc>& __y)$/;"	f	line:1256	namespace:std	signature:(list<_Tp, _Alloc>& __x, list<_Tp, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      swap(map& __x)$/;"	f	line:498	class:std::map	access:public	signature:(map& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_map.h	/^    swap(map<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:734	namespace:std	signature:(map<_Key, _Tp, _Compare, _Alloc>& __x, map<_Key, _Tp, _Compare, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      swap(multimap& __x)$/;"	f	line:435	class:std::multimap	access:public	signature:(multimap& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^    swap(multimap<_Key, _Tp, _Compare, _Alloc>& __x,$/;"	f	line:664	namespace:std	signature:(multimap<_Key, _Tp, _Compare, _Alloc>& __x, multimap<_Key, _Tp, _Compare, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      swap(multiset<_Key, _Compare, _Alloc>& __x)$/;"	f	line:278	class:std::multiset	access:public	signature:(multiset<_Key, _Compare, _Alloc>& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^    swap(multiset<_Key, _Compare, _Alloc>& __x,$/;"	f	line:559	namespace:std	signature:(multiset<_Key, _Compare, _Alloc>& __x, multiset<_Key, _Compare, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      swap(set<_Key,_Compare,_Alloc>& __x)$/;"	f	line:286	class:std::set	access:public	signature:(set<_Key,_Compare,_Alloc>& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_set.h	/^    swap(set<_Key, _Compare, _Alloc>& __x, set<_Key, _Compare, _Alloc>& __y)$/;"	f	line:573	namespace:std	signature:(set<_Key, _Compare, _Alloc>& __x, set<_Key, _Compare, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)$/;"	f	line:921	class:std::_Rb_tree	signature:(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __t)
swap	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    swap(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x,$/;"	f	line:802	namespace:std	signature:(_Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __x, _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>& __y)
swap	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      swap(vector& __x)$/;"	f	line:728	class:std::vector	access:public	signature:(vector& __x)
swap	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    swap(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)$/;"	f	line:987	namespace:std	signature:(vector<_Tp, _Alloc>& __x, vector<_Tp, _Alloc>& __y)
swap_ranges	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,$/;"	f	line:886	namespace:std	signature:(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)
symbol	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
table	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      table() const throw()$/;"	f	line:975	class:std::ctype	access:protected	signature:() const
table_size	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      static const size_t      table_size = 1 + static_cast<unsigned char>(-1);$/;"	m	line:700	class:std::ctype	access:public
thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	line:1740	class:std::numpunct	access:public	signature:() const
thousands_sep	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      thousands_sep() const$/;"	f	line:3698	class:std::moneypunct	access:public	signature:() const
tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      tie() const$/;"	f	line:281	class:std::basic_ios	access:public	signature:() const
tie	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      tie(basic_ostream<_CharT, _Traits>* __tiestr)$/;"	f	line:293	class:std::basic_ios	access:public	signature:(basic_ostream<_CharT, _Traits>* __tiestr)
time	/home/damian/.vim/tags/cpp_src/locale_classes.h	/^    static const category time		= 1L << 3;$/;"	m	line:108	class:std::locale	access:public
time_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^  class time_base$/;"	c	line:2745	namespace:std
time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_get(size_t __refs = 0)$/;"	f	line:3079	class:std::time_get	access:public	signature:(size_t __refs = 0)
time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_get : public locale::facet, public time_base$/;"	c	line:3057	namespace:std	inherits:locale::facet,time_base
time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_get_byname(const char*, size_t __refs = 0)$/;"	f	line:3378	class:std::time_get_byname	access:public	signature:(const char*, size_t __refs = 0)
time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_get_byname : public time_get<_CharT, _InIter>$/;"	c	line:3370	namespace:std	inherits:time_get
time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_put(size_t __refs = 0)$/;"	f	line:3419	class:std::time_put	access:public	signature:(size_t __refs = 0)
time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_put : public locale::facet$/;"	c	line:3398	namespace:std	inherits:locale::facet
time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      time_put_byname(const char*, size_t __refs = 0)$/;"	f	line:3502	class:std::time_put_byname	access:public	signature:(const char*, size_t __refs = 0)
time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    class time_put_byname : public time_put<_CharT, _OutIter>$/;"	c	line:3494	namespace:std	inherits:time_put
to_char_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      to_char_type(const int_type& __c)$/;"	f	line:126	struct:char_traits	access:public	signature:(const int_type& __c)
to_int_type	/home/damian/.vim/tags/cpp_src/char_traits.h	/^      to_int_type(const char_type& __c)$/;"	f	line:130	struct:char_traits	access:public	signature:(const char_type& __c)
tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	line:256	class:std::__ctype_abstract_base	access:public	signature:(char_type __c) const
tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type __c) const$/;"	f	line:830	class:std::ctype	access:public	signature:(char_type __c) const
tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	line:271	class:std::__ctype_abstract_base	access:public	signature:(char_type* __lo, const char_type* __hi) const
tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      tolower(char_type* __lo, const char_type* __hi) const$/;"	f	line:847	class:std::ctype	access:public	signature:(char_type* __lo, const char_type* __hi) const
tolower	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    tolower(_CharT __c, const locale& __loc)$/;"	f	line:4683	namespace:std	signature:(_CharT __c, const locale& __loc)
top	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      top() const$/;"	f	line:398	class:std::priority_queue	access:public	signature:() const
top	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      top() const$/;"	f	line:162	class:std::stack	access:public	signature:() const
top	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      top()$/;"	f	line:151	class:std::stack	access:public	signature:()
toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	line:242	class:std::__ctype_abstract_base	access:public	signature:(char_type *__lo, const char_type* __hi) const
toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type *__lo, const char_type* __hi) const$/;"	f	line:814	class:std::ctype	access:public	signature:(char_type *__lo, const char_type* __hi) const
toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	line:227	class:std::__ctype_abstract_base	access:public	signature:(char_type __c) const
toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      toupper(char_type __c) const$/;"	f	line:797	class:std::ctype	access:public	signature:(char_type __c) const
toupper	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    toupper(_CharT __c, const locale& __loc)$/;"	f	line:4677	namespace:std	signature:(_CharT __c, const locale& __loc)
traits_type	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      typedef _Traits                                traits_type;$/;"	t	line:69	class:std::basic_ios	access:public
traits_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef _Traits					    traits_type;$/;"	t	line:117	class:std::basic_string	access:public
traits_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	line:159	class:std::ostream_iterator	access:public
traits_type	/home/damian/.vim/tags/cpp_src/stream_iterator.h	/^      typedef _Traits                        traits_type;$/;"	t	line:52	class:std::istream_iterator	access:public
traits_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _Traits					traits_type;$/;"	t	line:58	class:std::istreambuf_iterator	access:public
traits_type	/home/damian/.vim/tags/cpp_src/streambuf_iterator.h	/^      typedef _Traits                          traits_type;$/;"	t	line:215	class:std::ostreambuf_iterator	access:public
transform	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      transform(const _CharT* __lo, const _CharT* __hi) const$/;"	f	line:2614	class:std::collate	access:public	signature:(const _CharT* __lo, const _CharT* __hi) const
transform	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    transform(_InputIterator __first, _InputIterator __last,$/;"	f	line:925	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _UnaryOperation __unary_op)
transform	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    transform(_InputIterator1 __first1, _InputIterator1 __last1,$/;"	f	line:960	namespace:std	signature:(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _OutputIterator __result, _BinaryOperation __binary_op)
truename	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      truename() const$/;"	f	line:1784	class:std::numpunct	access:public	signature:() const
trunc	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const openmode trunc =	_S_trunc;$/;"	m	line:380	class:std::ios_base	access:public
try	/home/damian/.vim/tags/cpp_src/exception_defines.h	43;"	d	line:43
unary_function	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    struct unary_function$/;"	s	line:102	namespace:std
unary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      unary_negate(const _Predicate& __x) : _M_pred(__x) {}$/;"	f	line:319	class:std::unary_negate	access:public	signature:(const _Predicate& __x)
unary_negate	/home/damian/.vim/tags/cpp_src/stl_function.h	/^    class unary_negate$/;"	c	line:312	namespace:std	inherits:unary_function
uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:108	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _ForwardIterator __result)
uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const char* __first, const char* __last, char* __result)$/;"	f	line:118	namespace:std	signature:(const char* __first, const char* __last, char* __result)
uninitialized_copy	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^  uninitialized_copy(const wchar_t* __first, const wchar_t* __last,$/;"	f	line:125	namespace:std	signature:(const wchar_t* __first, const wchar_t* __last, wchar_t* __result)
uninitialized_fill	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:170	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __x)
uninitialized_fill_n	/home/damian/.vim/tags/cpp_src/stl_uninitialized.h	/^    uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)$/;"	f	line:215	namespace:std	signature:(_ForwardIterator __first, _Size __n, const _Tp& __x)
unique	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last)$/;"	f	line:1562	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last)
unique	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:1601	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, _BinaryPredicate __binary_pred)
unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1489	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result)
unique_copy	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    unique_copy(_InputIterator __first, _InputIterator __last,$/;"	f	line:1530	namespace:std	signature:(_InputIterator __first, _InputIterator __last, _OutputIterator __result, _BinaryPredicate __binary_pred)
unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags unitbuf =     _S_unitbuf;$/;"	m	line:301	class:std::ios_base	access:public
unitbuf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  unitbuf(ios_base& __base)$/;"	f	line:884	namespace:std	signature:(ios_base& __base)
unsetf	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    unsetf(fmtflags __mask) { _M_flags &= ~__mask; }$/;"	f	line:606	class:std::ios_base	access:public	signature:(fmtflags __mask)
unshift	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      unshift(state_type& __state, extern_type* __to, extern_type* __to_end,$/;"	f	line:159	class:std::__codecvt_abstract_base	access:public	signature:(state_type& __state, extern_type* __to, extern_type* __to_end, extern_type*& __to_next) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:2981	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_algo.h	/^    upper_bound(_ForwardIterator __first, _ForwardIterator __last,$/;"	f	line:3031	namespace:std	signature:(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __val, _Compare __comp)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:618	class:std::map	access:public	signature:(const key_type& __x) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      upper_bound(const key_type& __x)$/;"	f	line:608	class:std::map	access:public	signature:(const key_type& __x)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:552	class:std::multimap	access:public	signature:(const key_type& __x) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      upper_bound(const key_type& __x)$/;"	f	line:542	class:std::multimap	access:public	signature:(const key_type& __x)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:455	class:std::multiset	access:public	signature:(const key_type& __x) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      upper_bound(const key_type& __x)$/;"	f	line:451	class:std::multiset	access:public	signature:(const key_type& __x)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      upper_bound(const key_type& __x) const$/;"	f	line:470	class:std::set	access:public	signature:(const key_type& __x) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      upper_bound(const key_type& __x)$/;"	f	line:466	class:std::set	access:public	signature:(const key_type& __x)
upper_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k) const$/;"	f	line:1478	class:std::_Rb_tree	signature:(const _Key& __k) const
upper_bound	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^    upper_bound(const _Key& __k)$/;"	f	line:1460	class:std::_Rb_tree	signature:(const _Key& __k)
uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    static const fmtflags uppercase =   _S_uppercase;$/;"	m	line:305	class:std::ios_base	access:public
uppercase	/home/damian/.vim/tags/cpp_src/ios_base.h	/^  uppercase(ios_base& __base)$/;"	f	line:868	namespace:std	signature:(ios_base& __base)
valarray_after.h	/home/damian/.vim/tags/cpp_src/valarray_after.h	1;"	F	line:1
valarray_array.h	/home/damian/.vim/tags/cpp_src/valarray_array.h	1;"	F	line:1
valarray_before.h	/home/damian/.vim/tags/cpp_src/valarray_before.h	1;"	F	line:1
value	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum part { none, space, symbol, sign, value };$/;"	e	line:3525	enum:std::money_base::part
value	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typename _Operation::first_argument_type value;$/;"	m	line:398	class:std::binder1st	access:protected
value	/home/damian/.vim/tags/cpp_src/stl_function.h	/^      typename _Operation::second_argument_type value;$/;"	m	line:432	class:std::binder2nd	access:protected
value_comp	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      value_comp() const$/;"	f	line:525	class:std::map	access:public	signature:() const
value_comp	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      value_comp() const$/;"	f	line:462	class:std::multimap	access:public	signature:() const
value_comp	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      value_comp() const$/;"	f	line:208	class:std::multiset	access:public	signature:() const
value_comp	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      value_comp() const$/;"	f	line:218	class:std::set	access:public	signature:() const
value_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^	value_compare(_Compare __c)$/;"	f	line:118	class:std::map::value_compare	access:protected	signature:(_Compare __c)
value_compare	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      class value_compare$/;"	c	line:111	class:std::map	inherits:std::binary_function	access:public
value_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^	value_compare(_Compare __c)$/;"	f	line:117	class:std::multimap::value_compare	access:protected	signature:(_Compare __c)
value_compare	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      class value_compare$/;"	c	line:110	class:std::multimap	inherits:std::binary_function	access:public
value_compare	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Compare value_compare;$/;"	t	line:104	class:std::multiset	access:public
value_compare	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Compare value_compare;$/;"	t	line:109	class:std::set	access:public
value_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef _Tp        value_type;$/;"	t	line:94	class:std::allocator	access:public
value_type	/home/damian/.vim/tags/cpp_src/allocator.h	/^      typedef void        value_type;$/;"	t	line:71	class:std::allocator	access:public
value_type	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      typedef typename _Traits::char_type		    value_type;$/;"	t	line:118	class:std::basic_string	access:public
value_type	/home/damian/.vim/tags/cpp_src/gslice_array.h	/^      typedef _Tp value_type;$/;"	t	line:62	class:std::gslice_array	access:public
value_type	/home/damian/.vim/tags/cpp_src/indirect_array.h	/^      typedef _Tp value_type;$/;"	t	line:64	class:std::indirect_array	access:public
value_type	/home/damian/.vim/tags/cpp_src/mask_array.h	/^      typedef _Tp value_type;$/;"	t	line:64	class:std::mask_array	access:public
value_type	/home/damian/.vim/tags/cpp_src/slice_array.h	/^      typedef _Tp value_type;$/;"	t	line:124	class:std::slice_array	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    typedef bool                                         value_type;$/;"	t	line:461	class:std::vector	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp                                        value_type;$/;"	t	line:640	class:std::deque	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      typedef _Tp                             value_type;$/;"	t	line:111	struct:std::_Deque_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_iterator.h	/^      typedef typename iterator_traits<_Iterator>::value_type  value_type;$/;"	t	line:644	class:__normal_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	line:140	struct:std::iterator_traits	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp                         value_type;$/;"	t	line:150	struct:std::iterator_traits	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef _Tp        value_type;$/;"	t	line:111	struct:std::iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_iterator_base_types.h	/^      typedef typename _Iterator::value_type        value_type;$/;"	t	line:130	struct:std::iterator_traits	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                        value_type;$/;"	t	line:418	class:std::list	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	line:119	struct:std::_List_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      typedef _Tp                                value_type;$/;"	t	line:197	struct:std::_List_const_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_map.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	line:98	class:std::map	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_multimap.h	/^      typedef std::pair<const _Key, _Tp>                    value_type;$/;"	t	line:97	class:std::multimap	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_multiset.h	/^      typedef _Key     value_type;$/;"	t	line:102	class:std::multiset	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:113	class:std::queue	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_queue.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:334	class:std::priority_queue	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_set.h	/^      typedef _Key     value_type;$/;"	t	line:107	class:std::set	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_stack.h	/^      typedef typename _Sequence::value_type                value_type;$/;"	t	line:115	class:std::stack	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      typedef _Tp         value_type;$/;"	t	line:83	class:std::_Temporary_buffer	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp        value_type;$/;"	t	line:224	struct:std::_Rb_tree_const_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Tp  value_type;$/;"	t	line:154	struct:std::_Rb_tree_iterator	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      typedef _Val value_type;$/;"	t	line:341	class:std::_Rb_tree	access:public
value_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef _Tp					 value_type;$/;"	t	line:171	class:std::vector	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:155	struct:std::_IClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:168	class:std::_Expr	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef _Tp value_type;$/;"	t	line:74	class:std::_GBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:108	struct:std::_GClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:144	struct:std::_IClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:97	struct:std::_GClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:121	class:std::_IBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_after.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:52	class:std::_GBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:439	struct:std::_ValFunClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:461	struct:std::_RefFunClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:693	class:std::_SBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef _Tp value_type;$/;"	t	line:728	struct:std::_SClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:429	struct:std::_ValFunClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:449	struct:std::_RefFunClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:495	struct:std::_UnClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:506	struct:std::_UnClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:582	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:592	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:604	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:616	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:628	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:639	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:649	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:659	struct:std::_BinClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Base::value_type value_type;$/;"	t	line:718	struct:std::_SClos	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:410	class:std::_FunBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename _Dom::value_type value_type;$/;"	t	line:671	class:std::_SBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:476	class:std::_UnBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:521	class:std::_BinBase	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:542	class:std::_BinBase2	access:public
value_type	/home/damian/.vim/tags/cpp_src/valarray_before.h	/^      typedef typename __fun<_Oper, _Vt>::result_type value_type;$/;"	t	line:562	class:std::_BinBase1	access:public
vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      vector(_InputIterator __first, _InputIterator __last,$/;"	f	line:505	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(const allocator_type& __a = allocator_type())$/;"	f	line:484	class:std::vector	access:public	signature:(const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(const vector& __x)$/;"	f	line:497	class:std::vector	access:public	signature:(const vector& __x)
vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    vector(size_type __n, const bool& __value = bool(), $/;"	f	line:488	class:std::vector	access:public	signature:(size_type __n, const bool& __value = bool(), const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^  class vector<bool, _Alloc> : protected _Bvector_base<_Alloc>$/;"	c	line:456	namespace:std	inherits:_Bvector_base
vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^        vector(_InputIterator __first, _InputIterator __last,$/;"	f	line:252	class:std::vector	access:public	signature:(_InputIterator __first, _InputIterator __last, const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(const allocator_type& __a = allocator_type())$/;"	f	line:198	class:std::vector	access:public	signature:(const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(const vector& __x)$/;"	f	line:228	class:std::vector	access:public	signature:(const vector& __x)
vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      vector(size_type __n, const value_type& __value = value_type(),$/;"	f	line:210	class:std::vector	access:public	signature:(size_type __n, const value_type& __value = value_type(), const allocator_type& __a = allocator_type())
vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^    class vector : protected _Vector_base<_Tp, _Alloc>$/;"	c	line:159	namespace:std	inherits:_Vector_base
vector_type	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      typedef vector<_Tp, _Alloc>			 vector_type;$/;"	t	line:167	class:std::vector	access:private
widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	line:288	class:std::__ctype_abstract_base	access:public	signature:(char __c) const
widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(char __c) const$/;"	f	line:867	class:std::ctype	access:public	signature:(char __c) const
widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	line:307	class:std::__ctype_abstract_base	access:public	signature:(const char* __lo, const char* __hi, char_type* __to) const
widen	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      widen(const char* __lo, const char* __hi, char_type* __to) const$/;"	f	line:894	class:std::ctype	access:public	signature:(const char* __lo, const char* __hi, char_type* __to) const
width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    width() const { return _M_width; }$/;"	f	line:640	class:std::ios_base	access:public	signature:() const
width	/home/damian/.vim/tags/cpp_src/ios_base.h	/^    width(streamsize __wide)$/;"	f	line:648	class:std::ios_base	access:public	signature:(streamsize __wide)
wstreampos	/home/damian/.vim/tags/cpp_src/postypes.h	/^  typedef fpos<mbstate_t> wstreampos;$/;"	t	line:213	namespace:std
wstring	/home/damian/.vim/tags/cpp_src/stringfwd.h	/^  typedef basic_string<wchar_t> wstring;$/;"	t	line:65	namespace:std
ydm	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
ymd	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    enum dateorder { no_order, dmy, mdy, ymd, ydm };$/;"	e	line:2748	enum:std::time_base::dateorder
~_Bvector_base	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^      ~_Bvector_base()$/;"	f	line:410	struct:std::_Bvector_base	access:public	signature:()
~_Deque_base	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^    ~_Deque_base()$/;"	f	line:458	class:std::_Deque_base	signature:()
~_List_base	/home/damian/.vim/tags/cpp_src/stl_list.h	/^      ~_List_base()$/;"	f	line:347	class:std::_List_base	access:public	signature:()
~_Rb_tree	/home/damian/.vim/tags/cpp_src/stl_tree.h	/^      ~_Rb_tree()$/;"	f	line:591	class:std::_Rb_tree	access:public	signature:()
~_Temporary_buffer	/home/damian/.vim/tags/cpp_src/stl_tempbuf.h	/^      ~_Temporary_buffer()$/;"	f	line:127	class:std::_Temporary_buffer	access:public	signature:()
~_Vector_base	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      ~_Vector_base()$/;"	f	line:119	struct:std::_Vector_base	access:public	signature:()
~__codecvt_abstract_base	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~__codecvt_abstract_base() { }$/;"	f	line:231	class:std::__codecvt_abstract_base	access:protected	signature:()
~__ctype_abstract_base	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~__ctype_abstract_base() { }$/;"	f	line:357	class:std::__ctype_abstract_base	access:protected	signature:()
~__moneypunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __moneypunct_cache<_CharT, _Intl>::~__moneypunct_cache()$/;"	f	line:3597	class:std::__moneypunct_cache	signature:()
~__numpunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __numpunct_cache<_CharT>::~__numpunct_cache()$/;"	f	line:1638	class:std::__numpunct_cache	signature:()
~__timepunct_cache	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^    __timepunct_cache<_CharT>::~__timepunct_cache()$/;"	f	line:2846	class:std::__timepunct_cache	signature:()
~allocator	/home/damian/.vim/tags/cpp_src/allocator.h	/^      ~allocator() throw() { }$/;"	f	line:108	class:std::allocator	access:public	signature:()
~basic_ios	/home/damian/.vim/tags/cpp_src/basic_ios.h	/^      ~basic_ios() { }$/;"	f	line:268	class:std::basic_ios	access:public	signature:()
~basic_string	/home/damian/.vim/tags/cpp_src/basic_string.h	/^      ~basic_string()$/;"	f	line:482	class:std::basic_string	access:public	signature:()
~codecvt	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~codecvt() { }$/;"	f	line:298	class:std::codecvt	access:protected	signature:()
~codecvt_byname	/home/damian/.vim/tags/cpp_src/codecvt.h	/^      ~codecvt_byname() { }$/;"	f	line:469	class:std::codecvt_byname	access:protected	signature:()
~collate	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~collate()$/;"	f	line:2641	class:std::collate	access:protected	signature:()
~collate_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~collate_byname() { }$/;"	f	line:2735	class:std::collate_byname	access:protected	signature:()
~ctype_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~ctype_byname() { };$/;"	f	line:1520	class:std::ctype_byname	access:protected	signature:()
~deque	/home/damian/.vim/tags/cpp_src/stl_deque.h	/^      ~deque()$/;"	f	line:741	class:std::deque	access:public	signature:()
~gslice	/home/damian/.vim/tags/cpp_src/gslice.h	/^  gslice::~gslice()$/;"	f	line:151	class:std::gslice	signature:()
~messages_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~messages_byname()$/;"	f	line:4592	class:std::messages_byname	access:protected	signature:()
~money_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~money_get() { }$/;"	f	line:4134	class:std::money_get	access:protected	signature:()
~money_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~money_put() { }$/;"	f	line:4264	class:std::money_put	access:protected	signature:()
~moneypunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~moneypunct_byname() { }$/;"	f	line:4025	class:std::moneypunct_byname	access:protected	signature:()
~num_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      virtual ~num_get() { }$/;"	f	line:2122	class:std::num_get	access:protected	signature:()
~num_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~num_put() { };$/;"	f	line:2463	class:std::num_put	access:protected	signature:()
~numpunct_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~numpunct_byname() { }$/;"	f	line:1915	class:std::numpunct_byname	access:protected	signature:()
~time_get	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_get() { }$/;"	f	line:3235	class:std::time_get	access:protected	signature:()
~time_get_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_get_byname() { }$/;"	f	line:3383	class:std::time_get_byname	access:protected	signature:()
~time_put	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_put()$/;"	f	line:3465	class:std::time_put	access:protected	signature:()
~time_put_byname	/home/damian/.vim/tags/cpp_src/locale_facets.h	/^      ~time_put_byname() { }$/;"	f	line:3508	class:std::time_put_byname	access:protected	signature:()
~vector	/home/damian/.vim/tags/cpp_src/stl_bvector.h	/^    ~vector() { }$/;"	f	line:513	class:std::vector	access:public	signature:()
~vector	/home/damian/.vim/tags/cpp_src/stl_vector.h	/^      ~vector()$/;"	f	line:267	class:std::vector	access:public	signature:()
