#!/bin/sh

# Plugin manager
# ------------------------------------------------
export ZPLUG_DIR="$HOME/.local/share/zplug"
export ZPLUG_PLUGIN_DIR="$ZPLUG_DIR/plugins"
export ZPLUG_ZSHRC="${ZDOTDIR:-$HOME}/zshrc"

fpath=($ZPLUG_DIR/completion $fpath)
rm -rf "$ZPLUG_DIR/installed_plugins"

_try_source() {
    sourced=false
    plugin_files_names=("$1/$2.plugin.zsh"
        "$plugin_dir/$plugin_name.zsh"
        "$plugin_dir/$plugin_name.zsh-theme"
        "$plugin_dir/${plugin_name#zsh-}.zsh")
    for i in "${plugin_files_names[@]}"; do
        if [ -e "$i" ]; then
            source "$i"
            sourced=true
            break
        fi
    done
}

plug() {
    plugin="$1"
    if [ -f "$plugin" ]; then
        source "$plugin"
    else
        local full_plugin_name="$1"
        local git_ref="$2"
        local plugin_name=$(echo "$full_plugin_name" | cut -d "/" -f 2)
        local plugin_dir="$ZPLUG_PLUGIN_DIR/$plugin_name"
        if [ ! -d "$plugin_dir" ]; then
            echo "ðŸ”Œ$plugin_name"
            git clone "https://github.com/${full_plugin_name}.git" --depth 1 "$plugin_dir" > /dev/null 2>&1
            if [ $? -ne 0 ]; then echo "Failed to clone $plugin_name" && return 1; fi

            if [ -n "$git_ref" ]; then
                git -C "$plugin_dir" checkout "$git_ref" > /dev/null 2>&1
                if [ $? -ne 0 ]; then echo "Failed to checkout $git_ref" && return 1; fi
            fi
            echo -e "\e[1A\e[Kâš¡$plugin_name"
        fi
        _try_source $plugin_dir $plugin_name
        if [[ $sourced == false ]]; then
            echo "Failed to source $full_plugin_name"
        fi
    fi
    if [[ -n $full_plugin_name ]]; then
        echo "$full_plugin_name" >> "$ZPLUG_DIR/installed_plugins"
    fi
}

_pull() {
    echo "ðŸ”Œ $1"
    git pull > /dev/null 2>&1
    if [ $? -ne 0 ]; then echo "Failed to update $1" && exit 1; fi
    echo -e "\e[1A\e[Kâš¡ $1"
}


# Plugins
# ------------------------------------------------
plug "esc/conda-zsh-completion"
plug "zsh-users/zsh-autosuggestions"
plug "hlissner/zsh-autopair"
plug "zap-zsh/vim"
plug "zsh-users/zsh-syntax-highlighting"

# Autosuggestion
ZSH_AUTOSUGGEST_STRATEGY=(completion history)
eval "$(starship init zsh)"
eval "$(atuin init zsh)"

if [ -n "${commands[fzf-share]}" ]; then
  source "$(fzf-share)/key-bindings.zsh"
  source "$(fzf-share)/completion.zsh"
fi
